{"version":3,"file":"match-sorter.umd.js","sources":["../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/remove-accents/index.js","../src/index.js"],"sourcesContent":["export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","var characterMap = {\r\n\t\"À\": \"A\",\r\n\t\"Á\": \"A\",\r\n\t\"Â\": \"A\",\r\n\t\"Ã\": \"A\",\r\n\t\"Ä\": \"A\",\r\n\t\"Å\": \"A\",\r\n\t\"Ấ\": \"A\",\r\n\t\"Ắ\": \"A\",\r\n\t\"Ẳ\": \"A\",\r\n\t\"Ẵ\": \"A\",\r\n\t\"Ặ\": \"A\",\r\n\t\"Æ\": \"AE\",\r\n\t\"Ầ\": \"A\",\r\n\t\"Ằ\": \"A\",\r\n\t\"Ȃ\": \"A\",\r\n\t\"Ç\": \"C\",\r\n\t\"Ḉ\": \"C\",\r\n\t\"È\": \"E\",\r\n\t\"É\": \"E\",\r\n\t\"Ê\": \"E\",\r\n\t\"Ë\": \"E\",\r\n\t\"Ế\": \"E\",\r\n\t\"Ḗ\": \"E\",\r\n\t\"Ề\": \"E\",\r\n\t\"Ḕ\": \"E\",\r\n\t\"Ḝ\": \"E\",\r\n\t\"Ȇ\": \"E\",\r\n\t\"Ì\": \"I\",\r\n\t\"Í\": \"I\",\r\n\t\"Î\": \"I\",\r\n\t\"Ï\": \"I\",\r\n\t\"Ḯ\": \"I\",\r\n\t\"Ȋ\": \"I\",\r\n\t\"Ð\": \"D\",\r\n\t\"Ñ\": \"N\",\r\n\t\"Ò\": \"O\",\r\n\t\"Ó\": \"O\",\r\n\t\"Ô\": \"O\",\r\n\t\"Õ\": \"O\",\r\n\t\"Ö\": \"O\",\r\n\t\"Ø\": \"O\",\r\n\t\"Ố\": \"O\",\r\n\t\"Ṍ\": \"O\",\r\n\t\"Ṓ\": \"O\",\r\n\t\"Ȏ\": \"O\",\r\n\t\"Ù\": \"U\",\r\n\t\"Ú\": \"U\",\r\n\t\"Û\": \"U\",\r\n\t\"Ü\": \"U\",\r\n\t\"Ý\": \"Y\",\r\n\t\"à\": \"a\",\r\n\t\"á\": \"a\",\r\n\t\"â\": \"a\",\r\n\t\"ã\": \"a\",\r\n\t\"ä\": \"a\",\r\n\t\"å\": \"a\",\r\n\t\"ấ\": \"a\",\r\n\t\"ắ\": \"a\",\r\n\t\"ẳ\": \"a\",\r\n\t\"ẵ\": \"a\",\r\n\t\"ặ\": \"a\",\r\n\t\"æ\": \"ae\",\r\n\t\"ầ\": \"a\",\r\n\t\"ằ\": \"a\",\r\n\t\"ȃ\": \"a\",\r\n\t\"ç\": \"c\",\r\n\t\"ḉ\": \"c\",\r\n\t\"è\": \"e\",\r\n\t\"é\": \"e\",\r\n\t\"ê\": \"e\",\r\n\t\"ë\": \"e\",\r\n\t\"ế\": \"e\",\r\n\t\"ḗ\": \"e\",\r\n\t\"ề\": \"e\",\r\n\t\"ḕ\": \"e\",\r\n\t\"ḝ\": \"e\",\r\n\t\"ȇ\": \"e\",\r\n\t\"ì\": \"i\",\r\n\t\"í\": \"i\",\r\n\t\"î\": \"i\",\r\n\t\"ï\": \"i\",\r\n\t\"ḯ\": \"i\",\r\n\t\"ȋ\": \"i\",\r\n\t\"ð\": \"d\",\r\n\t\"ñ\": \"n\",\r\n\t\"ò\": \"o\",\r\n\t\"ó\": \"o\",\r\n\t\"ô\": \"o\",\r\n\t\"õ\": \"o\",\r\n\t\"ö\": \"o\",\r\n\t\"ø\": \"o\",\r\n\t\"ố\": \"o\",\r\n\t\"ṍ\": \"o\",\r\n\t\"ṓ\": \"o\",\r\n\t\"ȏ\": \"o\",\r\n\t\"ù\": \"u\",\r\n\t\"ú\": \"u\",\r\n\t\"û\": \"u\",\r\n\t\"ü\": \"u\",\r\n\t\"ý\": \"y\",\r\n\t\"ÿ\": \"y\",\r\n\t\"Ā\": \"A\",\r\n\t\"ā\": \"a\",\r\n\t\"Ă\": \"A\",\r\n\t\"ă\": \"a\",\r\n\t\"Ą\": \"A\",\r\n\t\"ą\": \"a\",\r\n\t\"Ć\": \"C\",\r\n\t\"ć\": \"c\",\r\n\t\"Ĉ\": \"C\",\r\n\t\"ĉ\": \"c\",\r\n\t\"Ċ\": \"C\",\r\n\t\"ċ\": \"c\",\r\n\t\"Č\": \"C\",\r\n\t\"č\": \"c\",\r\n\t\"C̆\": \"C\",\r\n\t\"c̆\": \"c\",\r\n\t\"Ď\": \"D\",\r\n\t\"ď\": \"d\",\r\n\t\"Đ\": \"D\",\r\n\t\"đ\": \"d\",\r\n\t\"Ē\": \"E\",\r\n\t\"ē\": \"e\",\r\n\t\"Ĕ\": \"E\",\r\n\t\"ĕ\": \"e\",\r\n\t\"Ė\": \"E\",\r\n\t\"ė\": \"e\",\r\n\t\"Ę\": \"E\",\r\n\t\"ę\": \"e\",\r\n\t\"Ě\": \"E\",\r\n\t\"ě\": \"e\",\r\n\t\"Ĝ\": \"G\",\r\n\t\"Ǵ\": \"G\",\r\n\t\"ĝ\": \"g\",\r\n\t\"ǵ\": \"g\",\r\n\t\"Ğ\": \"G\",\r\n\t\"ğ\": \"g\",\r\n\t\"Ġ\": \"G\",\r\n\t\"ġ\": \"g\",\r\n\t\"Ģ\": \"G\",\r\n\t\"ģ\": \"g\",\r\n\t\"Ĥ\": \"H\",\r\n\t\"ĥ\": \"h\",\r\n\t\"Ħ\": \"H\",\r\n\t\"ħ\": \"h\",\r\n\t\"Ḫ\": \"H\",\r\n\t\"ḫ\": \"h\",\r\n\t\"Ĩ\": \"I\",\r\n\t\"ĩ\": \"i\",\r\n\t\"Ī\": \"I\",\r\n\t\"ī\": \"i\",\r\n\t\"Ĭ\": \"I\",\r\n\t\"ĭ\": \"i\",\r\n\t\"Į\": \"I\",\r\n\t\"į\": \"i\",\r\n\t\"İ\": \"I\",\r\n\t\"ı\": \"i\",\r\n\t\"Ĳ\": \"IJ\",\r\n\t\"ĳ\": \"ij\",\r\n\t\"Ĵ\": \"J\",\r\n\t\"ĵ\": \"j\",\r\n\t\"Ķ\": \"K\",\r\n\t\"ķ\": \"k\",\r\n\t\"Ḱ\": \"K\",\r\n\t\"ḱ\": \"k\",\r\n\t\"K̆\": \"K\",\r\n\t\"k̆\": \"k\",\r\n\t\"Ĺ\": \"L\",\r\n\t\"ĺ\": \"l\",\r\n\t\"Ļ\": \"L\",\r\n\t\"ļ\": \"l\",\r\n\t\"Ľ\": \"L\",\r\n\t\"ľ\": \"l\",\r\n\t\"Ŀ\": \"L\",\r\n\t\"ŀ\": \"l\",\r\n\t\"Ł\": \"l\",\r\n\t\"ł\": \"l\",\r\n\t\"Ḿ\": \"M\",\r\n\t\"ḿ\": \"m\",\r\n\t\"M̆\": \"M\",\r\n\t\"m̆\": \"m\",\r\n\t\"Ń\": \"N\",\r\n\t\"ń\": \"n\",\r\n\t\"Ņ\": \"N\",\r\n\t\"ņ\": \"n\",\r\n\t\"Ň\": \"N\",\r\n\t\"ň\": \"n\",\r\n\t\"ŉ\": \"n\",\r\n\t\"N̆\": \"N\",\r\n\t\"n̆\": \"n\",\r\n\t\"Ō\": \"O\",\r\n\t\"ō\": \"o\",\r\n\t\"Ŏ\": \"O\",\r\n\t\"ŏ\": \"o\",\r\n\t\"Ő\": \"O\",\r\n\t\"ő\": \"o\",\r\n\t\"Œ\": \"OE\",\r\n\t\"œ\": \"oe\",\r\n\t\"P̆\": \"P\",\r\n\t\"p̆\": \"p\",\r\n\t\"Ŕ\": \"R\",\r\n\t\"ŕ\": \"r\",\r\n\t\"Ŗ\": \"R\",\r\n\t\"ŗ\": \"r\",\r\n\t\"Ř\": \"R\",\r\n\t\"ř\": \"r\",\r\n\t\"R̆\": \"R\",\r\n\t\"r̆\": \"r\",\r\n\t\"Ȓ\": \"R\",\r\n\t\"ȓ\": \"r\",\r\n\t\"Ś\": \"S\",\r\n\t\"ś\": \"s\",\r\n\t\"Ŝ\": \"S\",\r\n\t\"ŝ\": \"s\",\r\n\t\"Ş\": \"S\",\r\n\t\"Ș\": \"S\",\r\n\t\"ș\": \"s\",\r\n\t\"ş\": \"s\",\r\n\t\"Š\": \"S\",\r\n\t\"š\": \"s\",\r\n\t\"Ţ\": \"T\",\r\n\t\"ţ\": \"t\",\r\n\t\"ț\": \"t\",\r\n\t\"Ț\": \"T\",\r\n\t\"Ť\": \"T\",\r\n\t\"ť\": \"t\",\r\n\t\"Ŧ\": \"T\",\r\n\t\"ŧ\": \"t\",\r\n\t\"T̆\": \"T\",\r\n\t\"t̆\": \"t\",\r\n\t\"Ũ\": \"U\",\r\n\t\"ũ\": \"u\",\r\n\t\"Ū\": \"U\",\r\n\t\"ū\": \"u\",\r\n\t\"Ŭ\": \"U\",\r\n\t\"ŭ\": \"u\",\r\n\t\"Ů\": \"U\",\r\n\t\"ů\": \"u\",\r\n\t\"Ű\": \"U\",\r\n\t\"ű\": \"u\",\r\n\t\"Ų\": \"U\",\r\n\t\"ų\": \"u\",\r\n\t\"Ȗ\": \"U\",\r\n\t\"ȗ\": \"u\",\r\n\t\"V̆\": \"V\",\r\n\t\"v̆\": \"v\",\r\n\t\"Ŵ\": \"W\",\r\n\t\"ŵ\": \"w\",\r\n\t\"Ẃ\": \"W\",\r\n\t\"ẃ\": \"w\",\r\n\t\"X̆\": \"X\",\r\n\t\"x̆\": \"x\",\r\n\t\"Ŷ\": \"Y\",\r\n\t\"ŷ\": \"y\",\r\n\t\"Ÿ\": \"Y\",\r\n\t\"Y̆\": \"Y\",\r\n\t\"y̆\": \"y\",\r\n\t\"Ź\": \"Z\",\r\n\t\"ź\": \"z\",\r\n\t\"Ż\": \"Z\",\r\n\t\"ż\": \"z\",\r\n\t\"Ž\": \"Z\",\r\n\t\"ž\": \"z\",\r\n\t\"ſ\": \"s\",\r\n\t\"ƒ\": \"f\",\r\n\t\"Ơ\": \"O\",\r\n\t\"ơ\": \"o\",\r\n\t\"Ư\": \"U\",\r\n\t\"ư\": \"u\",\r\n\t\"Ǎ\": \"A\",\r\n\t\"ǎ\": \"a\",\r\n\t\"Ǐ\": \"I\",\r\n\t\"ǐ\": \"i\",\r\n\t\"Ǒ\": \"O\",\r\n\t\"ǒ\": \"o\",\r\n\t\"Ǔ\": \"U\",\r\n\t\"ǔ\": \"u\",\r\n\t\"Ǖ\": \"U\",\r\n\t\"ǖ\": \"u\",\r\n\t\"Ǘ\": \"U\",\r\n\t\"ǘ\": \"u\",\r\n\t\"Ǚ\": \"U\",\r\n\t\"ǚ\": \"u\",\r\n\t\"Ǜ\": \"U\",\r\n\t\"ǜ\": \"u\",\r\n\t\"Ứ\": \"U\",\r\n\t\"ứ\": \"u\",\r\n\t\"Ṹ\": \"U\",\r\n\t\"ṹ\": \"u\",\r\n\t\"Ǻ\": \"A\",\r\n\t\"ǻ\": \"a\",\r\n\t\"Ǽ\": \"AE\",\r\n\t\"ǽ\": \"ae\",\r\n\t\"Ǿ\": \"O\",\r\n\t\"ǿ\": \"o\",\r\n\t\"Þ\": \"TH\",\r\n\t\"þ\": \"th\",\r\n\t\"Ṕ\": \"P\",\r\n\t\"ṕ\": \"p\",\r\n\t\"Ṥ\": \"S\",\r\n\t\"ṥ\": \"s\",\r\n\t\"X́\": \"X\",\r\n\t\"x́\": \"x\",\r\n\t\"Ѓ\": \"Г\",\r\n\t\"ѓ\": \"г\",\r\n\t\"Ќ\": \"К\",\r\n\t\"ќ\": \"к\",\r\n\t\"A̋\": \"A\",\r\n\t\"a̋\": \"a\",\r\n\t\"E̋\": \"E\",\r\n\t\"e̋\": \"e\",\r\n\t\"I̋\": \"I\",\r\n\t\"i̋\": \"i\",\r\n\t\"Ǹ\": \"N\",\r\n\t\"ǹ\": \"n\",\r\n\t\"Ồ\": \"O\",\r\n\t\"ồ\": \"o\",\r\n\t\"Ṑ\": \"O\",\r\n\t\"ṑ\": \"o\",\r\n\t\"Ừ\": \"U\",\r\n\t\"ừ\": \"u\",\r\n\t\"Ẁ\": \"W\",\r\n\t\"ẁ\": \"w\",\r\n\t\"Ỳ\": \"Y\",\r\n\t\"ỳ\": \"y\",\r\n\t\"Ȁ\": \"A\",\r\n\t\"ȁ\": \"a\",\r\n\t\"Ȅ\": \"E\",\r\n\t\"ȅ\": \"e\",\r\n\t\"Ȉ\": \"I\",\r\n\t\"ȉ\": \"i\",\r\n\t\"Ȍ\": \"O\",\r\n\t\"ȍ\": \"o\",\r\n\t\"Ȑ\": \"R\",\r\n\t\"ȑ\": \"r\",\r\n\t\"Ȕ\": \"U\",\r\n\t\"ȕ\": \"u\",\r\n\t\"B̌\": \"B\",\r\n\t\"b̌\": \"b\",\r\n\t\"Č̣\": \"C\",\r\n\t\"č̣\": \"c\",\r\n\t\"Ê̌\": \"E\",\r\n\t\"ê̌\": \"e\",\r\n\t\"F̌\": \"F\",\r\n\t\"f̌\": \"f\",\r\n\t\"Ǧ\": \"G\",\r\n\t\"ǧ\": \"g\",\r\n\t\"Ȟ\": \"H\",\r\n\t\"ȟ\": \"h\",\r\n\t\"J̌\": \"J\",\r\n\t\"ǰ\": \"j\",\r\n\t\"Ǩ\": \"K\",\r\n\t\"ǩ\": \"k\",\r\n\t\"M̌\": \"M\",\r\n\t\"m̌\": \"m\",\r\n\t\"P̌\": \"P\",\r\n\t\"p̌\": \"p\",\r\n\t\"Q̌\": \"Q\",\r\n\t\"q̌\": \"q\",\r\n\t\"Ř̩\": \"R\",\r\n\t\"ř̩\": \"r\",\r\n\t\"Ṧ\": \"S\",\r\n\t\"ṧ\": \"s\",\r\n\t\"V̌\": \"V\",\r\n\t\"v̌\": \"v\",\r\n\t\"W̌\": \"W\",\r\n\t\"w̌\": \"w\",\r\n\t\"X̌\": \"X\",\r\n\t\"x̌\": \"x\",\r\n\t\"Y̌\": \"Y\",\r\n\t\"y̌\": \"y\",\r\n\t\"A̧\": \"A\",\r\n\t\"a̧\": \"a\",\r\n\t\"B̧\": \"B\",\r\n\t\"b̧\": \"b\",\r\n\t\"Ḑ\": \"D\",\r\n\t\"ḑ\": \"d\",\r\n\t\"Ȩ\": \"E\",\r\n\t\"ȩ\": \"e\",\r\n\t\"Ɛ̧\": \"E\",\r\n\t\"ɛ̧\": \"e\",\r\n\t\"Ḩ\": \"H\",\r\n\t\"ḩ\": \"h\",\r\n\t\"I̧\": \"I\",\r\n\t\"i̧\": \"i\",\r\n\t\"Ɨ̧\": \"I\",\r\n\t\"ɨ̧\": \"i\",\r\n\t\"M̧\": \"M\",\r\n\t\"m̧\": \"m\",\r\n\t\"O̧\": \"O\",\r\n\t\"o̧\": \"o\",\r\n\t\"Q̧\": \"Q\",\r\n\t\"q̧\": \"q\",\r\n\t\"U̧\": \"U\",\r\n\t\"u̧\": \"u\",\r\n\t\"X̧\": \"X\",\r\n\t\"x̧\": \"x\",\r\n\t\"Z̧\": \"Z\",\r\n\t\"z̧\": \"z\",\r\n};\r\n\r\nvar chars = Object.keys(characterMap).join('|');\r\nvar allAccents = new RegExp(chars, 'g');\r\nvar firstAccent = new RegExp(chars, '');\r\n\r\nvar removeAccents = function(string) {\t\r\n\treturn string.replace(allAccents, function(match) {\r\n\t\treturn characterMap[match];\r\n\t});\r\n};\r\n\r\nvar hasAccents = function(string) {\r\n\treturn !!string.match(firstAccent);\r\n};\r\n\r\nmodule.exports = removeAccents;\r\nmodule.exports.has = hasAccents;\r\nmodule.exports.remove = removeAccents;\r\n","/**\n * @name match-sorter\n * @license MIT license.\n * @copyright (c) 2020 Kent C. Dodds\n * @author Kent C. Dodds <me@kentcdodds.com> (https://kentcdodds.com)\n */\nimport removeAccents from 'remove-accents'\n\nconst rankings = {\n  CASE_SENSITIVE_EQUAL: 7,\n  EQUAL: 6,\n  STARTS_WITH: 5,\n  WORD_STARTS_WITH: 4,\n  CONTAINS: 3,\n  ACRONYM: 2,\n  MATCHES: 1,\n  NO_MATCH: 0,\n}\n\nmatchSorter.rankings = rankings\n\nconst defaultBaseSortFn = (a, b) =>\n  String(a.rankedItem).localeCompare(b.rankedItem)\n\n/**\n * Takes an array of items and a value and returns a new array with the items that match the given value\n * @param {Array} items - the items to sort\n * @param {String} value - the value to use for ranking\n * @param {Object} options - Some options to configure the sorter\n * @return {Array} - the new sorted array\n */\nfunction matchSorter(items, value, options = {}) {\n  const {\n    keys,\n    threshold = rankings.MATCHES,\n    baseSort = defaultBaseSortFn,\n  } = options\n  const matchedItems = items.reduce(reduceItemsToRanked, [])\n  return matchedItems\n    .sort((a, b) => sortRankedItems(a, b, baseSort))\n    .map(({item}) => item)\n\n  function reduceItemsToRanked(matches, item, index) {\n    const {\n      rankedItem,\n      rank,\n      keyIndex,\n      keyThreshold = threshold,\n    } = getHighestRanking(item, keys, value, options)\n    if (rank >= keyThreshold) {\n      matches.push({rankedItem, item, rank, index, keyIndex})\n    }\n    return matches\n  }\n}\n\n/**\n * Gets the highest ranking for value for the given item based on its values for the given keys\n * @param {*} item - the item to rank\n * @param {Array} keys - the keys to get values from the item for the ranking\n * @param {String} value - the value to rank against\n * @param {Object} options - options to control the ranking\n * @return {{rank: Number, keyIndex: Number, keyThreshold: Number}} - the highest ranking\n */\nfunction getHighestRanking(item, keys, value, options) {\n  if (!keys) {\n    return {\n      // ends up being duplicate of 'item' in matches but consistent\n      rankedItem: item,\n      rank: getMatchRanking(item, value, options),\n      keyIndex: -1,\n      keyThreshold: options.threshold,\n    }\n  }\n  const valuesToRank = getAllValuesToRank(item, keys)\n  return valuesToRank.reduce(\n    (\n      {rank, rankedItem, keyIndex, keyThreshold},\n      {itemValue, attributes},\n      i,\n    ) => {\n      let newRank = getMatchRanking(itemValue, value, options)\n      let newRankedItem = rankedItem\n      const {minRanking, maxRanking, threshold} = attributes\n      if (newRank < minRanking && newRank >= rankings.MATCHES) {\n        newRank = minRanking\n      } else if (newRank > maxRanking) {\n        newRank = maxRanking\n      }\n      if (newRank > rank) {\n        rank = newRank\n        keyIndex = i\n        keyThreshold = threshold\n        newRankedItem = itemValue\n      }\n      return {rankedItem: newRankedItem, rank, keyIndex, keyThreshold}\n    },\n    {rank: rankings.NO_MATCH, keyIndex: -1, keyThreshold: options.threshold},\n  )\n}\n\n/**\n * Gives a rankings score based on how well the two strings match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Object} options - options for the match (like keepDiacritics for comparison)\n * @returns {Number} the ranking for how well stringToRank matches testString\n */\nfunction getMatchRanking(testString, stringToRank, options) {\n  /* eslint complexity:[2, 12] */\n  testString = prepareValueForComparison(testString, options)\n  stringToRank = prepareValueForComparison(stringToRank, options)\n\n  // too long\n  if (stringToRank.length > testString.length) {\n    return rankings.NO_MATCH\n  }\n\n  // case sensitive equals\n  if (testString === stringToRank) {\n    return rankings.CASE_SENSITIVE_EQUAL\n  }\n\n  // Lower casing before further comparison\n  testString = testString.toLowerCase()\n  stringToRank = stringToRank.toLowerCase()\n\n  // case insensitive equals\n  if (testString === stringToRank) {\n    return rankings.EQUAL\n  }\n\n  // starts with\n  if (testString.indexOf(stringToRank) === 0) {\n    return rankings.STARTS_WITH\n  }\n\n  // word starts with\n  if (testString.indexOf(` ${stringToRank}`) !== -1) {\n    return rankings.WORD_STARTS_WITH\n  }\n\n  // contains\n  if (testString.indexOf(stringToRank) !== -1) {\n    return rankings.CONTAINS\n  } else if (stringToRank.length === 1) {\n    // If the only character in the given stringToRank\n    //   isn't even contained in the testString, then\n    //   it's definitely not a match.\n    return rankings.NO_MATCH\n  }\n\n  // acronym\n  if (getAcronym(testString).indexOf(stringToRank) !== -1) {\n    return rankings.ACRONYM\n  }\n\n  // will return a number between rankings.MATCHES and\n  // rankings.MATCHES + 1 depending  on how close of a match it is.\n  return getClosenessRanking(testString, stringToRank)\n}\n\n/**\n * Generates an acronym for a string.\n *\n * @param {String} string the string for which to produce the acronym\n * @returns {String} the acronym\n */\nfunction getAcronym(string) {\n  let acronym = ''\n  const wordsInString = string.split(' ')\n  wordsInString.forEach(wordInString => {\n    const splitByHyphenWords = wordInString.split('-')\n    splitByHyphenWords.forEach(splitByHyphenWord => {\n      acronym += splitByHyphenWord.substr(0, 1)\n    })\n  })\n  return acronym\n}\n\n/**\n * Returns a score based on how spread apart the\n * characters from the stringToRank are within the testString.\n * A number close to rankings.MATCHES represents a loose match. A number close\n * to rankings.MATCHES + 1 represents a tighter match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @returns {Number} the number between rankings.MATCHES and\n * rankings.MATCHES + 1 for how well stringToRank matches testString\n */\nfunction getClosenessRanking(testString, stringToRank) {\n  let matchingInOrderCharCount = 0\n  let charNumber = 0\n  function findMatchingCharacter(matchChar, string, index) {\n    for (let j = index; j < string.length; j++) {\n      const stringChar = string[j]\n      if (stringChar === matchChar) {\n        matchingInOrderCharCount += 1\n        return j + 1\n      }\n    }\n    return -1\n  }\n  function getRanking(spread) {\n    const spreadPercentage = 1 / spread\n    const inOrderPercentage = matchingInOrderCharCount / stringToRank.length\n    const ranking = rankings.MATCHES + inOrderPercentage * spreadPercentage\n    return ranking\n  }\n  const firstIndex = findMatchingCharacter(stringToRank[0], testString, 0)\n  if (firstIndex < 0) {\n    return rankings.NO_MATCH\n  }\n  charNumber = firstIndex\n  for (let i = 1; i < stringToRank.length; i++) {\n    const matchChar = stringToRank[i]\n    charNumber = findMatchingCharacter(matchChar, testString, charNumber)\n    const found = charNumber > -1\n    if (!found) {\n      return rankings.NO_MATCH\n    }\n  }\n\n  const spread = charNumber - firstIndex\n  return getRanking(spread)\n}\n\n/**\n * Sorts items that have a rank, index, and keyIndex\n * @param {Object} a - the first item to sort\n * @param {Object} b - the second item to sort\n * @return {Number} -1 if a should come first, 1 if b should come first, 0 if equal\n */\nfunction sortRankedItems(a, b, baseSort) {\n  const aFirst = -1\n  const bFirst = 1\n  const {rank: aRank, keyIndex: aKeyIndex} = a\n  const {rank: bRank, keyIndex: bKeyIndex} = b\n  const same = aRank === bRank\n  if (same) {\n    if (aKeyIndex === bKeyIndex) {\n      // use the base sort function as a tie-breaker\n      return baseSort(a, b)\n    } else {\n      return aKeyIndex < bKeyIndex ? aFirst : bFirst\n    }\n  } else {\n    return aRank > bRank ? aFirst : bFirst\n  }\n}\n\n/**\n * Prepares value for comparison by stringifying it, removing diacritics (if specified)\n * @param {String} value - the value to clean\n * @param {Object} options - {keepDiacritics: whether to remove diacritics}\n * @return {String} the prepared value\n */\nfunction prepareValueForComparison(value, {keepDiacritics}) {\n  value = `${value}` // toString\n  if (!keepDiacritics) {\n    value = removeAccents(value)\n  }\n  return value\n}\n\n/**\n * Gets value for key in item at arbitrarily nested keypath\n * @param {Object} item - the item\n * @param {Object|Function} key - the potentially nested keypath or property callback\n * @return {Array} - an array containing the value(s) at the nested keypath\n */\nfunction getItemValues(item, key) {\n  if (typeof key === 'object') {\n    key = key.key\n  }\n  let value\n  if (typeof key === 'function') {\n    value = key(item)\n    // eslint-disable-next-line no-negated-condition\n  } else if (key.indexOf('.') !== -1) {\n    // handle nested keys\n    value = key\n      .split('.')\n      .reduce(\n        (itemObj, nestedKey) => (itemObj ? itemObj[nestedKey] : null),\n        item,\n      )\n  } else {\n    value = item[key]\n  }\n  // concat because `value` can be a string or an array\n  // eslint-disable-next-line\n  return value != null ? [].concat(value) : null\n}\n\n/**\n * Gets all the values for the given keys in the given item and returns an array of those values\n * @param {Object} item - the item from which the values will be retrieved\n * @param {Array} keys - the keys to use to retrieve the values\n * @return {Array} objects with {itemValue, attributes}\n */\nfunction getAllValuesToRank(item, keys) {\n  return keys.reduce((allVals, key) => {\n    const values = getItemValues(item, key)\n    if (values) {\n      values.forEach(itemValue => {\n        allVals.push({\n          itemValue,\n          attributes: getKeyAttributes(key),\n        })\n      })\n    }\n    return allVals\n  }, [])\n}\n\n/**\n * Gets all the attributes for the given key\n * @param {Object|String} key - the key from which the attributes will be retrieved\n * @return {Object} object containing the key's attributes\n */\nfunction getKeyAttributes(key) {\n  if (typeof key === 'string') {\n    key = {key}\n  }\n  return {\n    maxRanking: Infinity,\n    minRanking: -Infinity,\n    ...key,\n  }\n}\n\nexport {matchSorter, rankings}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","characterMap","chars","keys","join","allAccents","RegExp","firstAccent","removeAccents","string","replace","match","hasAccents","rankings","CASE_SENSITIVE_EQUAL","EQUAL","STARTS_WITH","WORD_STARTS_WITH","CONTAINS","ACRONYM","MATCHES","NO_MATCH","matchSorter","defaultBaseSortFn","a","b","String","rankedItem","localeCompare","items","value","options","threshold","baseSort","matchedItems","reduce","reduceItemsToRanked","sort","sortRankedItems","map","item","matches","index","getHighestRanking","rank","keyIndex","keyThreshold","push","getMatchRanking","valuesToRank","getAllValuesToRank","itemValue","attributes","newRank","newRankedItem","minRanking","maxRanking","testString","stringToRank","prepareValueForComparison","toLowerCase","indexOf","getAcronym","getClosenessRanking","acronym","wordsInString","split","forEach","wordInString","splitByHyphenWords","splitByHyphenWord","substr","matchingInOrderCharCount","charNumber","findMatchingCharacter","matchChar","j","stringChar","getRanking","spread","inOrderPercentage","ranking","firstIndex","found","aFirst","bFirst","aRank","aKeyIndex","bRank","bKeyIndex","keepDiacritics","getItemValues","itemObj","nestedKey","concat","allVals","values","getKeyAttributes","Infinity"],"mappings":"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"}