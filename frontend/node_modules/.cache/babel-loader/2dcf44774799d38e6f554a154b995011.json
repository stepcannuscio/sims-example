{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/components/OutsideAlerter.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n/**\n * Hook that alerts clicks outside of the passed ref\n */\n\nfunction useOutsideAlerter(ref) {\n  _s();\n\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        alert(\"You clicked outside of me!\");\n      }\n    } // Bind the event listener\n\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n}\n/**\n * Component that alerts if you click outside of it\n */\n\n\n_s(useOutsideAlerter, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nfunction OutsideAlerter(props) {\n  _s2();\n\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(OutsideAlerter, \"kF1gJ+9qozGrx9T2BaxcGZVoPDQ=\", false, function () {\n  return [useOutsideAlerter];\n});\n\n_c = OutsideAlerter;\nOutsideAlerter.propTypes = {\n  children: PropTypes.element.isRequired\n};\nexport default OutsideAlerter;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutsideAlerter\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/components/OutsideAlerter.js"],"names":["React","useRef","useEffect","PropTypes","useOutsideAlerter","ref","handleClickOutside","event","current","contains","target","alert","document","addEventListener","removeEventListener","OutsideAlerter","props","wrapperRef","children","propTypes","element","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;AACA;AACA;;AACA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgC;AAAA;;AAC9BH,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AACI,aAASI,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,UAAIF,GAAG,CAACG,OAAJ,IAAe,CAACH,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtDC,QAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AACF,KARa,CASd;;;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCP,kBAAvC;AACA,WAAO,MAAM;AACX;AACAM,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CR,kBAA1C;AACD,KAHD;AAID,GAfQ,EAeN,CAACD,GAAD,CAfM,CAAT;AAgBD;AAED;AACA;AACA;;;GArBSD,iB;;AAsBT,SAASW,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B,QAAMC,UAAU,GAAGhB,MAAM,CAAC,IAAD,CAAzB;AACAG,EAAAA,iBAAiB,CAACa,UAAD,CAAjB;AAEA,sBAAO;AAAK,IAAA,GAAG,EAAEA,UAAV;AAAA,cAAuBD,KAAK,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;IALQH,c;UAEPX,iB;;;KAFOW,c;AAOTA,cAAc,CAACI,SAAf,GAA2B;AACzBD,EAAAA,QAAQ,EAAEf,SAAS,CAACiB,OAAV,CAAkBC;AADH,CAA3B;AAIA,eAAeN,cAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(ref) {\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        alert(\"You clicked outside of me!\");\n      }\n    }\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nfunction OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n\n  return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nOutsideAlerter.propTypes = {\n  children: PropTypes.element.isRequired\n};\n\nexport default OutsideAlerter;\n"]},"metadata":{},"sourceType":"module"}