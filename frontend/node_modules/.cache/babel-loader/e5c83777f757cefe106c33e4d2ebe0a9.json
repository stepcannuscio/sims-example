{"ast":null,"code":"const formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 0\n});\n\nfunction sortStockLevel(rowA, rowB) {\n  const a = rowA.values.stockLevel;\n  const b = rowB.values.stockLevel;\n\n  if (a === \"High\" && [\"Low\", \"Medium\", \"High\"].includes(b)) {\n    return 1;\n  } else if (a === \"Medium\" && [\"Low\", \"Medium\"].includes(b)) {\n    return 1;\n  } else if (a === \"Low\" && b === \"Low\") {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n\nfunction sortMoney(rowA, rowB) {\n  if (Number(rowA.values.revenue_earned.replace(/(^\\$|,)/g, '')) > Number(rowB.values.revenue_earned.replace(/(^\\$|,)/g, ''))) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n\nexport { formatter, sortStockLevel, sortMoney };","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/helpers.js"],"names":["formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","sortStockLevel","rowA","rowB","a","values","stockLevel","b","includes","sortMoney","Number","revenue_earned","replace"],"mappings":"AACA,MAAMA,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC7CC,EAAAA,KAAK,EAAE,UADsC;AAE7CC,EAAAA,QAAQ,EAAE,KAFmC;AAG7CC,EAAAA,qBAAqB,EAAE;AAHsB,CAA/B,CAAlB;;AAMA,SAASC,cAAT,CAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;AAEhC,QAAMC,CAAC,GAAGF,IAAI,CAACG,MAAL,CAAYC,UAAtB;AACA,QAAMC,CAAC,GAAGJ,IAAI,CAACE,MAAL,CAAYC,UAAtB;;AAEA,MAAIF,CAAC,KAAK,MAAN,IAAgB,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0BI,QAA1B,CAAmCD,CAAnC,CAApB,EAA2D;AACvD,WAAO,CAAP;AACH,GAFD,MAEO,IAAIH,CAAC,KAAK,QAAN,IAAkB,CAAC,KAAD,EAAQ,QAAR,EAAkBI,QAAlB,CAA2BD,CAA3B,CAAtB,EAAqD;AACxD,WAAO,CAAP;AACH,GAFM,MAEA,IAAIH,CAAC,KAAK,KAAN,IAAeG,CAAC,KAAK,KAAzB,EAAgC;AACnC,WAAO,CAAP;AACH,GAFM,MAEA;AACH,WAAO,CAAC,CAAR;AACH;AACJ;;AAED,SAASE,SAAT,CAAmBP,IAAnB,EAAyBC,IAAzB,EAA+B;AAE3B,MAAIO,MAAM,CAACR,IAAI,CAACG,MAAL,CAAYM,cAAZ,CAA2BC,OAA3B,CAAmC,UAAnC,EAA8C,EAA9C,CAAD,CAAN,GAA4DF,MAAM,CAACP,IAAI,CAACE,MAAL,CAAYM,cAAZ,CAA2BC,OAA3B,CAAmC,UAAnC,EAA8C,EAA9C,CAAD,CAAtE,EAA2H;AACvH,WAAO,CAAP;AACH,GAFD,MAEO;AACH,WAAO,CAAC,CAAR;AACH;AACJ;;AAKD,SAAQjB,SAAR,EAAmBM,cAAnB,EAAmCQ,SAAnC","sourcesContent":["\nconst formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n})\n\nfunction sortStockLevel(rowA, rowB) {\n\n    const a = rowA.values.stockLevel\n    const b = rowB.values.stockLevel\n\n    if (a === \"High\" && [\"Low\", \"Medium\", \"High\"].includes(b)) {\n        return 1\n    } else if (a === \"Medium\" && [\"Low\", \"Medium\"].includes(b)) {\n        return 1\n    } else if (a === \"Low\" && b === \"Low\") {\n        return 1\n    } else {\n        return -1\n    }\n}\n\nfunction sortMoney(rowA, rowB) {\n\n    if (Number(rowA.values.revenue_earned.replace(/(^\\$|,)/g,'')) > Number(rowB.values.revenue_earned.replace(/(^\\$|,)/g,''))) {\n        return 1\n    } else {\n        return -1\n    }\n}\n\n\n\n\nexport {formatter, sortStockLevel, sortMoney}\n"]},"metadata":{},"sourceType":"module"}