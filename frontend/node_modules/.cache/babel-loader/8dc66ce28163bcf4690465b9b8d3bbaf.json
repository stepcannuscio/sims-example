{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/Vendors/VendorPopup.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/Popup.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport MessageOption from \"./MessageOption\";\nimport Table from \"../components/Table\";\nimport * as router from \"./vendorAPI\";\nexport default function VendorPopup(props) {\n  _s();\n\n  console.log(props);\n  const variantSelect = useRef();\n  const productSelect = useRef();\n  const quantityInput = useRef();\n  const [btnText, setBtnText] = useState(\"Order\");\n  const [isOrdering, setOrdering] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [editColor, setEditColor] = useState(\"#76c32d\");\n  const [isOrderItemsHidden, setOrderItemsHidden] = useState(true);\n  const [isOrderOptionsHidden, setOrderOptionsHidden] = useState(true);\n  const [dataToUpdate, setDataToUpdate] = useState([]);\n  const [data, setData] = useState([]);\n  const [variantData, setVariantData] = useState([]);\n  const [isAddBtnHidden, setAddBtnHidden] = useState(true);\n  const [isQuantityHidden, setQuantityHidden] = useState(true);\n  const [quantity, setQuantity] = useState(0);\n  const [isProductSelectHidden, setProductSelectHidden] = useState(true);\n  const [isVariantSelectHidden, setVariantSelectHidden] = useState(true);\n  const [productSelected, setProductSelected] = useState({\n    title: \"\",\n    id: \"\"\n  });\n  const [variantSelected, setVariantSelected] = useState({\n    title: \"\",\n    id: \"\",\n    cost: 0\n  });\n  const comm_method = props.data.row.values.comm_method;\n  const orderItemsStyle = {\n    color: \"black\",\n    margin: \"20px 0\",\n    padding: \"10px 20px\",\n    backgroundColor: \"#efefef\",\n    textAlign: \"center\"\n  };\n  const columns = React.useMemo(() => [{\n    Header: 'Product',\n    accessor: 'title',\n    sortDescFirst: true\n  }, {\n    Header: 'Variant',\n    accessor: 'variant',\n    sortDescFirst: true\n  }, {\n    Header: 'Quantity',\n    accessor: 'quantity',\n    sortDescFirst: true\n  }, {\n    Header: 'Purchases (last 30 days)',\n    accessor: 'purchases',\n    sortDescFirst: true\n  }, {\n    Header: 'Stock Level',\n    accessor: 'stockLevel',\n    sortDescFirst: true\n  }, {\n    Header: 'Recent Order',\n    accessor: 'recentOrder',\n    sortDescFirst: true\n  }], []);\n\n  function getVendor() {\n    setLoading(true);\n    router.loadVendor(props.values.id).then(data => {\n      if (data) {\n        setData(data);\n        setLoading(false);\n      } else {\n        console.log(\"Error getting product data\");\n      }\n    });\n  }\n\n  useEffect(() => {\n    getVendor();\n  }, []);\n\n  function getVariants(e, hasVariants) {\n    router.loadVariants(e.target.value).then(data => {\n      console.log('result of getProduct');\n\n      if (data) {\n        //   console.log(res.data)\n        if (hasVariants) {\n          setVariantData(data);\n          setVariantSelectHidden(false);\n        } else {\n          setVariantSelected({\n            id: data[0].id,\n            title: data[0].text,\n            cost: data[0].cost\n          });\n          setQuantityHidden(false); //   console.log(res.data)\n        } //   setLoading(false)      \n\n      } else {\n        console.log(\"Error getting product data\");\n      }\n    });\n  }\n\n  function orderClicked() {\n    if (btnText === \"Order\") {\n      // Start Order - add products\n      setOrdering(true);\n      setBtnText(\"Next\");\n      setOrderItemsHidden(false);\n    } else if (btnText === \"Next\") {\n      // Going to next page of ordering after added products\n      setOrderOptionsHidden(false);\n      setEditColor(\"#26B1FF\");\n      setBtnText(\"Submit\");\n    } else {\n      // Submit - save order\n      save();\n    }\n  }\n\n  function selectChanged(e) {\n    // Get the text and remove the stockLevel at the end\n    // console.log(text.slice(0,-1).join(\" \"))\n    // console.log(e.target.label)\n    // console.log(e.target.text)\n    if (e.target.id === \"productFilter\") {\n      const text = e.target[e.target.selectedIndex].label.split(\" \").slice(0, -1).join(\" \");\n      setProductSelected({\n        id: e.target.value,\n        title: text\n      }); // Check to see if has variants\n\n      var hasVariants = false;\n\n      if (e.target[e.target.selectedIndex].text != 1) {\n        hasVariants = true;\n      }\n\n      getVariants(e, hasVariants);\n    } else {\n      const text = e.target[e.target.selectedIndex].text;\n      setVariantSelected({\n        id: e.target.value.split(',')[0],\n        title: text,\n        cost: e.target.value.split(',')[1]\n      });\n      setQuantityHidden(false);\n    }\n  }\n\n  function save() {\n    const order = {\n      vendor: props.data.row.values.id,\n      subtotal: 0,\n      status: \"submitted\"\n    };\n    const orderItems = [];\n    dataToUpdate.forEach(item => {\n      console.log(item.subtotal);\n      order.subtotal += item.subtotal;\n      orderItems.push({\n        variant: item.variantId,\n        subtotal: item.subtotal,\n        // this is the subtotal including multiple qtys\n        quantity: item.quantity\n      });\n    });\n\n    if (dataToUpdate.length > 0) {\n      router.saveOrder(order, orderItems, props.user.id).then(data => {\n        console.log(data);\n\n        if (data === \"Success\") {\n          props.toggle();\n        } else {\n          console.log('error saving');\n        }\n      });\n    }\n  }\n\n  function handleChange(e) {\n    setQuantity(e.target.value);\n    setAddBtnHidden(false);\n  }\n\n  function addVariant() {\n    const newData = {\n      productTitle: productSelected.title,\n      productId: productSelected.id,\n      variantTitle: variantSelected.title,\n      variantId: variantSelected.id,\n      cost: variantSelected.cost,\n      quantity: quantity,\n      subtotal: Math.round(variantSelected.cost * quantity * 100, 2) / 100\n    };\n    setDataToUpdate(oldArray => [...oldArray, newData]);\n    resetOrderItem();\n  }\n\n  function resetOrderItem() {\n    setProductSelected(\"\");\n    setVariantSelected(\"\");\n    setQuantity(0);\n    setProductSelectHidden(true);\n    setVariantSelectHidden(true);\n    setQuantityHidden(true);\n    setAddBtnHidden(true);\n    console.log(variantSelect.current.value);\n    variantSelect.current.value = \"none\";\n    productSelect.current.value = \"none\";\n    quantityInput.current.value = \"\";\n    quantityInput.current.placeholder = \"0\";\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => props.toggle(),\n        children: \"\\xD7    \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data[0] ? data[0].name : \"Default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Products: \", props.values.products]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Low Products: \", props.values.low_products]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: orderClicked,\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: editColor\n        },\n        children: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), isOrdering ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        hidden: isOrderItemsHidden,\n        style: orderItemsStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            display: \"block\"\n          },\n          onClick: () => setProductSelectHidden(false),\n          children: \"New Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data,\n          search: false,\n          popupEnabled: false,\n          perPage: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this), data.map((product, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: product.id\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: product.id,\n              children: `${product.title} (${product.stockLevel})`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 33\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: variantSelect,\n          hidden: isVariantSelectHidden,\n          onChange: selectChanged,\n          defaultValue: \"none\",\n          id: \"variantFilter\",\n          name: \"variantFilter\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"none\",\n            children: \"Choose Variant:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 21\n          }, this), variantData.map((variant, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: [variant.id, variant.cost],\n              children: variant.title\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: quantityInput,\n          hidden: isQuantityHidden,\n          placeholder: quantity,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          hidden: isAddBtnHidden,\n          onClick: addVariant,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Variant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Cost/unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Subtotal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: dataToUpdate.map((order_item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order_item.productTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order_item.variantTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order_item.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"$\", order_item.cost]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"$\", order_item.subtotal]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        hidden: isOrderOptionsHidden,\n        children: comm_method === \"email\" ? /*#__PURE__*/_jsxDEV(MessageOption, {\n          type: \"Email\",\n          contact_name: props.values.contact_name,\n          to: \"stepan.cannuscio@gmail.com\",\n          dataToUpdate: dataToUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this) : comm_method === \"call\" ? /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"tel:4848885912\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Call: 484-888-5912\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this) : comm_method === \"text\" ? /*#__PURE__*/_jsxDEV(MessageOption, {\n          type: \"Text\",\n          contact_name: props.values.contact_name,\n          to: \"4848885912\",\n          dataToUpdate: dataToUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this) : comm_method === \"website\" ? /*#__PURE__*/_jsxDEV(MessageOption, {\n          type: \"Website\",\n          contact_name: props.values.contact_name,\n          to: \"https://amazon.com\",\n          dataToUpdate: dataToUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Not sure about this one!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"table-header\",\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"table-header\",\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"table-header\",\n              children: \"Purchases (last 30 days)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"table-header\",\n              children: \"Stock Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"table-header\",\n              children: \"Last Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((item, index) => {\n            // var lastOrderData = \"\"\n            var recentOrder = \"\";\n\n            if (item.status && item.status.split(',')[0] === \"completed\") {\n              // recentOrder = `Completed | ${new Date(item.completed_date.split(',')[0]).toDateString()} ${'\\n'}| ${item.quantity_ordered.split(',')[0]} units`\n              recentOrder = `${item.quantity_ordered.split(',')[0]} units received on ${new Date(item.completed_date.split(',')[0]).toDateString()}`;\n            } else if (item.status && item.status.split(',')[0] === \"fulfilled\") {\n              recentOrder = `Fulfilled on ${new Date(item.fulfilled_date.split(',')[0]).toDateString()} - ${item.tracking.split(',')[0]}`;\n            } else if (item.status && item.status.split(',')[0] === \"submitted\") {\n              // recentOrder = `Submitted | ${new Date(item.submitted_date.split(',')[0]).toDateString()} ${'\\n'}| ${item.quantity_ordered.split(',')[0]} units`\n              recentOrder = `Submitted order for ${item.quantity_ordered.split(',')[0]} units on ${new Date(item.submitted_date.split(',')[0]).toDateString()}`;\n            } // if (item.status === \"completed\") {\n            //     lastOrderData = item.order_date.slice(0,10) + \" | \" + item.order_quantity\n            // } else if (item.status === \"fulfilled\") {\n            //     lastOrderData = item.order_date.slice(0,10) + \" | \" + item.order_quantity + \" | \" \n            // }\n\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"table-cell\",\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"table-cell\",\n                children: item.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"table-cell\",\n                children: item.purchases\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"table-cell\",\n                children: item.stockLevel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"table-cell\",\n                children: recentOrder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Purchases (last 30 days)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Stock Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Last Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((item, index) => {\n          // var lastOrderData = \"\"\n          var recentOrder = \"\";\n\n          if (item.status && item.status.split(',')[0] === \"completed\") {\n            // recentOrder = `Completed | ${new Date(item.completed_date.split(',')[0]).toDateString()} ${'\\n'}| ${item.quantity_ordered.split(',')[0]} units`\n            recentOrder = `${item.quantity_ordered.split(',')[0]} units received on ${new Date(item.completed_date.split(',')[0]).toDateString()}`;\n          } else if (item.status && item.status.split(',')[0] === \"fulfilled\") {\n            recentOrder = `Fulfilled on ${new Date(item.fulfilled_date.split(',')[0]).toDateString()} - ${item.tracking.split(',')[0]}`;\n          } else if (item.status && item.status.split(',')[0] === \"submitted\") {\n            // recentOrder = `Submitted | ${new Date(item.submitted_date.split(',')[0]).toDateString()} ${'\\n'}| ${item.quantity_ordered.split(',')[0]} units`\n            recentOrder = `Submitted order for ${item.quantity_ordered.split(',')[0]} units on ${new Date(item.submitted_date.split(',')[0]).toDateString()}`;\n          } // if (item.status === \"completed\") {\n          //     lastOrderData = item.order_date.slice(0,10) + \" | \" + item.order_quantity\n          // } else if (item.status === \"fulfilled\") {\n          //     lastOrderData = item.order_date.slice(0,10) + \" | \" + item.order_quantity + \" | \" \n          // }\n\n\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.purchases\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.stockLevel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: recentOrder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VendorPopup, \"pW0IIAaYSVg8cN8SJ5aVVJyJw4o=\");\n\n_c = VendorPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"VendorPopup\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/Vendors/VendorPopup.js"],"names":["useState","useEffect","useRef","MessageOption","Table","router","VendorPopup","props","console","log","variantSelect","productSelect","quantityInput","btnText","setBtnText","isOrdering","setOrdering","isLoading","setLoading","editColor","setEditColor","isOrderItemsHidden","setOrderItemsHidden","isOrderOptionsHidden","setOrderOptionsHidden","dataToUpdate","setDataToUpdate","data","setData","variantData","setVariantData","isAddBtnHidden","setAddBtnHidden","isQuantityHidden","setQuantityHidden","quantity","setQuantity","isProductSelectHidden","setProductSelectHidden","isVariantSelectHidden","setVariantSelectHidden","productSelected","setProductSelected","title","id","variantSelected","setVariantSelected","cost","comm_method","row","values","orderItemsStyle","color","margin","padding","backgroundColor","textAlign","columns","React","useMemo","Header","accessor","sortDescFirst","getVendor","loadVendor","then","getVariants","e","hasVariants","loadVariants","target","value","text","orderClicked","save","selectChanged","selectedIndex","label","split","slice","join","order","vendor","subtotal","status","orderItems","forEach","item","push","variant","variantId","length","saveOrder","user","toggle","handleChange","addVariant","newData","productTitle","productId","variantTitle","Math","round","oldArray","resetOrderItem","current","placeholder","name","products","low_products","display","map","product","index","stockLevel","order_item","contact_name","recentOrder","quantity_ordered","Date","completed_date","toDateString","fulfilled_date","tracking","submitted_date","purchases"],"mappings":";;;;;AAAA,OAAO,qBAAP;AACA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA0C,OAA1C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AAGA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAEvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAMG,aAAa,GAAGR,MAAM,EAA5B;AACA,QAAMS,aAAa,GAAGT,MAAM,EAA5B;AACA,QAAMU,aAAa,GAAGV,MAAM,EAA5B;AAEA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,OAAD,CAAtC;AACA,QAAM,CAACe,UAAD,EAAaC,WAAb,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACiB,SAAD,EAAYC,UAAZ,IAA0BlB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,SAAD,CAA1C;AACA,QAAM,CAACqB,kBAAD,EAAqBC,mBAArB,IAA4CtB,QAAQ,CAAC,IAAD,CAA1D;AACA,QAAM,CAACuB,oBAAD,EAAuBC,qBAAvB,IAAgDxB,QAAQ,CAAC,IAAD,CAA9D;AACA,QAAM,CAACyB,YAAD,EAAeC,eAAf,IAAkC1B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC2B,IAAD,EAAOC,OAAP,IAAkB5B,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAAC6B,WAAD,EAAcC,cAAd,IAAgC9B,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC+B,cAAD,EAAiBC,eAAjB,IAAoChC,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACiC,gBAAD,EAAmBC,iBAAnB,IAAwClC,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACmC,QAAD,EAAWC,WAAX,IAA0BpC,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACqC,qBAAD,EAAwBC,sBAAxB,IAAkDtC,QAAQ,CAAC,IAAD,CAAhE;AACA,QAAM,CAACuC,qBAAD,EAAwBC,sBAAxB,IAAkDxC,QAAQ,CAAC,IAAD,CAAhE;AACA,QAAM,CAACyC,eAAD,EAAkBC,kBAAlB,IAAwC1C,QAAQ,CAAC;AAAC2C,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,EAAE,EAAE;AAAhB,GAAD,CAAtD;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwC9C,QAAQ,CAAC;AAAC2C,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,EAAE,EAAE,EAAhB;AAAoBG,IAAAA,IAAI,EAAE;AAA1B,GAAD,CAAtD;AAEA,QAAMC,WAAW,GAAGzC,KAAK,CAACoB,IAAN,CAAWsB,GAAX,CAAeC,MAAf,CAAsBF,WAA1C;AAEA,QAAMG,eAAe,GAAG;AACpBC,IAAAA,KAAK,EAAE,OADa;AAEpBC,IAAAA,MAAM,EAAE,QAFY;AAGpBC,IAAAA,OAAO,EAAE,WAHW;AAIpBC,IAAAA,eAAe,EAAE,SAJG;AAKpBC,IAAAA,SAAS,EAAE;AALS,GAAxB;AASA,QAAMC,OAAO,GAAGC,KAAK,CAACC,OAAN,CACZ,MAAM,CACJ;AACEC,IAAAA,MAAM,EAAE,SADV;AAEEC,IAAAA,QAAQ,EAAE,OAFZ;AAGEC,IAAAA,aAAa,EAAE;AAHjB,GADI,EAMJ;AACEF,IAAAA,MAAM,EAAE,SADV;AAEEC,IAAAA,QAAQ,EAAE,SAFZ;AAGEC,IAAAA,aAAa,EAAE;AAHjB,GANI,EAWJ;AACEF,IAAAA,MAAM,EAAE,UADV;AAEEC,IAAAA,QAAQ,EAAE,UAFZ;AAGEC,IAAAA,aAAa,EAAE;AAHjB,GAXI,EAgBJ;AACEF,IAAAA,MAAM,EAAE,0BADV;AAEEC,IAAAA,QAAQ,EAAE,WAFZ;AAGEC,IAAAA,aAAa,EAAE;AAHjB,GAhBI,EAqBJ;AACEF,IAAAA,MAAM,EAAE,aADV;AAEEC,IAAAA,QAAQ,EAAE,YAFZ;AAGEC,IAAAA,aAAa,EAAE;AAHjB,GArBI,EA0BJ;AACEF,IAAAA,MAAM,EAAE,cADV;AAEEC,IAAAA,QAAQ,EAAE,aAFZ;AAGEC,IAAAA,aAAa,EAAE;AAHjB,GA1BI,CADM,EAiCZ,EAjCY,CAAhB;;AAqCA,WAASC,SAAT,GAAqB;AACjB7C,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAb,IAAAA,MAAM,CAAC2D,UAAP,CAAkBzD,KAAK,CAAC2C,MAAN,CAAaN,EAA/B,EAAmCqB,IAAnC,CAAwCtC,IAAI,IAAI;AAC5C,UAAIA,IAAJ,EAAU;AACNC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAT,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAHD,MAGO;AACHV,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH;AACJ,KAPD;AAQD;;AAEDR,EAAAA,SAAS,CAAC,MAAM;AACd8D,IAAAA,SAAS;AACZ,GAFU,EAER,EAFQ,CAAT;;AAIF,WAASG,WAAT,CAAqBC,CAArB,EAAwBC,WAAxB,EAAqC;AACjC/D,IAAAA,MAAM,CAACgE,YAAP,CAAoBF,CAAC,CAACG,MAAF,CAASC,KAA7B,EAAoCN,IAApC,CAAyCtC,IAAI,IAAI;AAC/CnB,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,UAAIkB,IAAJ,EAAU;AACR;AAEE,YAAIyC,WAAJ,EAAiB;AACftC,UAAAA,cAAc,CAACH,IAAD,CAAd;AACAa,UAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACD,SAHD,MAGO;AACLM,UAAAA,kBAAkB,CAAC;AACfF,YAAAA,EAAE,EAAEjB,IAAI,CAAC,CAAD,CAAJ,CAAQiB,EADG;AAEfD,YAAAA,KAAK,EAAEhB,IAAI,CAAC,CAAD,CAAJ,CAAQ6C,IAFA;AAGfzB,YAAAA,IAAI,EAAEpB,IAAI,CAAC,CAAD,CAAJ,CAAQoB;AAHC,WAAD,CAAlB;AAKAb,UAAAA,iBAAiB,CAAC,KAAD,CAAjB,CANK,CAOL;AACD,SAdK,CAgBR;;AACD,OAjBD,MAiBO;AACH1B,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH;AACJ,KAtBC;AAuBH;;AAED,WAASgE,YAAT,GAAwB;AACpB,QAAI5D,OAAO,KAAK,OAAhB,EAAyB;AACrB;AACAG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,UAAU,CAAC,MAAD,CAAV;AACAQ,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AAEH,KAND,MAMO,IAAIT,OAAO,KAAK,MAAhB,EAAwB;AAC3B;AACAW,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAJ,MAAAA,YAAY,CAAC,SAAD,CAAZ;AACAN,MAAAA,UAAU,CAAC,QAAD,CAAV;AAEH,KANM,MAMA;AACH;AACA4D,MAAAA,IAAI;AACP;AACJ;;AAED,WAASC,aAAT,CAAuBR,CAAvB,EAA0B;AAEtB;AAEA;AACA;AACA;AACA,QAAIA,CAAC,CAACG,MAAF,CAAS1B,EAAT,KAAgB,eAApB,EAAqC;AAEjC,YAAM4B,IAAI,GAAGL,CAAC,CAACG,MAAF,CAASH,CAAC,CAACG,MAAF,CAASM,aAAlB,EAAiCC,KAAjC,CAAuCC,KAAvC,CAA6C,GAA7C,EAAkDC,KAAlD,CAAwD,CAAxD,EAA0D,CAAC,CAA3D,EAA8DC,IAA9D,CAAmE,GAAnE,CAAb;AAEAtC,MAAAA,kBAAkB,CAAC;AACfE,QAAAA,EAAE,EAAEuB,CAAC,CAACG,MAAF,CAASC,KADE;AAEf5B,QAAAA,KAAK,EAAE6B;AAFQ,OAAD,CAAlB,CAJiC,CAQjC;;AACA,UAAIJ,WAAW,GAAG,KAAlB;;AACA,UAAID,CAAC,CAACG,MAAF,CAASH,CAAC,CAACG,MAAF,CAASM,aAAlB,EAAiCJ,IAAjC,IAAyC,CAA7C,EAAgD;AAC5CJ,QAAAA,WAAW,GAAG,IAAd;AACH;;AAEDF,MAAAA,WAAW,CAACC,CAAD,EAAIC,WAAJ,CAAX;AAIH,KAlBD,MAkBO;AAEH,YAAMI,IAAI,GAAGL,CAAC,CAACG,MAAF,CAASH,CAAC,CAACG,MAAF,CAASM,aAAlB,EAAiCJ,IAA9C;AACA1B,MAAAA,kBAAkB,CAAC;AACfF,QAAAA,EAAE,EAAEuB,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeO,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CADW;AAEfnC,QAAAA,KAAK,EAAE6B,IAFQ;AAGfzB,QAAAA,IAAI,EAAEoB,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeO,KAAf,CAAqB,GAArB,EAA0B,CAA1B;AAHS,OAAD,CAAlB;AAKA5C,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH;AACJ;;AAED,WAASwC,IAAT,GAAgB;AACZ,UAAMO,KAAK,GAAG;AACVC,MAAAA,MAAM,EAAE3E,KAAK,CAACoB,IAAN,CAAWsB,GAAX,CAAeC,MAAf,CAAsBN,EADpB;AAEVuC,MAAAA,QAAQ,EAAE,CAFA;AAGVC,MAAAA,MAAM,EAAE;AAHE,KAAd;AAMA,UAAMC,UAAU,GAAG,EAAnB;AACA5D,IAAAA,YAAY,CAAC6D,OAAb,CAAqBC,IAAI,IAAI;AACzB/E,MAAAA,OAAO,CAACC,GAAR,CAAY8E,IAAI,CAACJ,QAAjB;AAEIF,MAAAA,KAAK,CAACE,QAAN,IAAkBI,IAAI,CAACJ,QAAvB;AACAE,MAAAA,UAAU,CAACG,IAAX,CAAgB;AACZC,QAAAA,OAAO,EAAEF,IAAI,CAACG,SADF;AAEZP,QAAAA,QAAQ,EAAEI,IAAI,CAACJ,QAFH;AAEa;AACzBhD,QAAAA,QAAQ,EAAEoD,IAAI,CAACpD;AAHH,OAAhB;AAMP,KAVD;;AAYA,QAAIV,YAAY,CAACkE,MAAb,GAAsB,CAA1B,EAA6B;AACzBtF,MAAAA,MAAM,CAACuF,SAAP,CAAiBX,KAAjB,EAAwBI,UAAxB,EAAoC9E,KAAK,CAACsF,IAAN,CAAWjD,EAA/C,EAAmDqB,IAAnD,CAAwDtC,IAAI,IAAI;AAC5DnB,QAAAA,OAAO,CAACC,GAAR,CAAYkB,IAAZ;;AACJ,YAAIA,IAAI,KAAK,SAAb,EAAwB;AACpBpB,UAAAA,KAAK,CAACuF,MAAN;AACH,SAFD,MAEO;AACHtF,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;AACH,OAPE;AAQH;AACJ;;AAGD,WAASsF,YAAT,CAAsB5B,CAAtB,EAAyB;AACrB/B,IAAAA,WAAW,CAAC+B,CAAC,CAACG,MAAF,CAASC,KAAV,CAAX;AACAvC,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH;;AAED,WAASgE,UAAT,GAAsB;AAClB,UAAMC,OAAO,GAAG;AACZC,MAAAA,YAAY,EAAEzD,eAAe,CAACE,KADlB;AAEZwD,MAAAA,SAAS,EAAE1D,eAAe,CAACG,EAFf;AAGZwD,MAAAA,YAAY,EAAEvD,eAAe,CAACF,KAHlB;AAIZ+C,MAAAA,SAAS,EAAE7C,eAAe,CAACD,EAJf;AAKZG,MAAAA,IAAI,EAAEF,eAAe,CAACE,IALV;AAMZZ,MAAAA,QAAQ,EAAEA,QANE;AAOZgD,MAAAA,QAAQ,EAAEkB,IAAI,CAACC,KAAL,CAAWzD,eAAe,CAACE,IAAhB,GAAuBZ,QAAvB,GAAkC,GAA7C,EAAkD,CAAlD,IAAuD;AAPrD,KAAhB;AASAT,IAAAA,eAAe,CAAC6E,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcN,OAAd,CAAb,CAAf;AAEAO,IAAAA,cAAc;AACjB;;AAED,WAASA,cAAT,GAA0B;AACtB9D,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAI,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAV,IAAAA,WAAW,CAAC,CAAD,CAAX;AACAE,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAE,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAN,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAF,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAxB,IAAAA,OAAO,CAACC,GAAR,CAAYC,aAAa,CAAC+F,OAAd,CAAsBlC,KAAlC;AACA7D,IAAAA,aAAa,CAAC+F,OAAd,CAAsBlC,KAAtB,GAA8B,MAA9B;AACA5D,IAAAA,aAAa,CAAC8F,OAAd,CAAsBlC,KAAtB,GAA8B,MAA9B;AACA3D,IAAAA,aAAa,CAAC6F,OAAd,CAAsBlC,KAAtB,GAA8B,EAA9B;AACA3D,IAAAA,aAAa,CAAC6F,OAAd,CAAsBC,WAAtB,GAAoC,GAApC;AACH;;AAED,MAAIzF,SAAJ,EAAe;AACX,wBAAO;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAwB,QAAA,OAAO,EAAE,MAAOV,KAAK,CAACuF,MAAN,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAMnE,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQgF,IAAlB,GAAyB;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,iCAAcpG,KAAK,CAAC2C,MAAN,CAAa0D,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,qCAAkBrG,KAAK,CAAC2C,MAAN,CAAa2D,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,QAAA,OAAO,EAAEpC,YAAjB;AAA+B,QAAA,SAAS,EAAC,UAAzC;AAAoD,QAAA,KAAK,EAAE;AAAClB,UAAAA,eAAe,EAAEpC;AAAlB,SAA3D;AAAA,kBAA0FN;AAA1F;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAWKE,UAAU,gBAGX;AAAA,8BACI;AAAK,QAAA,MAAM,EAAEM,kBAAb;AAAiC,QAAA,KAAK,EAAE8B,eAAxC;AAAA,gCACI;AAAQ,UAAA,KAAK,EAAE;AAAC2D,YAAAA,OAAO,EAAE;AAAV,WAAf;AAAmC,UAAA,OAAO,EAAE,MAAMxE,sBAAsB,CAAC,KAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEmB,OAAhB;AAAyB,UAAA,IAAI,EAAE9B,IAA/B;AAAqC,UAAA,MAAM,EAAE,KAA7C;AAAoD,UAAA,YAAY,EAAE,KAAlE;AAAyE,UAAA,OAAO,EAAE;AAAlF;AAAA;AAAA;AAAA;AAAA,gBAXJ,EAaSA,IAAI,CAACoF,GAAL,CAAS,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC1B,8BACI;AAAA,oCACA;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAmC,cAAA,IAAI,EAAED,OAAO,CAACpE;AAAjD,eAA4BqE,KAA5B;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAO,cAAA,GAAG,EAAED,OAAO,CAACpE,EAApB;AAAA,wBAA0B,GAAEoE,OAAO,CAACrE,KAAM,KAAIqE,OAAO,CAACE,UAAW;AAAjE;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAMH,SAPA,CAbT,eA+BI;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBA/BJ,eAgCI;AAAQ,UAAA,GAAG,EAAExG,aAAb;AAA4B,UAAA,MAAM,EAAE6B,qBAApC;AAA2D,UAAA,QAAQ,EAAEoC,aAArE;AAAoF,UAAA,YAAY,EAAC,MAAjG;AAAwG,UAAA,EAAE,EAAC,eAA3G;AAA2H,UAAA,IAAI,EAAC,eAAhI;AAAA,kCACA;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEK9C,WAAW,CAACkF,GAAZ,CAAgB,CAACtB,OAAD,EAAUwB,KAAV,KAAoB;AACjC,gCACI;AAAoB,cAAA,KAAK,EAAE,CAACxB,OAAO,CAAC7C,EAAT,EAAa6C,OAAO,CAAC1C,IAArB,CAA3B;AAAA,wBAAwD0C,OAAO,CAAC9C;AAAhE,eAAasE,KAAb;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH,WAJA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhCJ,eAwCI;AAAO,UAAA,GAAG,EAAErG,aAAZ;AAA2B,UAAA,MAAM,EAAEqB,gBAAnC;AAAqD,UAAA,WAAW,EAAEE,QAAlE;AAA4E,UAAA,QAAQ,EAAE4D;AAAtF;AAAA;AAAA;AAAA;AAAA,gBAxCJ,eAyCI;AAAQ,UAAA,MAAM,EAAEhE,cAAhB;AAAgC,UAAA,OAAO,EAAEiE,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzCJ,eA0CI;AAAA,kCACI;AAAA,mCACI;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI;AAAA,sBACKvE,YAAY,CAACsF,GAAb,CAAiB,CAACI,UAAD,EAAaF,KAAb,KAAuB;AAEjC,kCACI;AAAA,wCACI;AAAA,4BAAKE,UAAU,CAACjB;AAAhB;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAKiB,UAAU,CAACf;AAAhB;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA,4BAAKe,UAAU,CAAChF;AAAhB;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII;AAAA,kCAAMgF,UAAU,CAACpE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI;AAAA,kCAAMoE,UAAU,CAAChC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ;AAAA,iBAAS8B,KAAT;AAAA;AAAA;AAAA;AAAA,sBADJ;AAUP,aAZA;AADL;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1CJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAyEI;AAAK,QAAA,MAAM,EAAE1F,oBAAb;AAAA,kBACKyB,WAAW,KAAK,OAAhB,gBAED,QAAC,aAAD;AAAe,UAAA,IAAI,EAAC,OAApB;AAA4B,UAAA,YAAY,EAAEzC,KAAK,CAAC2C,MAAN,CAAakE,YAAvD;AAAqE,UAAA,EAAE,EAAC,4BAAxE;AAAqG,UAAA,YAAY,EAAE3F;AAAnH;AAAA;AAAA;AAAA;AAAA,gBAFC,GAKDuB,WAAW,KAAK,MAAhB,gBAEA;AAAG,UAAA,IAAI,EAAC,gBAAR;AAAA,iCAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFA,GAKAA,WAAW,KAAK,MAAhB,gBAEA,QAAC,aAAD;AAAe,UAAA,IAAI,EAAC,MAApB;AAA2B,UAAA,YAAY,EAAEzC,KAAK,CAAC2C,MAAN,CAAakE,YAAtD;AAAoE,UAAA,EAAE,EAAC,YAAvE;AAAoF,UAAA,YAAY,EAAE3F;AAAlG;AAAA;AAAA;AAAA;AAAA,gBAFA,GAIAuB,WAAW,KAAK,SAAhB,gBAEA,QAAC,aAAD;AAAe,UAAA,IAAI,EAAC,SAApB;AAA8B,UAAA,YAAY,EAAEzC,KAAK,CAAC2C,MAAN,CAAakE,YAAzD;AAAuE,UAAA,EAAE,EAAC,oBAA1E;AAA+F,UAAA,YAAY,EAAE3F;AAA7G;AAAA;AAAA;AAAA;AAAA,gBAFA,gBAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA,cAzEJ,eAmGA;AAAO,QAAA,KAAK,EAAE;AAAC+B,UAAAA,SAAS,EAAE;AAAZ,SAAd;AAAA,gCACA;AAAA,iCACI;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAI,cAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAI,cAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAMI;AAAI,cAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADA,eAaA;AAAA,oBACC7B,IAAI,CAACoF,GAAL,CAAS,CAACxB,IAAD,EAAO0B,KAAP,KAAiB;AACvB;AACA,gBAAII,WAAW,GAAG,EAAlB;;AACA,gBAAI9B,IAAI,CAACH,MAAL,IAAeG,IAAI,CAACH,MAAL,CAAYN,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,MAA8B,WAAjD,EAA8D;AAC1D;AACAuC,cAAAA,WAAW,GAAI,GAAE9B,IAAI,CAAC+B,gBAAL,CAAsBxC,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAoC,sBAAqB,IAAIyC,IAAJ,CAAShC,IAAI,CAACiC,cAAL,CAAoB1C,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAT,EAA4C2C,YAA5C,EAA2D,EAArI;AACH,aAHD,MAGO,IAAIlC,IAAI,CAACH,MAAL,IAAeG,IAAI,CAACH,MAAL,CAAYN,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,MAA8B,WAAjD,EAA8D;AACjEuC,cAAAA,WAAW,GAAI,gBAAe,IAAIE,IAAJ,CAAShC,IAAI,CAACmC,cAAL,CAAoB5C,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAT,EAA4C2C,YAA5C,EAA2D,MAAKlC,IAAI,CAACoC,QAAL,CAAc7C,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAA4B,EAA1H;AACH,aAFM,MAEA,IAAIS,IAAI,CAACH,MAAL,IAAeG,IAAI,CAACH,MAAL,CAAYN,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,MAA8B,WAAjD,EAA8D;AACjE;AACAuC,cAAAA,WAAW,GAAI,uBAAsB9B,IAAI,CAAC+B,gBAAL,CAAsBxC,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAoC,aAAY,IAAIyC,IAAJ,CAAShC,IAAI,CAACqC,cAAL,CAAoB9C,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAT,EAA4C2C,YAA5C,EAA2D,EAAhJ;AACH,aAXsB,CAevB;AACA;AACA;AACA;AACA;;;AACA,gCACI;AAAA,sCACI;AAAI,gBAAA,SAAS,EAAC,YAAd;AAAA,0BAA4BlC,IAAI,CAAC5C;AAAjC;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAI,gBAAA,SAAS,EAAC,YAAd;AAAA,0BAA4B4C,IAAI,CAACpD;AAAjC;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAI,gBAAA,SAAS,EAAC,YAAd;AAAA,0BAA4BoD,IAAI,CAACsC;AAAjC;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAI,gBAAA,SAAS,EAAC,YAAd;AAAA,0BAA4BtC,IAAI,CAAC2B;AAAjC;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAOI;AAAI,gBAAA,SAAS,EAAC,YAAd;AAAA,0BAA4BG;AAA5B;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA,eAASJ,KAAT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAYC,WAhCJ;AADD;AAAA;AAAA;AAAA;AAAA,gBAbA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnGA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHW,gBA4JX;AAAO,MAAA,KAAK,EAAE;AAACzD,QAAAA,SAAS,EAAE;AAAZ,OAAd;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAMI;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI;AAAA,kBACC7B,IAAI,CAACoF,GAAL,CAAS,CAACxB,IAAD,EAAO0B,KAAP,KAAiB;AACvB;AACA,cAAII,WAAW,GAAG,EAAlB;;AACA,cAAI9B,IAAI,CAACH,MAAL,IAAeG,IAAI,CAACH,MAAL,CAAYN,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,MAA8B,WAAjD,EAA8D;AAC1D;AACAuC,YAAAA,WAAW,GAAI,GAAE9B,IAAI,CAAC+B,gBAAL,CAAsBxC,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAoC,sBAAqB,IAAIyC,IAAJ,CAAShC,IAAI,CAACiC,cAAL,CAAoB1C,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAT,EAA4C2C,YAA5C,EAA2D,EAArI;AACH,WAHD,MAGO,IAAIlC,IAAI,CAACH,MAAL,IAAeG,IAAI,CAACH,MAAL,CAAYN,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,MAA8B,WAAjD,EAA8D;AACjEuC,YAAAA,WAAW,GAAI,gBAAe,IAAIE,IAAJ,CAAShC,IAAI,CAACmC,cAAL,CAAoB5C,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAT,EAA4C2C,YAA5C,EAA2D,MAAKlC,IAAI,CAACoC,QAAL,CAAc7C,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAA4B,EAA1H;AACH,WAFM,MAEA,IAAIS,IAAI,CAACH,MAAL,IAAeG,IAAI,CAACH,MAAL,CAAYN,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,MAA8B,WAAjD,EAA8D;AACjE;AACAuC,YAAAA,WAAW,GAAI,uBAAsB9B,IAAI,CAAC+B,gBAAL,CAAsBxC,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAoC,aAAY,IAAIyC,IAAJ,CAAShC,IAAI,CAACqC,cAAL,CAAoB9C,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAT,EAA4C2C,YAA5C,EAA2D,EAAhJ;AACH,WAXsB,CAevB;AACA;AACA;AACA;AACA;;;AACA,8BACI;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BlC,IAAI,CAAC5C;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4B4C,IAAI,CAACpD;AAAjC;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BoD,IAAI,CAACsC;AAAjC;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BtC,IAAI,CAAC2B;AAAjC;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BG;AAA5B;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA,aAASJ,KAAT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAYC,SAhCJ;AADD;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAvKJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6NH;;GAjduB3G,W;;KAAAA,W","sourcesContent":["import \"../styles/Popup.css\"\nimport {useState, useEffect, useRef} from \"react\"\nimport MessageOption from \"./MessageOption\"\nimport Table from \"../components/Table\"\nimport * as router from \"./vendorAPI\"\n\n\nexport default function VendorPopup(props) {\n\n    console.log(props)\n\n    const variantSelect = useRef()\n    const productSelect = useRef()\n    const quantityInput = useRef()\n\n    const [btnText, setBtnText] = useState(\"Order\")\n    const [isOrdering, setOrdering] = useState(false)\n    const [isLoading, setLoading] = useState(true)\n    const [editColor, setEditColor] = useState(\"#76c32d\")\n    const [isOrderItemsHidden, setOrderItemsHidden] = useState(true)\n    const [isOrderOptionsHidden, setOrderOptionsHidden] = useState(true)\n    const [dataToUpdate, setDataToUpdate] = useState([])\n    const [data, setData] = useState([])\n\n    const [variantData, setVariantData] = useState([])\n    const [isAddBtnHidden, setAddBtnHidden] = useState(true)\n    const [isQuantityHidden, setQuantityHidden] = useState(true)\n    const [quantity, setQuantity] = useState(0)\n    const [isProductSelectHidden, setProductSelectHidden] = useState(true)\n    const [isVariantSelectHidden, setVariantSelectHidden] = useState(true)\n    const [productSelected, setProductSelected] = useState({title: \"\", id: \"\"})\n    const [variantSelected, setVariantSelected] = useState({title: \"\", id: \"\", cost: 0})\n\n    const comm_method = props.data.row.values.comm_method\n\n    const orderItemsStyle = {\n        color: \"black\", \n        margin: \"20px 0\", \n        padding: \"10px 20px\", \n        backgroundColor: \"#efefef\", \n        textAlign: \"center\"\n    }\n\n\n    const columns = React.useMemo(\n        () => [\n          {\n            Header: 'Product',\n            accessor: 'title',\n            sortDescFirst: true\n          },\n          {\n            Header: 'Variant',\n            accessor: 'variant',\n            sortDescFirst: true\n          },\n          {\n            Header: 'Quantity',\n            accessor: 'quantity',\n            sortDescFirst: true,\n          },\n          {\n            Header: 'Purchases (last 30 days)',\n            accessor: 'purchases',\n            sortDescFirst: true,\n          },\n          {\n            Header: 'Stock Level',\n            accessor: 'stockLevel',\n            sortDescFirst: true,\n          },\n          {\n            Header: 'Recent Order',\n            accessor: 'recentOrder',\n            sortDescFirst: true,\n          },\n        ],\n        []\n      )\n\n\n    function getVendor() {\n        setLoading(true)\n        router.loadVendor(props.values.id).then(data => {\n            if (data) {\n                setData(data)\n                setLoading(false)\n            } else {\n                console.log(\"Error getting product data\")\n            }\n        });\n      }\n\n      useEffect(() => {\n        getVendor()\n    }, []);\n\n    function getVariants(e, hasVariants) {\n        router.loadVariants(e.target.value).then(data => {\n          console.log('result of getProduct')\n          if (data) {\n            //   console.log(res.data)\n\n              if (hasVariants) {\n                setVariantData(data)\n                setVariantSelectHidden(false)\n              } else {\n                setVariantSelected({\n                    id: data[0].id,\n                    title: data[0].text,\n                    cost: data[0].cost\n                })\n                setQuantityHidden(false)\n                //   console.log(res.data)\n              }\n              \n            //   setLoading(false)      \n          } else {\n              console.log(\"Error getting product data\")\n          }\n      });\n    }\n\n    function orderClicked() {\n        if (btnText === \"Order\") {\n            // Start Order - add products\n            setOrdering(true)\n            setBtnText(\"Next\")\n            setOrderItemsHidden(false)\n\n        } else if (btnText === \"Next\") {\n            // Going to next page of ordering after added products\n            setOrderOptionsHidden(false)\n            setEditColor(\"#26B1FF\")\n            setBtnText(\"Submit\")\n\n        } else {\n            // Submit - save order\n            save()\n        }\n    }\n\n    function selectChanged(e) {\n\n        // Get the text and remove the stockLevel at the end\n        \n        // console.log(text.slice(0,-1).join(\" \"))\n        // console.log(e.target.label)\n        // console.log(e.target.text)\n        if (e.target.id === \"productFilter\") {\n\n            const text = e.target[e.target.selectedIndex].label.split(\" \").slice(0,-1).join(\" \")\n\n            setProductSelected({\n                id: e.target.value,\n                title: text\n            })\n            // Check to see if has variants\n            var hasVariants = false\n            if (e.target[e.target.selectedIndex].text != 1) {\n                hasVariants = true\n            } \n\n            getVariants(e, hasVariants)\n            \n          \n            \n        } else {\n\n            const text = e.target[e.target.selectedIndex].text\n            setVariantSelected({\n                id: e.target.value.split(',')[0],\n                title: text,\n                cost: e.target.value.split(',')[1]\n            })\n            setQuantityHidden(false)\n        }\n    }\n\n    function save() {\n        const order = {\n            vendor: props.data.row.values.id,\n            subtotal: 0,\n            status: \"submitted\"\n        }\n\n        const orderItems = []\n        dataToUpdate.forEach(item => {\n            console.log(item.subtotal)\n       \n                order.subtotal += item.subtotal\n                orderItems.push({\n                    variant: item.variantId,\n                    subtotal: item.subtotal, // this is the subtotal including multiple qtys\n                    quantity: item.quantity\n                })\n        \n        })\n     \n        if (dataToUpdate.length > 0) {\n            router.saveOrder(order, orderItems, props.user.id).then(data => {\n                console.log(data)\n            if (data === \"Success\") {\n                props.toggle()\n            } else {\n                console.log('error saving')\n            }\n         })\n        } \n    }\n    \n\n    function handleChange(e) {\n        setQuantity(e.target.value)\n        setAddBtnHidden(false)\n    }\n\n    function addVariant() {\n        const newData = {\n            productTitle: productSelected.title,\n            productId: productSelected.id,\n            variantTitle: variantSelected.title,\n            variantId: variantSelected.id,\n            cost: variantSelected.cost,\n            quantity: quantity,\n            subtotal: Math.round(variantSelected.cost * quantity * 100, 2) / 100\n        }\n        setDataToUpdate(oldArray => [...oldArray, newData])\n\n        resetOrderItem()\n    }\n\n    function resetOrderItem() {\n        setProductSelected(\"\")\n        setVariantSelected(\"\")\n        setQuantity(0)\n        setProductSelectHidden(true)\n        setVariantSelectHidden(true)\n        setQuantityHidden(true)\n        setAddBtnHidden(true)\n        console.log(variantSelect.current.value)\n        variantSelect.current.value = \"none\"\n        productSelect.current.value = \"none\"\n        quantityInput.current.value = \"\"\n        quantityInput.current.placeholder = \"0\"\n    }\n\n    if (isLoading) {\n        return <div className=\"loader\"></div>;\n    }\n\n    return (\n        <div>\n            <div className=\"top-content\">\n                <span className=\"close\" onClick={() =>  props.toggle()}>&times;    </span>\n                <h2 >{data[0] ? data[0].name : \"Default\"}</h2>\n                <p>Products: {props.values.products}</p>\n                <p>Low Products: {props.values.low_products}</p>\n                <button onClick={orderClicked} className=\"edit-btn\" style={{backgroundColor: editColor}}>{btnText}</button>\n\n                \n            </div>\n      \n            {isOrdering \n\n            ?\n            <div>\n                <div hidden={isOrderItemsHidden} style={orderItemsStyle}>\n                    <button style={{display: \"block\"}} onClick={() => setProductSelectHidden(false)}>New Product</button>\n                    {/* <select ref={productSelect} hidden={isProductSelectHidden} onChange={selectChanged} defaultValue=\"none\" id=\"productFilter\" name=\"productFilter\">\n                        <option value=\"none\">Choose Product:</option>\n                        {data.map((product, index) => {\n                            return (\n                                <option key={index} label={`${product.title} (${product.stockLevel})`} value={product.id}>{product.variants}</option>\n                            )\n                        })}\n                    </select> */}\n                    \n                    <Table columns={columns} data={data} search={false} popupEnabled={false} perPage={5}/>\n                  \n                        {data.map((product, index) => {\n                            return (\n                                <div>\n                                <input type=\"checkbox\" key={index} name={product.id}></input>\n                                <label for={product.id}>{`${product.title} (${product.stockLevel})`}</label>\n                                </div>\n                            )\n                        })}\n         \n              \n        \n\n           \n                           \n                           \n                    \n\n                   \n                    <input type=\"checkbox\"></input>\n                    <select ref={variantSelect} hidden={isVariantSelectHidden} onChange={selectChanged} defaultValue=\"none\" id=\"variantFilter\" name=\"variantFilter\">\n                    <option value=\"none\">Choose Variant:</option>\n                        {variantData.map((variant, index) => {\n                            return (\n                                <option key={index} value={[variant.id, variant.cost]}>{variant.title}</option>\n                            )\n                        })}\n                    </select>\n                    <input ref={quantityInput} hidden={isQuantityHidden} placeholder={quantity} onChange={handleChange} />\n                    <button hidden={isAddBtnHidden} onClick={addVariant}>Add</button>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Product</th>\n                                <th>Variant</th>\n                                <th>Quantity</th>\n                                <th>Cost/unit</th>\n                                <th>Subtotal</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {dataToUpdate.map((order_item, index) => {\n                           \n                                    return (\n                                        <tr key={index}>\n                                            <td>{order_item.productTitle}</td>\n                                            <td>{order_item.variantTitle}</td>\n                                            <td>{order_item.quantity}</td>\n                                            <td>${order_item.cost}</td>\n                                            <td>${order_item.subtotal}</td>\n                                        </tr>\n                                    )\n                                \n                            })}\n                        </tbody>\n                    </table>\n                    \n            \n                    \n                </div>\n                <div hidden={isOrderOptionsHidden}>\n                    {comm_method === \"email\" \n                    ?\n                    <MessageOption type=\"Email\" contact_name={props.values.contact_name} to=\"stepan.cannuscio@gmail.com\" dataToUpdate={dataToUpdate} />\n                    :\n                                \n                    comm_method === \"call\" \n                    ?\n                    <a href=\"tel:4848885912\"><button>Call: 484-888-5912</button></a>\n\n                    :\n                    comm_method === \"text\" \n                    ?\n                    <MessageOption type=\"Text\" contact_name={props.values.contact_name} to=\"4848885912\" dataToUpdate={dataToUpdate} />\n                    :\n                    comm_method === \"website\"\n                    ?\n                    <MessageOption type=\"Website\" contact_name={props.values.contact_name} to=\"https://amazon.com\" dataToUpdate={dataToUpdate} />\n                    :\n                    <p>Not sure about this one!</p>\n                    }           \n                        \n                       \n                        \n                </div>\n        \n            <table style={{textAlign: \"center\"}}>\n            <thead >\n                <tr>\n                    <th className=\"table-header\">Product</th>\n                    <th className=\"table-header\">Quantity</th>\n                    <th className=\"table-header\">Purchases (last 30 days)</th>\n                    <th className=\"table-header\">Stock Level</th>\n                    {/* <th className=\"table-header\">Test</th> */}\n                    <th className=\"table-header\">Last Order</th>\n                    {/* <th style={tableHeaderStyle}> </th> */}\n                </tr>\n            </thead>\n\n            <tbody>\n            {data.map((item, index) => {\n                // var lastOrderData = \"\"\n                var recentOrder = \"\"\n                if (item.status && item.status.split(',')[0] === \"completed\") {\n                    // recentOrder = `Completed | ${new Date(item.completed_date.split(',')[0]).toDateString()} ${'\\n'}| ${item.quantity_ordered.split(',')[0]} units`\n                    recentOrder = `${item.quantity_ordered.split(',')[0]} units received on ${new Date(item.completed_date.split(',')[0]).toDateString()}`\n                } else if (item.status && item.status.split(',')[0] === \"fulfilled\") {\n                    recentOrder = `Fulfilled on ${new Date(item.fulfilled_date.split(',')[0]).toDateString()} - ${item.tracking.split(',')[0]}`\n                } else if (item.status && item.status.split(',')[0] === \"submitted\") {\n                    // recentOrder = `Submitted | ${new Date(item.submitted_date.split(',')[0]).toDateString()} ${'\\n'}| ${item.quantity_ordered.split(',')[0]} units`\n                    recentOrder = `Submitted order for ${item.quantity_ordered.split(',')[0]} units on ${new Date(item.submitted_date.split(',')[0]).toDateString()}`\n                }\n                \n                \n\n                // if (item.status === \"completed\") {\n                //     lastOrderData = item.order_date.slice(0,10) + \" | \" + item.order_quantity\n                // } else if (item.status === \"fulfilled\") {\n                //     lastOrderData = item.order_date.slice(0,10) + \" | \" + item.order_quantity + \" | \" \n                // }\n                return (\n                    <tr key={index}>\n                        <td className=\"table-cell\">{item.title}</td>\n                        <td className=\"table-cell\">{item.quantity}</td>\n                        <td className=\"table-cell\">{item.purchases}</td>\n                        <td className=\"table-cell\">{item.stockLevel}</td>\n                        {/* <td className=\"table-cell\">{item.status ? item.status + \" | \" : \"\"}{item.order_date ? item.order_date + \" | \" : \"\"}{item.tracking}</td> */}\n                        {/* <td className=\"table-cell\">{item.status ? item.status.split(',')[0] : \"\"}</td> */}\n                        <td className=\"table-cell\">{recentOrder}</td>\n                        \n                    </tr>\n                    ) \n                })\n            }\n            </tbody>\n        </table>\n        </div>\n    \n            :\n    \n            <table style={{textAlign: \"center\"}}>\n                <thead >\n                    <tr>\n                        <th className=\"table-header\">Product</th>\n                        <th className=\"table-header\">Quantity</th>\n                        <th className=\"table-header\">Purchases (last 30 days)</th>\n                        <th className=\"table-header\">Stock Level</th>\n                        {/* <th className=\"table-header\">Test</th> */}\n                        <th className=\"table-header\">Last Order</th>\n                        {/* <th style={tableHeaderStyle}> </th> */}\n                    </tr>\n                </thead>\n\n                <tbody>\n                {data.map((item, index) => {\n                    // var lastOrderData = \"\"\n                    var recentOrder = \"\"\n                    if (item.status && item.status.split(',')[0] === \"completed\") {\n                        // recentOrder = `Completed | ${new Date(item.completed_date.split(',')[0]).toDateString()} ${'\\n'}| ${item.quantity_ordered.split(',')[0]} units`\n                        recentOrder = `${item.quantity_ordered.split(',')[0]} units received on ${new Date(item.completed_date.split(',')[0]).toDateString()}`\n                    } else if (item.status && item.status.split(',')[0] === \"fulfilled\") {\n                        recentOrder = `Fulfilled on ${new Date(item.fulfilled_date.split(',')[0]).toDateString()} - ${item.tracking.split(',')[0]}`\n                    } else if (item.status && item.status.split(',')[0] === \"submitted\") {\n                        // recentOrder = `Submitted | ${new Date(item.submitted_date.split(',')[0]).toDateString()} ${'\\n'}| ${item.quantity_ordered.split(',')[0]} units`\n                        recentOrder = `Submitted order for ${item.quantity_ordered.split(',')[0]} units on ${new Date(item.submitted_date.split(',')[0]).toDateString()}`\n                    }\n                    \n                    \n\n                    // if (item.status === \"completed\") {\n                    //     lastOrderData = item.order_date.slice(0,10) + \" | \" + item.order_quantity\n                    // } else if (item.status === \"fulfilled\") {\n                    //     lastOrderData = item.order_date.slice(0,10) + \" | \" + item.order_quantity + \" | \" \n                    // }\n                    return (\n                        <tr key={index}>\n                            <td className=\"table-cell\">{item.title}</td>\n                            <td className=\"table-cell\">{item.quantity}</td>\n                            <td className=\"table-cell\">{item.purchases}</td>\n                            <td className=\"table-cell\">{item.stockLevel}</td>\n                            {/* <td className=\"table-cell\">{item.status ? item.status + \" | \" : \"\"}{item.order_date ? item.order_date + \" | \" : \"\"}{item.tracking}</td> */}\n                            {/* <td className=\"table-cell\">{item.status ? item.status.split(',')[0] : \"\"}</td> */}\n                            <td className=\"table-cell\">{recentOrder}</td>\n                            \n                        </tr>\n                        ) \n                    })\n                }\n                </tbody>\n            </table>\n}       \n  </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}