{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/components/Inventory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"./Layout\";\nimport Table from \"./Table\";\nimport axios from \"axios\";\nexport default function Inventory(props) {\n  _s();\n\n  // console.log('inventory prrops:')\n  // console.log(props)\n  // const columns = React.useMemo(\n  //     () => [\n  //       {\n  //             Header: 'First Name',\n  //             accessor: 'firstName',\n  //           },\n  //           {\n  //             Header: 'Last Name',\n  //             accessor: 'lastName',\n  //             // Use our custom `fuzzyText` filter on this column\n  //             filter: 'fuzzyText',\n  //           },\n  //         ],\n  //     []\n  //   )\n  const [products, setProducts] = useState([]);\n\n  function getProducts() {\n    axios.get('http://localhost:5000/products/', {\n      withCredentials: true\n    }).then(response => {\n      console.log(response);\n\n      if (response.data) {\n        console.log(response.data);\n        console.log(response.data[5]);\n        const loadedProducts = [];\n        response.data.forEach(product => {\n          const newProduct = {\n            productName: product.title,\n            quantity: 0,\n            variants: 0\n          };\n          product.variants.forEach(variant => {\n            newProduct.variants += 1;\n            newProduct.quantity += variant.quantity;\n          });\n          loadedProducts.push(newProduct);\n        });\n        setProducts(loadedProducts);\n      } //   if (response.data.user) {\n      //     console.log('Get User: There is a user saved in the server session: ')\n      //     setUser(response.data.user)\n      //     setLoggedIn(true)\n      //   } else {\n      //     console.log('Get user: no user')\n      //     setUser(response.data.user)\n      //     setLoggedIn(false)\n      //   }\n      //   setLoading(false)\n\n    });\n  }\n\n  useEffect(() => {\n    getProducts();\n  }, []); //   const data = React.useMemo(() => products)\n\n  const dummyData = React.useMemo(() => [{\n    productName: 'Delta 8 Disposable Vape Cart',\n    quantity: 20,\n    variants: 3,\n    stockLevel: \"Low\"\n  }, {\n    productName: 'Bubba Kush',\n    quantity: 100,\n    variants: 2,\n    stockLevel: \"High\"\n  }, {\n    productName: 'Kanna Bliss',\n    quantity: 52,\n    variants: 0,\n    stockLevel: \"Medium\"\n  }, {\n    productName: 'Delta 8 Disposable Vape Cart',\n    quantity: 20,\n    variants: 3,\n    stockLevel: \"Low\"\n  }, {\n    productName: 'Bubba Kush',\n    quantity: 100,\n    variants: 2,\n    stockLevel: \"High\"\n  }, {\n    productName: 'Kanna Bliss',\n    quantity: 52,\n    variants: 0,\n    stockLevel: \"Medium\"\n  }, {\n    productName: 'Delta 8 Disposable Vape Cart',\n    quantity: 20,\n    variants: 3,\n    stockLevel: \"Low\"\n  }, {\n    productName: 'Bubba Kush',\n    quantity: 100,\n    variants: 2,\n    stockLevel: \"High\"\n  }, {\n    productName: 'Kanna Bliss',\n    quantity: 52,\n    variants: 0,\n    stockLevel: \"Medium\"\n  }, {\n    productName: 'Delta 8 Disposable Vape Cart',\n    quantity: 20,\n    variants: 3,\n    stockLevel: \"Low\"\n  }, {\n    productName: 'Bubba Kush',\n    quantity: 100,\n    variants: 2,\n    stockLevel: \"High\"\n  }, {\n    productName: 'Kanna Bliss',\n    quantity: 52,\n    variants: 0,\n    stockLevel: \"Medium\"\n  }, {\n    productName: 'Delta 8 Disposable Vape Cart',\n    quantity: 20,\n    variants: 3,\n    stockLevel: \"Low\"\n  }, {\n    productName: 'Bubba Kush',\n    quantity: 100,\n    variants: 2,\n    stockLevel: \"High\"\n  }, {\n    productName: 'Kanna Bliss',\n    quantity: 52,\n    variants: 0,\n    stockLevel: \"Medium\"\n  }, {\n    productName: 'Delta 8 Disposable Vape Cart',\n    quantity: 20,\n    variants: 3,\n    stockLevel: \"Low\"\n  }, {\n    productName: 'Bubba Kush',\n    quantity: 100,\n    variants: 2,\n    stockLevel: \"High\"\n  }, {\n    productName: 'Kanna Bliss',\n    quantity: 52,\n    variants: 0,\n    stockLevel: \"Medium\"\n  }, {\n    productName: 'Delta 8 Disposable Vape Cart',\n    quantity: 20,\n    variants: 3,\n    stockLevel: \"Low\"\n  }, {\n    productName: 'Bubba Kush',\n    quantity: 100,\n    variants: 2,\n    stockLevel: \"High\"\n  }, {\n    productName: 'Kanna Bliss',\n    quantity: 52,\n    variants: 0,\n    stockLevel: \"Medium\"\n  }, {\n    productName: 'Delta 8 Disposable Vape Cart',\n    quantity: 20,\n    variants: 3,\n    stockLevel: \"Low\"\n  }, {\n    productName: 'Bubba Kush',\n    quantity: 100,\n    variants: 2,\n    stockLevel: \"High\"\n  }, {\n    productName: 'Kanna Bliss',\n    quantity: 52,\n    variants: 0,\n    stockLevel: \"Medium\"\n  }], []);\n  console.log(dummyData);\n  const columns = React.useMemo(() => [{\n    Header: 'Product Name',\n    accessor: 'productName' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Quantity',\n    accessor: 'quantity'\n  }, {\n    Header: 'Variants',\n    accessor: 'variants'\n  }, {\n    Header: 'Stock Level',\n    accessor: 'stockLevel'\n  }], []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    user: props.user,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        gridArea: \"main\",\n        width: \"80%\",\n        margin: \"20px auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Inventory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        data: products\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Inventory, \"ypt/SW/K2twCN0EBD9RQASVvzsQ=\");\n\n_c = Inventory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/components/Inventory.js"],"names":["React","useEffect","useState","Layout","Table","axios","Inventory","props","products","setProducts","getProducts","get","withCredentials","then","response","console","log","data","loadedProducts","forEach","product","newProduct","productName","title","quantity","variants","variant","push","dummyData","useMemo","stockLevel","columns","Header","accessor","user","gridArea","width","margin"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport Layout from \"./Layout\"\nimport Table from \"./Table\"\nimport axios from \"axios\"\n\nexport default function Inventory(props) {\n    // console.log('inventory prrops:')\n    // console.log(props)\n    // const columns = React.useMemo(\n    //     () => [\n    //       {\n         \n    //             Header: 'First Name',\n    //             accessor: 'firstName',\n    //           },\n    //           {\n    //             Header: 'Last Name',\n    //             accessor: 'lastName',\n    //             // Use our custom `fuzzyText` filter on this column\n    //             filter: 'fuzzyText',\n    //           },\n    //         ],\n        \n        \n        \n    //     []\n    //   )\n\n    const [products, setProducts] = useState([])\n\n    function getProducts() {\n        axios.get('http://localhost:5000/products/', {withCredentials: true}).then(response => {\n            console.log(response)\n            if (response.data) {\n                console.log(response.data)\n                console.log(response.data[5])\n                const loadedProducts = []\n                response.data.forEach(product => {\n                    const newProduct = {\n                        productName: product.title,\n                        quantity: 0,\n                        variants: 0\n                    }\n                 \n                    product.variants.forEach(variant => {\n                        newProduct.variants += 1\n                        newProduct.quantity += variant.quantity\n                    })\n                    loadedProducts.push(newProduct)\n                })\n\n                setProducts(loadedProducts)\n                \n            }\n         \n        \n          \n        //   if (response.data.user) {\n        //     console.log('Get User: There is a user saved in the server session: ')\n        //     setUser(response.data.user)\n        //     setLoggedIn(true)\n        //   } else {\n        //     console.log('Get user: no user')\n            \n        //     setUser(response.data.user)\n        //     setLoggedIn(false)\n        //   }\n        //   setLoading(false)\n        });\n      }\n  \n      useEffect(() => {\n        getProducts()\n      }, []);\n\n      \n    \n    //   const data = React.useMemo(() => products)\n    const dummyData = React.useMemo(\n        () => [\n          {\n            productName: 'Delta 8 Disposable Vape Cart',\n            quantity: 20,\n            variants: 3,\n            stockLevel: \"Low\"\n          },\n          {\n            productName: 'Bubba Kush',\n            quantity: 100,\n            variants: 2,\n            stockLevel: \"High\"\n          },\n          {\n            productName: 'Kanna Bliss',\n            quantity: 52,\n            variants: 0,\n            stockLevel: \"Medium\"\n          },\n          {\n            productName: 'Delta 8 Disposable Vape Cart',\n            quantity: 20,\n            variants: 3,\n            stockLevel: \"Low\"\n          },\n          {\n            productName: 'Bubba Kush',\n            quantity: 100,\n            variants: 2,\n            stockLevel: \"High\"\n          },\n          {\n            productName: 'Kanna Bliss',\n            quantity: 52,\n            variants: 0,\n            stockLevel: \"Medium\"\n          },\n          {\n            productName: 'Delta 8 Disposable Vape Cart',\n            quantity: 20,\n            variants: 3,\n            stockLevel: \"Low\"\n          },\n          {\n            productName: 'Bubba Kush',\n            quantity: 100,\n            variants: 2,\n            stockLevel: \"High\"\n          },\n          {\n            productName: 'Kanna Bliss',\n            quantity: 52,\n            variants: 0,\n            stockLevel: \"Medium\"\n          },\n          {\n            productName: 'Delta 8 Disposable Vape Cart',\n            quantity: 20,\n            variants: 3,\n            stockLevel: \"Low\"\n          },\n          {\n            productName: 'Bubba Kush',\n            quantity: 100,\n            variants: 2,\n            stockLevel: \"High\"\n          },\n          {\n            productName: 'Kanna Bliss',\n            quantity: 52,\n            variants: 0,\n            stockLevel: \"Medium\"\n          },\n          {\n            productName: 'Delta 8 Disposable Vape Cart',\n            quantity: 20,\n            variants: 3,\n            stockLevel: \"Low\"\n          },\n          {\n            productName: 'Bubba Kush',\n            quantity: 100,\n            variants: 2,\n            stockLevel: \"High\"\n          },\n          {\n            productName: 'Kanna Bliss',\n            quantity: 52,\n            variants: 0,\n            stockLevel: \"Medium\"\n          },\n          {\n            productName: 'Delta 8 Disposable Vape Cart',\n            quantity: 20,\n            variants: 3,\n            stockLevel: \"Low\"\n          },\n          {\n            productName: 'Bubba Kush',\n            quantity: 100,\n            variants: 2,\n            stockLevel: \"High\"\n          },\n          {\n            productName: 'Kanna Bliss',\n            quantity: 52,\n            variants: 0,\n            stockLevel: \"Medium\"\n          },\n          {\n            productName: 'Delta 8 Disposable Vape Cart',\n            quantity: 20,\n            variants: 3,\n            stockLevel: \"Low\"\n          },\n          {\n            productName: 'Bubba Kush',\n            quantity: 100,\n            variants: 2,\n            stockLevel: \"High\"\n          },\n          {\n            productName: 'Kanna Bliss',\n            quantity: 52,\n            variants: 0,\n            stockLevel: \"Medium\"\n          },\n          {\n            productName: 'Delta 8 Disposable Vape Cart',\n            quantity: 20,\n            variants: 3,\n            stockLevel: \"Low\"\n          },\n          {\n            productName: 'Bubba Kush',\n            quantity: 100,\n            variants: 2,\n            stockLevel: \"High\"\n          },\n          {\n            productName: 'Kanna Bliss',\n            quantity: 52,\n            variants: 0,\n            stockLevel: \"Medium\"\n          },\n        ],\n        []\n      )\n        console.log(dummyData)\n\n\n    const columns = React.useMemo(\n        () => [\n          {\n            Header: 'Product Name',\n            accessor: 'productName', // accessor is the \"key\" in the data\n          },\n          {\n            Header: 'Quantity',\n            accessor: 'quantity',\n          },\n          {\n            Header: 'Variants',\n            accessor: 'variants',\n          },\n          {\n            Header: 'Stock Level',\n            accessor: 'stockLevel',\n          },\n        ],\n        []\n      )\n\n\n    return (\n\n        <Layout user={props.user}>\n            <div style={{gridArea: \"main\", width: \"80%\", margin: \"20px auto\"}}>\n                <h1>Inventory</h1>\n                <Table columns={columns} data={products} />\n            </div>\n        </Layout>\n    )\n    \n}"]},"metadata":{},"sourceType":"module"}