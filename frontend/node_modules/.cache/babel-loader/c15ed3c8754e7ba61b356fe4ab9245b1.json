{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/Vendors/MessageOption.js\";\nconst accountSid = process.env.TWILIO_ACCOUNT_SID;\nconst authToken = process.env.TWILIO_AUTH_TOKEN;\n\nconst client = require('twilio')(accountSid, authToken);\n\nexport default function MessageOption(props) {\n  var toField = \"\";\n  var subject = null;\n\n  if (props.type === \"Email\") {\n    toField = `mailto:${props.to}`;\n    subject = \"?subject=Burman's%20Health%20Shop%20Order\";\n  } else if (props.type === \"Text\") {\n    toField = `sms:+1${props.to}`;\n  }\n\n  const message = `Hey ${props.contact_name}!\\n\\n Hope all is well. Can you please fulfill this order for us?\\n\\n \n        ${props.dataToUpdate.map((orderItem, index) => {\n    console.log(orderItem);\n    var item = orderItem.productTitle;\n\n    if (orderItem.variantTitle) {\n      item += \" - \" + orderItem.variantTitle;\n    }\n\n    return `${item}: ${orderItem.quantity}\\n` // document.write(\"\\n\")\n    ;\n  })}`;\n  console.log(message);\n\n  function submit(type) {\n    console.log('yah');\n\n    if (type === \"Text\") {\n      client.messages.create({\n        body: message,\n        from: '+12066274392',\n        // change to new number and put in env variable\n        to: '+14848885912' // change to the vendor's phone field\n\n      }).then(message => console.log(message.sid));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => submit(props.type),\n    children: props.to\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_c = MessageOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageOption\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/Vendors/MessageOption.js"],"names":["accountSid","process","env","TWILIO_ACCOUNT_SID","authToken","TWILIO_AUTH_TOKEN","client","require","MessageOption","props","toField","subject","type","to","message","contact_name","dataToUpdate","map","orderItem","index","console","log","item","productTitle","variantTitle","quantity","submit","messages","create","body","from","then","sid"],"mappings":";;AACA,MAAMA,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA/B;AACA,MAAMC,SAAS,GAAGH,OAAO,CAACC,GAAR,CAAYG,iBAA9B;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBP,UAAlB,EAA8BI,SAA9B,CAAf;;AAGA,eAAe,SAASI,aAAT,CAAuBC,KAAvB,EAA8B;AAEzC,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,IAAd;;AAEA,MAAIF,KAAK,CAACG,IAAN,KAAe,OAAnB,EAA4B;AACxBF,IAAAA,OAAO,GAAI,UAASD,KAAK,CAACI,EAAG,EAA7B;AACAF,IAAAA,OAAO,GAAG,2CAAV;AACH,GAHD,MAGO,IAAIF,KAAK,CAACG,IAAN,KAAe,MAAnB,EAA2B;AAC9BF,IAAAA,OAAO,GAAI,SAAQD,KAAK,CAACI,EAAG,EAA5B;AACH;;AAID,QAAMC,OAAO,GACR,OAAML,KAAK,CAACM,YAAa;AAClC,UAAUN,KAAK,CAACO,YAAN,CAAmBC,GAAnB,CAAuB,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,QAAII,IAAI,GAAGJ,SAAS,CAACK,YAArB;;AACA,QAAIL,SAAS,CAACM,YAAd,EAA4B;AACxBF,MAAAA,IAAI,IAAI,QAAQJ,SAAS,CAACM,YAA1B;AACH;;AACD,WAEC,GAAEF,IAAK,KAAIJ,SAAS,CAACO,QAAS,IAF/B,CAGI;AAHJ;AAOH,GAbC,CAaC,EAfP;AAiBAL,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;;AAEA,WAASY,MAAT,CAAgBd,IAAhB,EAAsB;AAClBQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,QAAIT,IAAI,KAAK,MAAb,EAAqB;AACjBN,MAAAA,MAAM,CAACqB,QAAP,CACKC,MADL,CACY;AACJC,QAAAA,IAAI,EAAEf,OADF;AAEJgB,QAAAA,IAAI,EAAE,cAFF;AAEkB;AACtBjB,QAAAA,EAAE,EAAE,cAHA,CAGe;;AAHf,OADZ,EAMKkB,IANL,CAMUjB,OAAO,IAAIM,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACkB,GAApB,CANrB;AAOH;AAEJ;;AAMD,sBACI;AAAQ,IAAA,OAAO,EAAE,MAAMN,MAAM,CAACjB,KAAK,CAACG,IAAP,CAA7B;AAAA,cAA4CH,KAAK,CAACI;AAAlD;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;KA1EuBL,a","sourcesContent":["\nconst accountSid = process.env.TWILIO_ACCOUNT_SID;\nconst authToken = process.env.TWILIO_AUTH_TOKEN;\nconst client = require('twilio')(accountSid, authToken);\n\n\nexport default function MessageOption(props) {\n\n    var toField = \"\"\n    var subject = null\n\n    if (props.type === \"Email\") {\n        toField = `mailto:${props.to}`\n        subject = \"?subject=Burman's%20Health%20Shop%20Order\"\n    } else if (props.type === \"Text\") {\n        toField = `sms:+1${props.to}`\n    }   \n\n    \n    \n    const message = \n        `Hey ${props.contact_name}!\\n\\n Hope all is well. Can you please fulfill this order for us?\\n\\n \n        ${props.dataToUpdate.map((orderItem, index) => {\n            console.log(orderItem)\n            var item = orderItem.productTitle \n            if (orderItem.variantTitle) {\n                item += \" - \" + orderItem.variantTitle\n            }\n            return (\n                \n            `${item}: ${orderItem.quantity}\\n`\n                // document.write(\"\\n\")\n                \n                \n            )\n        })}`\n\n    console.log(message)\n\n    function submit(type) {\n        console.log('yah')\n        if (type === \"Text\") {\n            client.messages\n                .create({\n                    body: message,\n                    from: '+12066274392', // change to new number and put in env variable\n                    to: '+14848885912' // change to the vendor's phone field\n                })\n                .then(message => console.log(message.sid));\n        }\n\n    }\n\n    \n\n\n\n    return (\n        <button onClick={() => submit(props.type)}>{props.to}\n            \n            {/* <a target=\"_blank\" href={`${toField}${subject ? subject : \"\"}&body=Hey ${props.contact_name}! %0D%0A%0D%0AHope all is well. Can you please fulfill this order for us?%0D%0A%0D%0A----------------------------------------%0D%0A\n                ${props.dataToUpdate.map((orderItem, index) => {\n                    console.log(orderItem)\n                    var item = orderItem.productTitle \n                    if (orderItem.variantTitle) {\n                        item += \" - \" + orderItem.variantTitle\n                    }\n                    return (\n                        \n                    orderItem === '\\n'? '%0D%0A' : `${item}: ${orderItem.quantity}`\n                        // document.write(\"\\n\")\n                        \n                        \n                    )\n                }).join(\"\\n\")}%0D%0A%0D%0A----------------------------------------%0D%0A%0D%0AThanks!%0D%0A%0D%0A-%20Ted`}>\n               {`${props.type}: ${props.to}`}\n            </a> */}\n        </button>\n    )\n  \n}"]},"metadata":{},"sourceType":"module"}