{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/components/Table.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// import React from 'react'\n// import { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table'\n// // A great library for fuzzy filtering/sorting items\n// import {matchSorter} from 'match-sorter'\n// // Our table component\n// export default function Table({ columns, data }) {\n//     // Define a default UI for filtering\n// function GlobalFilter({\n//     preGlobalFilteredRows,\n//     globalFilter,\n//     setGlobalFilter,\n//   }) {\n//     const count = preGlobalFilteredRows.length\n//     const [value, setValue] = React.useState(globalFilter)\n//     const onChange = useAsyncDebounce(value => {\n//       setGlobalFilter(value || undefined)\n//     }, 200)\n//     return (\n//       <span>\n//         Search:{' '}\n//         <input\n//           value={value || \"\"}\n//           onChange={e => {\n//             setValue(e.target.value);\n//             onChange(e.target.value);\n//           }}\n//           placeholder={`${count} records...`}\n//           style={{\n//             fontSize: '1.1rem',\n//             border: '0',\n//           }}\n//         />\n//       </span>\n//     )\n//   }\n//   // Define a default UI for filtering\n//   function DefaultColumnFilter({\n//     column: { filterValue, preFilteredRows, setFilter },\n//   }) {\n//     const count = preFilteredRows.length\n//     return (\n//       <input\n//         value={filterValue || ''}\n//         onChange={e => {\n//           setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n//         }}\n//         placeholder={`Search ${count} records...`}\n//       />\n//     )\n//   }\n//   function fuzzyTextFilterFn(rows, id, filterValue) {\n//     return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\n//   }\n//   // Let the table remove the filter if the string is empty\n//   fuzzyTextFilterFn.autoRemove = val => !val\n//   const filterTypes = React.useMemo(\n//     () => ({\n//       // Add a new fuzzyTextFilterFn filter type.\n//       fuzzyText: fuzzyTextFilterFn,\n//       // Or, override the default text filter to use\n//       // \"startWith\"\n//       text: (rows, id, filterValue) => {\n//         return rows.filter(row => {\n//           const rowValue = row.values[id]\n//           return rowValue !== undefined\n//             ? String(rowValue)\n//                 .toLowerCase()\n//                 .startsWith(String(filterValue).toLowerCase())\n//             : true\n//         })\n//       },\n//     }),\n//     []\n//   )\n//   const defaultColumn = React.useMemo(\n//     () => ({\n//       // Let's set up our default Filter UI\n//       Filter: DefaultColumnFilter,\n//     }),\n//     []\n//   )\n//   const {\n//     getTableProps,\n//     getTableBodyProps,\n//     headerGroups,\n//     rows,\n//     prepareRow,\n//     state,\n//     visibleColumns,\n//     preGlobalFilteredRows,\n//     setGlobalFilter,\n//   } = useTable(\n//     {\n//       columns,\n//       data,\n//       defaultColumn, // Be sure to pass the defaultColumn option\n//       filterTypes,\n//     },\n//     useFilters, // useFilters!\n//     useGlobalFilter // useGlobalFilter!\n//   )\n//   // We don't want to render all of the rows for this example, so cap\n//   // it for this use case\n//   const firstPageRows = rows.slice(0, 10)\n//   return (\n//     <>\n//     <div class=\"inventory-table\">\n//     {/* <GlobalFilter\n//                 preGlobalFilteredRows={preGlobalFilteredRows}\n//                 globalFilter={state.globalFilter}\n//                 setGlobalFilter={setGlobalFilter}\n//                 // style={globalFilterr}\n//               /> */}\n//       <table {...getTableProps()}>\n//         <thead>\n//           {headerGroups.map(headerGroup => (\n//             <tr {...headerGroup.getHeaderGroupProps()}>\n//               {headerGroup.headers.map(column => (\n//                 <th {...column.getHeaderProps()}>\n//                   {column.render('Header')}\n//                   {/* Render the columns filter UI */}\n//                   <div>{column.canFilter ? column.render('Filter') : null}</div>\n//                 </th>\n//               ))}\n//             </tr>\n//           ))}\n//           <tr>\n//             <th\n//               colSpan={visibleColumns.length}\n//               style={{\n//                 textAlign: 'left',\n//               }}\n//             >\n//             </th>\n//           </tr>\n//         </thead>\n//         <tbody {...getTableBodyProps()}>\n//           {firstPageRows.map((row, i) => {\n//             prepareRow(row)\n//             return (\n//               <tr {...row.getRowProps()}>\n//                 {row.cells.map(cell => {\n//                   return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n//                 })}\n//               </tr>\n//             )\n//           })}\n//         </tbody>\n//       </table>\n//       <br />\n//       <div>Showing the first 20 results of {rows.length} rows</div>\n//       <div>\n//         <pre>\n//           <code>{JSON.stringify(state.filters, null, 2)}</code>\n//         </pre>\n//       </div>\n//       </div>\n//     </>\n//   )\n// }\n// // \nimport React, { useState } from \"react\";\nimport { useTable, useAsyncDebounce, useGlobalFilter, usePagination, useSortBy } from \"react-table\";\nimport searchIcon from \"../images/search.png\";\nimport Popup from \"./Popup\"; // Define a default UI for filtering\n\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter\n}) {\n  _s();\n\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  const searchStyle = {\n    border: '1px solid rgba(30,56,77, 50%)',\n    borderRadius: '5px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: searchStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        margin: \"0 10px\",\n        width: \"12px\"\n      },\n      src: searchIcon,\n      alt: \"search icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: value || \"\",\n      onChange: e => {\n        setValue(e.target.value);\n        onChange(e.target.value);\n      },\n      placeholder: `Search products...`,\n      style: {\n        fontSize: '1.1rem',\n        border: '0',\n        width: '80%',\n        padding: \"10px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GlobalFilter, \"u76gItWTPW4jhTYSCcNG7/LfbyA=\", false, function () {\n  return [useAsyncDebounce];\n});\n\n_c = GlobalFilter;\nexport default function Table() {\n  _s2();\n\n  const data = React.useMemo(() => [{\n    productName: 'Delta 8 Disposable Vape Cart',\n    quantity: 20,\n    variants: 3,\n    stockLevel: \"Low\"\n  }, {\n    productName: 'Bubba Kush',\n    quantity: 100,\n    variants: 2,\n    stockLevel: \"High\"\n  }, {\n    productName: 'Kanna Bliss',\n    quantity: 52,\n    variants: 0,\n    stockLevel: \"Medium\"\n  }, {\n    productName: 'Delta 8 Disposable Vape Cart',\n    quantity: 20,\n    variants: 3,\n    stockLevel: \"Low\"\n  }, {\n    productName: 'Bubba Kush',\n    quantity: 100,\n    variants: 2,\n    stockLevel: \"High\"\n  }, {\n    productName: 'Kanna Bliss',\n    quantity: 52,\n    variants: 0,\n    stockLevel: \"Medium\"\n  }, {\n    productName: 'Delta 8 Disposable Vape Cart',\n    quantity: 20,\n    variants: 3,\n    stockLevel: \"Low\"\n  }, {\n    productName: 'Bubba Kush',\n    quantity: 100,\n    variants: 2,\n    stockLevel: \"High\"\n  }, {\n    productName: 'Kanna Bliss',\n    quantity: 52,\n    variants: 0,\n    stockLevel: \"Medium\"\n  }, {\n    productName: 'Delta 8 Disposable Vape Cart',\n    quantity: 20,\n    variants: 3,\n    stockLevel: \"Low\"\n  }, {\n    productName: 'Bubba Kush',\n    quantity: 100,\n    variants: 2,\n    stockLevel: \"High\"\n  }, {\n    productName: 'Kanna Bliss',\n    quantity: 52,\n    variants: 0,\n    stockLevel: \"Medium\"\n  }, {\n    productName: 'Delta 8 Disposable Vape Cart',\n    quantity: 20,\n    variants: 3,\n    stockLevel: \"Low\"\n  }, {\n    productName: 'Bubba Kush',\n    quantity: 100,\n    variants: 2,\n    stockLevel: \"High\"\n  }, {\n    productName: 'Kanna Bliss',\n    quantity: 52,\n    variants: 0,\n    stockLevel: \"Medium\"\n  }, {\n    productName: 'Delta 8 Disposable Vape Cart',\n    quantity: 20,\n    variants: 3,\n    stockLevel: \"Low\"\n  }, {\n    productName: 'Bubba Kush',\n    quantity: 100,\n    variants: 2,\n    stockLevel: \"High\"\n  }, {\n    productName: 'Kanna Bliss',\n    quantity: 52,\n    variants: 0,\n    stockLevel: \"Medium\"\n  }, {\n    productName: 'Delta 8 Disposable Vape Cart',\n    quantity: 20,\n    variants: 3,\n    stockLevel: \"Low\"\n  }, {\n    productName: 'Bubba Kush',\n    quantity: 100,\n    variants: 2,\n    stockLevel: \"High\"\n  }, {\n    productName: 'Kanna Bliss',\n    quantity: 52,\n    variants: 0,\n    stockLevel: \"Medium\"\n  }, {\n    productName: 'Delta 8 Disposable Vape Cart',\n    quantity: 20,\n    variants: 3,\n    stockLevel: \"Low\"\n  }, {\n    productName: 'Bubba Kush',\n    quantity: 100,\n    variants: 2,\n    stockLevel: \"High\"\n  }, {\n    productName: 'Kanna Bliss',\n    quantity: 52,\n    variants: 0,\n    stockLevel: \"Medium\"\n  }], []);\n  const columns = React.useMemo(() => [{\n    Header: 'Product Name',\n    accessor: 'productName' // accessor is the \"key\" in the data\n\n  }, {\n    Header: 'Quantity',\n    accessor: 'quantity'\n  }, {\n    Header: 'Variants',\n    accessor: 'variants'\n  }, {\n    Header: 'Stock Level',\n    accessor: 'stockLevel'\n  }], []);\n  const [isPopup, setIsPopup] = useState(false);\n  const [productPopup, setProductPopup] = useState({});\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    state,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    },\n    prepareRow,\n    preGlobalFilteredRows,\n    setGlobalFilter\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0,\n      pageSize: 10\n    }\n  }, useGlobalFilter, useSortBy, usePagination);\n\n  function togglePopup(cell) {\n    setIsPopup(!isPopup);\n    setProductPopup(cell);\n    console.log(cell.value);\n  }\n\n  document.body.style.backgroundColor = \"red\"; //   const pageLimit = 10\n  //   const firstPageRows = rows.slice(0, pageLimit);\n\n  const results = page.length > 10 ? 10 : page.length;\n  return (\n    /*#__PURE__*/\n    // apply the table props\n    _jsxDEV(\"div\", {\n      class: \"inventory-table\",\n      children: [/*#__PURE__*/_jsxDEV(GlobalFilter, {\n        preGlobalFilteredRows: preGlobalFilteredRows,\n        globalFilter: state.globalFilter,\n        setGlobalFilter: setGlobalFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"25px 0\",\n          color: 'rgba(0,0,0, 57%)'\n        },\n        children: [\"Showing the first \", results, \" results of \", rows.length, \" rows\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: // Loop over the header rows\n          headerGroups.map(headerGroup =>\n          /*#__PURE__*/\n          // Apply the header row props\n          _jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: // Loop over the headers in each row\n            headerGroup.headers.map(column =>\n            /*#__PURE__*/\n            // Apply the header cell props\n            _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: [// Render the header\n              column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"#76c32d\",\n                  fontSize: \"14px\"\n                },\n                children: column.isSorted ? column.isSortedDesc ? ' (high-low)' : ' (low-high)' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: page.map((row, i) => {\n            // Prepare the row for display\n            prepareRow(row);\n            return (\n              /*#__PURE__*/\n              // Apply the row props\n              _jsxDEV(\"tr\", { ...row.getRowProps(),\n                children: // Loop over the rows cells\n                row.cells.map(cell => {\n                  const stockStyle = {\n                    color: \"#1E384D\"\n                  }; // var colorStyle = \"#1E384D\"\n\n                  if (cell.column.id === \"stockLevel\") {\n                    stockStyle.padding = \"5px\";\n                    stockStyle.borderRadius = \"5px\";\n                    stockStyle.color = \"white\";\n                    stockStyle.textAlign = \"center\";\n\n                    if (cell.value === \"Low\") {\n                      stockStyle.backgroundColor = \"red\";\n                    } else if (cell.value === \"Medium\") {\n                      stockStyle.backgroundColor = \"#FFD300\";\n                    } else {\n                      stockStyle.backgroundColor = \"#4CAF50\";\n                    } // console.log(cell)\n\n                  } // Apply the cell props\n\n\n                  return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                    onClick: () => togglePopup(cell),\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: stockStyle,\n                      children: // Render the cell contents\n                      cell.render('Cell')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 528,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 527,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 21\n              }, this)\n            );\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"right\",\n          margin: \"40px 10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: \"#EFEFEF\",\n            border: \"none\",\n            padding: \"5px 15px\",\n            margin: \"0 5px\",\n            borderRadius: \"5px\",\n            color: \"#1E384D\"\n          },\n          onClick: () => previousPage(),\n          disabled: !canPreviousPage,\n          children: 'Previous'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 9\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: \"#1E384D\",\n            border: \"none\",\n            padding: \"5px 15px\",\n            margin: \"0 5px\",\n            borderRadius: \"5px\",\n            color: \"#EFEFEF\"\n          },\n          onClick: () => nextPage(),\n          disabled: !canNextPage,\n          children: 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 9\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this), isPopup ? /*#__PURE__*/_jsxDEV(Popup, {\n        product: productPopup,\n        toggle: () => togglePopup()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 20\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s2(Table, \"rgFuMJeqBWjyIdgE0IjyNM4n+Qs=\", false, function () {\n  return [useTable];\n});\n\n_c2 = Table;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalFilter\");\n$RefreshReg$(_c2, \"Table\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/components/Table.js"],"names":["React","useState","useTable","useAsyncDebounce","useGlobalFilter","usePagination","useSortBy","searchIcon","Popup","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","value","setValue","onChange","undefined","searchStyle","border","borderRadius","margin","width","e","target","fontSize","padding","Table","data","useMemo","productName","quantity","variants","stockLevel","columns","Header","accessor","isPopup","setIsPopup","productPopup","setProductPopup","getTableProps","getTableBodyProps","headerGroups","rows","state","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","pageIndex","pageSize","prepareRow","initialState","togglePopup","cell","console","log","document","body","style","backgroundColor","results","color","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","stockStyle","id","textAlign","getCellProps"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,QAAT,EAAmBC,gBAAnB,EAAqCC,eAArC,EAAsDC,aAAtD,EAAqEC,SAArE,QAAsF,aAAtF;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAGI;;AACA,SAASC,YAAT,CAAsB;AAClBC,EAAAA,qBADkB;AAElBC,EAAAA,YAFkB;AAGlBC,EAAAA;AAHkB,CAAtB,EAIK;AAAA;;AACD,QAAMC,KAAK,GAAGH,qBAAqB,CAACI,MAApC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,KAAK,CAACC,QAAN,CAAeU,YAAf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","sourcesContent":["// import React from 'react'\n// import { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table'\n// // A great library for fuzzy filtering/sorting items\n// import {matchSorter} from 'match-sorter'\n\n\n\n// // Our table component\n// export default function Table({ columns, data }) {\n//     // Define a default UI for filtering\n// function GlobalFilter({\n//     preGlobalFilteredRows,\n//     globalFilter,\n//     setGlobalFilter,\n//   }) {\n//     const count = preGlobalFilteredRows.length\n//     const [value, setValue] = React.useState(globalFilter)\n//     const onChange = useAsyncDebounce(value => {\n//       setGlobalFilter(value || undefined)\n//     }, 200)\n  \n//     return (\n//       <span>\n//         Search:{' '}\n//         <input\n//           value={value || \"\"}\n//           onChange={e => {\n//             setValue(e.target.value);\n//             onChange(e.target.value);\n//           }}\n//           placeholder={`${count} records...`}\n//           style={{\n//             fontSize: '1.1rem',\n//             border: '0',\n//           }}\n//         />\n//       </span>\n//     )\n//   }\n  \n//   // Define a default UI for filtering\n//   function DefaultColumnFilter({\n//     column: { filterValue, preFilteredRows, setFilter },\n//   }) {\n//     const count = preFilteredRows.length\n  \n//     return (\n//       <input\n//         value={filterValue || ''}\n//         onChange={e => {\n//           setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n//         }}\n//         placeholder={`Search ${count} records...`}\n//       />\n//     )\n//   }\n  \n//   function fuzzyTextFilterFn(rows, id, filterValue) {\n//     return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\n//   }\n  \n//   // Let the table remove the filter if the string is empty\n//   fuzzyTextFilterFn.autoRemove = val => !val\n//   const filterTypes = React.useMemo(\n//     () => ({\n//       // Add a new fuzzyTextFilterFn filter type.\n//       fuzzyText: fuzzyTextFilterFn,\n//       // Or, override the default text filter to use\n//       // \"startWith\"\n//       text: (rows, id, filterValue) => {\n//         return rows.filter(row => {\n//           const rowValue = row.values[id]\n//           return rowValue !== undefined\n//             ? String(rowValue)\n//                 .toLowerCase()\n//                 .startsWith(String(filterValue).toLowerCase())\n//             : true\n//         })\n//       },\n//     }),\n//     []\n//   )\n\n//   const defaultColumn = React.useMemo(\n//     () => ({\n//       // Let's set up our default Filter UI\n//       Filter: DefaultColumnFilter,\n//     }),\n//     []\n//   )\n\n//   const {\n//     getTableProps,\n//     getTableBodyProps,\n//     headerGroups,\n//     rows,\n//     prepareRow,\n//     state,\n//     visibleColumns,\n//     preGlobalFilteredRows,\n//     setGlobalFilter,\n//   } = useTable(\n//     {\n//       columns,\n//       data,\n//       defaultColumn, // Be sure to pass the defaultColumn option\n//       filterTypes,\n//     },\n//     useFilters, // useFilters!\n//     useGlobalFilter // useGlobalFilter!\n//   )\n\n//   // We don't want to render all of the rows for this example, so cap\n//   // it for this use case\n//   const firstPageRows = rows.slice(0, 10)\n\n//   return (\n//     <>\n//     <div class=\"inventory-table\">\n//     {/* <GlobalFilter\n//                 preGlobalFilteredRows={preGlobalFilteredRows}\n//                 globalFilter={state.globalFilter}\n//                 setGlobalFilter={setGlobalFilter}\n//                 // style={globalFilterr}\n//               /> */}\n//       <table {...getTableProps()}>\n//         <thead>\n//           {headerGroups.map(headerGroup => (\n//             <tr {...headerGroup.getHeaderGroupProps()}>\n//               {headerGroup.headers.map(column => (\n//                 <th {...column.getHeaderProps()}>\n//                   {column.render('Header')}\n//                   {/* Render the columns filter UI */}\n//                   <div>{column.canFilter ? column.render('Filter') : null}</div>\n//                 </th>\n//               ))}\n//             </tr>\n//           ))}\n//           <tr>\n//             <th\n//               colSpan={visibleColumns.length}\n//               style={{\n//                 textAlign: 'left',\n//               }}\n//             >\n              \n//             </th>\n//           </tr>\n//         </thead>\n//         <tbody {...getTableBodyProps()}>\n//           {firstPageRows.map((row, i) => {\n//             prepareRow(row)\n//             return (\n//               <tr {...row.getRowProps()}>\n//                 {row.cells.map(cell => {\n//                   return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n//                 })}\n//               </tr>\n//             )\n//           })}\n//         </tbody>\n//       </table>\n//       <br />\n//       <div>Showing the first 20 results of {rows.length} rows</div>\n//       <div>\n//         <pre>\n//           <code>{JSON.stringify(state.filters, null, 2)}</code>\n//         </pre>\n//       </div>\n//       </div>\n//     </>\n//   )\n// }\n\n// // \n\n\nimport React, {useState} from \"react\"\nimport { useTable, useAsyncDebounce, useGlobalFilter, usePagination, useSortBy } from \"react-table\"\nimport searchIcon from \"../images/search.png\"\nimport Popup from \"./Popup\"\n\n\n    // Define a default UI for filtering\n    function GlobalFilter({\n        preGlobalFilteredRows,\n        globalFilter,\n        setGlobalFilter,\n      }) {\n        const count = preGlobalFilteredRows.length\n        const [value, setValue] = React.useState(globalFilter)\n        const onChange = useAsyncDebounce(value => {\n          setGlobalFilter(value || undefined)\n        }, 200)\n\n        const searchStyle = {\n            border: '1px solid rgba(30,56,77, 50%)',\n            borderRadius: '5px',\n    \n        }\n      \n        return (\n        <div style={searchStyle}>\n            <img style={{margin: \"0 10px\", width: \"12px\"}} src={searchIcon} alt=\"search icon\" />\n        \n            \n            <input\n              value={value || \"\"}\n              onChange={e => {\n                setValue(e.target.value);\n                onChange(e.target.value);\n              }}\n              placeholder={`Search products...`}\n              style={{\n                fontSize: '1.1rem',\n                border: '0',\n                width: '80%',\n                padding: \"10px 0\"\n              }}\n            />\n          \n          </div>\n        )\n      }\n    \n       \n\n\n\nexport default function Table() {\n\n    const data = React.useMemo(\n        () => [\n          {\n            productName: 'Delta 8 Disposable Vape Cart',\n            quantity: 20,\n            variants: 3,\n            stockLevel: \"Low\"\n          },\n          {\n            productName: 'Bubba Kush',\n            quantity: 100,\n            variants: 2,\n            stockLevel: \"High\"\n          },\n          {\n            productName: 'Kanna Bliss',\n            quantity: 52,\n            variants: 0,\n            stockLevel: \"Medium\"\n          },\n          {\n            productName: 'Delta 8 Disposable Vape Cart',\n            quantity: 20,\n            variants: 3,\n            stockLevel: \"Low\"\n          },\n          {\n            productName: 'Bubba Kush',\n            quantity: 100,\n            variants: 2,\n            stockLevel: \"High\"\n          },\n          {\n            productName: 'Kanna Bliss',\n            quantity: 52,\n            variants: 0,\n            stockLevel: \"Medium\"\n          },\n          {\n            productName: 'Delta 8 Disposable Vape Cart',\n            quantity: 20,\n            variants: 3,\n            stockLevel: \"Low\"\n          },\n          {\n            productName: 'Bubba Kush',\n            quantity: 100,\n            variants: 2,\n            stockLevel: \"High\"\n          },\n          {\n            productName: 'Kanna Bliss',\n            quantity: 52,\n            variants: 0,\n            stockLevel: \"Medium\"\n          },\n          {\n            productName: 'Delta 8 Disposable Vape Cart',\n            quantity: 20,\n            variants: 3,\n            stockLevel: \"Low\"\n          },\n          {\n            productName: 'Bubba Kush',\n            quantity: 100,\n            variants: 2,\n            stockLevel: \"High\"\n          },\n          {\n            productName: 'Kanna Bliss',\n            quantity: 52,\n            variants: 0,\n            stockLevel: \"Medium\"\n          },\n          {\n            productName: 'Delta 8 Disposable Vape Cart',\n            quantity: 20,\n            variants: 3,\n            stockLevel: \"Low\"\n          },\n          {\n            productName: 'Bubba Kush',\n            quantity: 100,\n            variants: 2,\n            stockLevel: \"High\"\n          },\n          {\n            productName: 'Kanna Bliss',\n            quantity: 52,\n            variants: 0,\n            stockLevel: \"Medium\"\n          },\n          {\n            productName: 'Delta 8 Disposable Vape Cart',\n            quantity: 20,\n            variants: 3,\n            stockLevel: \"Low\"\n          },\n          {\n            productName: 'Bubba Kush',\n            quantity: 100,\n            variants: 2,\n            stockLevel: \"High\"\n          },\n          {\n            productName: 'Kanna Bliss',\n            quantity: 52,\n            variants: 0,\n            stockLevel: \"Medium\"\n          },\n          {\n            productName: 'Delta 8 Disposable Vape Cart',\n            quantity: 20,\n            variants: 3,\n            stockLevel: \"Low\"\n          },\n          {\n            productName: 'Bubba Kush',\n            quantity: 100,\n            variants: 2,\n            stockLevel: \"High\"\n          },\n          {\n            productName: 'Kanna Bliss',\n            quantity: 52,\n            variants: 0,\n            stockLevel: \"Medium\"\n          },\n          {\n            productName: 'Delta 8 Disposable Vape Cart',\n            quantity: 20,\n            variants: 3,\n            stockLevel: \"Low\"\n          },\n          {\n            productName: 'Bubba Kush',\n            quantity: 100,\n            variants: 2,\n            stockLevel: \"High\"\n          },\n          {\n            productName: 'Kanna Bliss',\n            quantity: 52,\n            variants: 0,\n            stockLevel: \"Medium\"\n          },\n        ],\n        []\n      )\n\n\n\n    const columns = React.useMemo(\n        () => [\n          {\n            Header: 'Product Name',\n            accessor: 'productName', // accessor is the \"key\" in the data\n          },\n          {\n            Header: 'Quantity',\n            accessor: 'quantity',\n          },\n          {\n            Header: 'Variants',\n            accessor: 'variants',\n          },\n          {\n            Header: 'Stock Level',\n            accessor: 'stockLevel',\n          },\n        ],\n        []\n      )\n\n\n    const [isPopup, setIsPopup] = useState(false)\n    const [productPopup, setProductPopup] = useState({})\n    \n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        state,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n\n        state: { pageIndex, pageSize },\n        prepareRow,\n        preGlobalFilteredRows,\n        setGlobalFilter,\n      } = useTable(\n          {\n              columns,\n              data,\n              initialState: {pageIndex: 0, pageSize: 10}\n          },\n          useGlobalFilter,\n          useSortBy,\n          usePagination,\n      )\n      \n          function togglePopup(cell) {\n              setIsPopup(!isPopup)\n              setProductPopup(cell)\n              console.log(cell.value)\n              \n          }\n          document.body.style.backgroundColor = \"red\"\n\n    //   const pageLimit = 10\n    //   const firstPageRows = rows.slice(0, pageLimit);\n\n      const results = page.length > 10 ? 10 : page.length\n      return (\n    \n          // apply the table props\n        <div class=\"inventory-table\">\n             <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={state.globalFilter}\n                setGlobalFilter={setGlobalFilter}\n              />\n        <div style={{margin: \"25px 0\", color: 'rgba(0,0,0, 57%)'}}>Showing the first {results} results of {rows.length} rows</div>\n        <table {...getTableProps()}>\n       \n          <thead>\n            {// Loop over the header rows\n            headerGroups.map(headerGroup => (\n              // Apply the header row props\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {// Loop over the headers in each row\n                headerGroup.headers.map(column => (\n                  // Apply the header cell props\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {// Render the header\n                    column.render('Header')}\n                    {/* Add a sort direction indicator */}\n                  <span style={{color: \"#76c32d\", fontSize: \"14px\"}}>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? ' (high-low)'\n                        : ' (low-high)'\n                      : ''}\n                  </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          {/* Apply the table body props */}\n          <tbody {...getTableBodyProps()}>\n    \n        \n            {page.map((row, i) => {\n\n                // Prepare the row for display\n                prepareRow(row)\n                return (\n                    // Apply the row props\n                    <tr {...row.getRowProps()}>\n                    {// Loop over the rows cells\n                    row.cells.map(cell => {\n                        const stockStyle = {\n                            color: \"#1E384D\"\n                        } \n                        // var colorStyle = \"#1E384D\"\n                        if (cell.column.id === \"stockLevel\") {\n                            \n                            stockStyle.padding = \"5px\"\n                            stockStyle.borderRadius = \"5px\"\n                            stockStyle.color = \"white\"\n                            stockStyle.textAlign = \"center\"\n\n                            if (cell.value === \"Low\") {\n                                stockStyle.backgroundColor = \"red\"\n                                \n                            } else if (cell.value === \"Medium\") {\n                                stockStyle.backgroundColor = \"#FFD300\"\n                            } else {\n                                stockStyle.backgroundColor = \"#4CAF50\"\n                            }\n                             \n                            // console.log(cell)\n                        }\n                        // Apply the cell props\n                        return (\n                        <td {...cell.getCellProps()} onClick={() => togglePopup(cell)}>\n                            <div style={stockStyle}>\n                           \n                            {// Render the cell contents\n                            cell.render('Cell')}\n                            </div>\n                        </td>\n                        )\n                    })}\n                    </tr>\n                )\n                })}\n             \n           \n          </tbody>\n        </table>\n        <div style={{textAlign: \"right\", margin: \"40px 10px\"}}>\n        \n        <button style={{backgroundColor: \"#EFEFEF\", border: \"none\", padding: \"5px 15px\", margin: \"0 5px\", borderRadius: \"5px\", color: \"#1E384D\"}} onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'Previous'}\n        </button>{' '}\n        <button style={{backgroundColor: \"#1E384D\", border: \"none\", padding: \"5px 15px\", margin: \"0 5px\", borderRadius: \"5px\", color: \"#EFEFEF\"}} onClick={() => nextPage()} disabled={!canNextPage}>\n          {'Next'}\n        </button>{' '}\n        </div>\n        {isPopup ? <Popup product={productPopup} toggle={() => togglePopup()} /> : null}\n        \n        </div>\n        \n      )\n     \n}\n\n"]},"metadata":{},"sourceType":"module"}