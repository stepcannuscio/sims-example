{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Vendors/VendorPopup.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useMemo, useRef } from \"react\";\nimport \"../styles/Popup.css\";\nimport Table from \"../components/Table\";\nimport ProgressBar from \"./ProgressBar\";\nimport * as router from \"./vendorAPI\";\nexport default function VendorPopup(props) {\n  _s();\n\n  const [percentage, setPercentage] = useState(0);\n  const [btnText, setBtnText] = useState(\"Order\"); // const [extraOptionText, setExtraOptionText] = useState(\"\")\n\n  const [isLoading, setLoading] = useState(true);\n  const [editColor, setEditColor] = useState(\"#76c32d\");\n  const [dataToUpdate, setDataToUpdate] = useState([]);\n  const [variantsToUpdate, setVariantsToUpdate] = useState([]);\n  const [data, setData] = useState([]);\n  const [commMethods, setCommMethods] = useState([]);\n  const [commMethod, setCommMethod] = useState(null);\n  const [variantData, setVariantData] = useState([]);\n  const [isOrdering, setOrdering] = useState(false); // const [nextPage, setNextPage] = useState(false)\n  // const [reviewOrder, setReviewOrder] = useState(false)\n\n  const [orderState, setOrderState] = useState(null);\n  const [isAddItemHidden, setAddItemHidden] = useState(true); // const [isOrderItemsHidden, setOrderItemsHidden] = useState(true)\n  // const [isExtraOptionHidden, setExtraOptionHidden] = useState(true)\n  // const [isManualOrderBtnHidden, setManualOrderBtnHidden] = useState(true)\n  // const commMethodPlain = props.data.row.values.comm_method\n  // var commMethod = commMethodPlain && commMethodPlain.includes(',') ? commMethodPlain.split(',')[0] : commMethodPlain\n  // console.log(dataToUpdate)\n  // console.log(variantData)\n\n  const addProductName = useRef();\n  const addVariantName = useRef();\n  const addQuantity = useRef();\n  const addCost = useRef();\n  const orderSteps = 4; // const phone = props.values.phone ? `${props.values.phone.slice(0,3)}-${props.values.phone.slice(3,6)}-${props.values.phone.slice(6,)}` : \"\"\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  const columns = useMemo(() => [{\n    Header: 'ID',\n    accessor: 'id',\n    // Product ID\n    sortDescFirst: true\n  }, {\n    Header: 'Product',\n    accessor: 'title',\n    sortDescFirst: true\n  }, {\n    Header: 'Variant',\n    accessor: 'variant',\n    sortDescFirst: true,\n    show: true\n  }, {\n    Header: 'Quantity',\n    accessor: 'quantity',\n    sortDescFirst: true\n  }, {\n    Header: 'Recent Purchases',\n    accessor: 'purchases',\n    sortDescFirst: true\n  }, {\n    Header: 'Stock Level',\n    accessor: 'stockLevel',\n    disableSortBy: true\n  }, {\n    Header: 'Recent Order',\n    accessor: 'recentOrder',\n    disableSortBy: true\n  }], []);\n\n  function getData() {\n    setLoading(true);\n    router.loadVendor(props.values.id).then(data => {\n      if (data) {\n        setData(data.products); // sets the product data for the table\n\n        setCommMethods(data.commMethods); // if (data.commMethods.length === 1) { // only 1 communication method\n        //     setOrderSteps(3)\n        // }\n        // const orderSteps = commMethodPlain && (commMethodPlain.includes(\"call\") || commMethodPlain.includes(\"website\") || commMethodPlain.includes(',')) ? 4 : 3\n        // const orderSteps = commMethods.length === 1 ? \n        // console.log(data)\n\n        setLoading(false);\n      }\n    });\n  }\n\n  useEffect(() => {\n    getData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function chooseProducts() {\n    // Start Order - change to page where we choose which products to order\n    setOrdering(true);\n    setBtnText(\"Next\"); // setOrderItemsHidden(false)\n\n    setOrderState(\"Choose Products\");\n    setPercentage(100 / orderSteps);\n    setVariantData([]);\n    setDataToUpdate([]);\n    setVariantsToUpdate([]);\n  }\n\n  function chooseVariants() {\n    // Going to next page of ordering after chose products to choose variants and quantities\n    if (variantsToUpdate.length > 0) {\n      // Only load variant data if a product was selected\n      setLoading(true);\n      setPercentage(100 / orderSteps * 2); // update progress bar\n      // setNextPage(true)\n\n      setOrderState(\"Choose Variants/Qty\"); // console.log(dataToUpdate)\n\n      router.loadOrderProducts(variantsToUpdate).then(data => {\n        if (data) {\n          setLoading(false);\n          setVariantData(data);\n          setBtnText(\"Review\");\n        }\n      });\n    } else {\n      alert(\"No products selected\");\n    }\n  }\n\n  function chooseCommunication() {\n    // Going to next page to review order and submit or use communication method\n    // setNextPage(false)\n    // setReviewOrder(true)\n    setPercentage(100 / orderSteps * 3); // update progress bar\n    // setManualOrderBtnHidden(false)\n\n    setOrderState(\"Choose Communication\"); // if (commMethods.length > 1) {\n    //     // Multiple communicatoin methods\n    //     // setExtraOptionHidden(false)\n    //     // setExtraOptionText(`${capitalizeFirstLetter(commMethodPlain.split(',')[1])} ${commMethodPlain.split(',')[1] === 'call' ? phone : \"\"}`)\n    //     // setBtnText(`${capitalizeFirstLetter(commMethod)} ${commMethod === 'call' ? phone : \"\"}`)\n    //     // setOrderState(\"Multiple Vendors\")   \n    // } else {\n    //     // Only 1 vendor (as it is for the vast majority)\n    //     // if (commMethodPlain && commMethodPlain.includes(\"website\")) {        \n    //     //     setBtnText(\"Order on website\")\n    //     //     setOrderState(\"Website Order\")\n    //     // } else if (commMethodPlain && commMethodPlain.includes('call')) {\n    //     //     setBtnText(`Call ${phone}`)\n    //     //     setOrderState(\"Calling Order\")         \n    //     // } else {\n    //         setBtnText(\"Submit\")\n    //         setEditColor(\"#26B1FF\")\n    //         setOrderState(\"Review Order\")\n    // //     }\n    // }\n  }\n\n  function reviewOrder(value) {\n    setOrderState(\"Review Order\");\n    setBtnText(\"Submit\");\n    setEditColor(\"#26B1FF\"); // setManualOrderBtnHidden(true)\n\n    setPercentage(100 / orderSteps * 4); // update progress bar\n    // console.log('hmmmm')\n    // console.log(commMethod)\n    // console.log(props.values)\n\n    if (value === \"Website\") {\n      // console.log('aweohaje')\n      // console.log(variantData)\n      // console.log(data)\n      window.open(`https://${props.values.website}`, '_blank'); // NEED TO CHANGE\n    }\n  }\n\n  function submitOrder() {\n    // Send message and save order\n    const order = {\n      vendor: props.data.row.values.id,\n      subtotal: 0,\n      status: \"submitted\"\n    };\n    const orderItems = [];\n    dataToUpdate.forEach(item => {\n      if (item.quantity !== 0 || item.quantity !== \"\") {\n        order.subtotal += item.subtotal;\n        orderItems.push({\n          variant: item.variantId,\n          subtotal: item.subtotal,\n          // this is the subtotal including multiple qtys\n          quantity: item.quantity\n        });\n      }\n    });\n\n    if (dataToUpdate.length > 0) {\n      // console.log(dataToUpdate)\n      // console.log(commMethod)\n      if (commMethod === \"Text\") {\n        router.sendText(props.values.contact_name, dataToUpdate, \"4848885912\").then(data => {\n          // NEED TO CHANGE\n          if (data === \"Success\") {\n            save(order, orderItems);\n          } else {\n            alert(\"Failed to send text. Please try again.\");\n          }\n        });\n      } else if (commMethod === \"Email\") {\n        router.sendEmail(props.values.contact_name, dataToUpdate, \"stepan.cannuscio@gmail.com\").then(data => {\n          // NEED TO CHANGE\n          if (data === \"Success\") {\n            save(order, orderItems);\n          } else {\n            alert(\"Failed to send email. Please try again.\");\n          }\n        });\n      } else if ([\"Website\", \"Call\", \"Manual Order\"].includes(commMethod)) {\n        save(order, orderItems);\n      } else {\n        alert(\"No communication method selected! Contact Step for help\");\n      }\n    } // save()\n    // commMethodPlain.includes(',') ? save() : sendMessage() \n    // Reset order data\n\n  }\n\n  function resetOrder() {\n    setOrderState(null);\n    setOrdering(false);\n    setDataToUpdate([]); // empty dataToUpdate from any previous orders\n\n    setVariantsToUpdate([]); // empty variantsToUpdate from any previous orders\n\n    setPercentage(0);\n    setEditColor(\"#76c32d\");\n    setBtnText(\"Order\");\n  }\n\n  function orderBtnClicked(e) {\n    if (!isOrdering) {\n      chooseProducts();\n    } else if (orderState === \"Choose Products\") {\n      chooseVariants();\n    } else if (orderState === \"Choose Variants/Qty\") {\n      chooseCommunication();\n    } else if (orderState === \"Choose Communication\") {\n      // console.log(e.target.value)\n      setCommMethod(e.target.value);\n      reviewOrder(e.target.value); // } else if (orderState === \"Website Order\") {\n      //    window.open(\"https://amazon.com\",'_blank') // NEED TO CHANGE\n      //    setBtnText(\"Submit\")\n      //    setEditColor(\"#26B1FF\")\n      //    setManualOrderBtnHidden(true)\n      //    setOrderState(\"Review Order\")\n      //    setPercentage(100/orderSteps * 4)\n      // } else if (orderState === \"Calling Order\") {\n      //     setPercentage(100/orderSteps * 4)\n      //     setBtnText(\"Submit\")\n      //     setManualOrderBtnHidden(true)\n      //     setEditColor(\"#26B1FF\")\n      //     setOrderState(\"Review Order\")\n      // } else if (orderState === \"Multiple Vendors\") {\n      // One of the 2 buttons was clicked\n      // const method = commMethodPlain.split(',')[btnIndex]\n      // if (method === \"call\") {\n      //     // Clicked on the Call button so now need to submit the order\n      //     setPercentage(100/orderSteps * 4)\n      //     setBtnText(\"Submit\")\n      //     setEditColor(\"#26B1FF\")\n      //     setManualOrderBtnHidden(false)\n      //     setOrderState(\"Review Order\")\n      //     setExtraOptionHidden(true)\n      // } else if (method === \"website\") {\n      //     // Clicked on Website so now need to submit the order\n      //     window.open(\"https://amazon.com\",'_blank') // NEED TO CHANGE\n      //     setBtnText(\"Submit\")\n      //     setEditColor(\"#26B1FF\")\n      //     setManualOrderBtnHidden(false)\n      //     setOrderState(\"Review Order\")\n      //     setExtraOptionHidden(true)\n      //     setPercentage(100/orderSteps * 4)\n      // } else {\n      //     // Clicked on Email or Text so need to send the message which will then save the order\n      //     sendMessage(btnIndex)\n      //     setPercentage(100/orderSteps * 4)\n      //     setOrderState(null)\n      //     setOrdering(false)\n      // }\n    } else if (orderState === \"Review Order\") {\n      submitOrder();\n    }\n  }\n\n  function backBtnClicked() {\n    // const phone = `${props.values.phone.slice(0,3)}-${props.values.phone.slice(3,6)}-${props.values.phone.slice(6,)}`\n    // const orderSteps = commMethod === \"text\" || commMethod === \"email\" ? 4 : 5\n    if (orderState === \"Choose Products\") {\n      resetOrder(); // setOrdering(false)\n      // setBtnText(\"Order\")\n      // // setOrderItemsHidden(true)\n      // setOrderState(null)\n      // setPercentage(0)\n    } else if (orderState === \"Choose Variants/Qty\") {\n      chooseProducts();\n    } else if (orderState === \"Choose Communication\") {\n      // chooseVariants()\n      setPercentage(100 / orderSteps * 2); // update progress bar\n\n      setOrderState(\"Choose Variants/Qty\");\n      setBtnText(\"Review\"); // setNextPage(false)\n      // setOrderState(\"Choose Products\")\n      // setBtnText(\"Next\")\n      // setPercentage(100/orderSteps)\n      // } else if (orderState === \"Website Order\" || orderState === \"Calling Order\" || orderState === \"Multiple Vendors\") {\n      //     // setNextPage(true)\n      //     // setReviewOrder(false)\n      //     setBtnText(\"Review\")\n      //     setOrderState(\"Choose Variants/Qty\")\n      //     // setExtraOptionHidden(true)\n      //     setPercentage(100/orderSteps * 2) // update progress bar\n      //     setEditColor(\"#76c32d\")\n      //     setManualOrderBtnHidden(true)\n    } else if (orderState === \"Review Order\") {\n      chooseCommunication(); // setPercentage(100/orderSteps * 3) // update progress bar\n      // setEditColor(\"#76c32d\")\n      // setManualOrderBtnHidden(false)\n      // if (commMethodPlain && commMethodPlain.includes(',')) {\n      //     // Multiple vendors\n      //     setExtraOptionHidden(false)\n      //     setExtraOptionText(`${capitalizeFirstLetter(commMethodPlain.split(',')[1])} ${commMethodPlain.split(',')[1] === 'call' ? phone : \"\"}`)\n      //     setBtnText(`${capitalizeFirstLetter(commMethod)} ${commMethod === 'call' ? phone : \"\"}`)\n      //     setOrderState(\"Multiple Vendors\")\n      // } else {\n      //     // Only 1 vendor (as it is for the vast majority)\n      //     if (commMethodPlain && commMethodPlain.includes(\"website\")) {        \n      //         setBtnText(\"Order on website\")\n      //         setOrderState(\"Website Order\")\n      //     } else if (commMethodPlain && commMethodPlain.includes('call')) {\n      //         setBtnText(`Call ${phone}`)\n      //         setOrderState(\"Calling Order\")         \n      //     } else {\n      //         setBtnText(\"Review\")\n      //         setReviewOrder(false)\n      //         setOrderState(\"Choose Variants/Qty\")\n      //         setPercentage(100/orderSteps * 2) // update progress bar\n      //         setNextPage(true)\n      //     }\n      // }\n    }\n  } // function sendMessage(btnIndex) {\n  //     console.log(commMethod)\n  //     if (btnIndex) {\n  //         commMethod = commMethodPlain.split(',')[btnIndex]\n  //     }\n  //     commMethod = commMethod.trim()\n  //     console.log(commMethod)\n  //     if (commMethod === \"text\") {\n  //         router.sendText(props.values.contact_name, dataToUpdate, \"4848885912\").then(data => { // NEED TO CHANGE\n  //             save()\n  //         })\n  //     }\n  //     else if (commMethod === \"email\") {\n  //         router.sendEmail(props.values.contact_name, dataToUpdate, \"stepan.cannuscio@gmail.com\").then(data => { // NEED TO CHANGE\n  //             save()\n  //         })\n  //     } else if (commMethod === \"website\" || commMethod === \"call\") {\n  //         save()\n  //     } else {\n  //         alert(\"No communication method for this vendor! Contact Step for help\")\n  //     }\n  // }\n\n\n  function save(order, orderItems) {\n    // console.log(dataToUpdate)\n    // console.log(variantData)\n    router.saveOrder(order, orderItems, props.user.id).then(data => {\n      if (data === \"Success\") {\n        resetOrder();\n        props.toggle();\n      } else {\n        alert(\"Failed to save data. Please try again.\");\n      }\n    });\n  }\n\n  function rowSelected(rowData, isAllSelected) {\n    if (rowData === \"all\") {\n      setDataToUpdate([]); // clear before adding all rows to the array to update\n\n      setVariantsToUpdate([]);\n\n      if (!isAllSelected) {\n        // this means all are selected (it's opposite)\n        data.forEach(item => {\n          setDataToUpdate(oldArray => [...oldArray, item]);\n          setVariantsToUpdate(oldArray => [...oldArray, item.id]);\n        });\n      }\n    } else {\n      // console.log(rowData)\n      // console.log(dataToUpdate)\n      if (!rowData.isSelected) {\n        // this means the row is selected (it's opposite)\n        // setDataToUpdate(oldArray => [...oldArray, rowData.values])\n        setVariantsToUpdate(oldArray => [...oldArray, rowData.values.id]);\n      } else {\n        // remove from arrays if you unselect it\n        // var array = [...dataToUpdate]; // make a separate copy of the array\n        // var index = array.indexOf(rowData.values.id)\n        // if (index !== -1) {\n        //     array.splice(index, 1);\n        //     setDataToUpdate(array);\n        // }    \n        var array2 = [...variantsToUpdate]; // make a separate copy of the array\n\n        var index2 = array2.indexOf(rowData.values.id);\n\n        if (index2 !== -1) {\n          array2.splice(index2, 1);\n          setVariantsToUpdate(array2);\n        }\n      }\n    }\n  }\n\n  function remove(data, element) {\n    variantData.forEach((item, index) => {\n      if (item.variant_id === element.variant_id) {\n        var array = [...data]; // make a separate copy of the array\n\n        if (index !== -1) {\n          array.splice(index, 1);\n          setVariantData(array);\n        }\n      }\n    });\n\n    if (dataToUpdate.length > 0) {\n      dataToUpdate.forEach((item, index) => {\n        if (item.variantId === element.variant_id) {\n          var array = [...dataToUpdate]; // make a separate copy of the array\n\n          if (index !== -1) {\n            array.splice(index, 1);\n            setDataToUpdate(array);\n          }\n        }\n      });\n    }\n  }\n\n  function addOrderItem(data, orderQuantity) {\n    const newData = {\n      productTitle: data.title,\n      productId: data.id,\n      variantTitle: data.variant,\n      variantId: data.variant_id,\n      cost: data.cost,\n      quantity: orderQuantity,\n      subtotal: Math.round(data.cost * orderQuantity * 100, 2) / 100\n    };\n\n    if (variantsToUpdate.includes(data.variant_id)) {\n      // Item is in array so let's update it\n      dataToUpdate.forEach((item, index) => {\n        // console.log(item)\n        if (item.variantId === data.variant_id) {\n          var array = [...dataToUpdate]; // make a separate copy of the array\n\n          if (index !== -1) {\n            array.splice(index, 1);\n            setDataToUpdate(array);\n          } // console.log(newData.quantity)\n\n\n          if (newData.quantity !== \"0\" && newData.quantity !== 0 && newData.quantity !== \"\") {\n            // console.log('are we calling here')\n            setDataToUpdate(oldArray => [...oldArray, newData]);\n          } else {\n            var variantsArray = [...variantsToUpdate]; // make a separate copy of the array\n\n            if (index !== -1) {\n              variantsArray.splice(index, 1);\n              setVariantsToUpdate(variantsArray);\n            }\n          }\n        }\n      });\n    } else {\n      if (newData.quantity !== \"0\" || newData.quantity !== \"\") {\n        setVariantsToUpdate(oldArray => [...oldArray, data.variant_id]);\n        setDataToUpdate(oldArray => [...oldArray, newData]);\n      }\n    }\n  }\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  } // function manualOrderBtnClicked() {\n  //     // if (commMethodPlain && commMethodPlain.includes(',')) {\n  //         setManualOrderBtnHidden(true)\n  //         setBtnText(\"Submit\")\n  //         setEditColor(\"#26B1FF\")\n  //         setOrderState(\"Review Order\")\n  //         // setReviewOrder(true)\n  //         // setExtraOptionHidden(true)\n  //         setPercentage(100/orderSteps * 4) // update progress bar\n  //     // } else {\n  //     // }\n  // }\n\n\n  function addItem() {\n    if (addProductName.current.value === \"\" || addVariantName.current.value === \"\" || addQuantity.current.value === \"\" || addCost.current.value === \"\") {\n      alert(\"Please fill out all fields to manually add an item.\");\n    } else {\n      const newData = {\n        productTitle: addProductName.current.value,\n        variantTitle: addVariantName.current.value,\n        quantity: addQuantity.current.value,\n        cost: addCost.current.value,\n        subtotal: addQuantity.current.value * addCost.current.value\n      };\n      setDataToUpdate(oldArray => [...oldArray, newData]);\n    }\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-content\",\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        percentage: percentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => props.toggle(),\n        children: \"\\xD7    \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data && data[0] ? data[0].name : \"No Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Products: \", props.values.products]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Low Products: \", props.values.low_products]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Contact Name: \", props.values.contact_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", props.values.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone: \", props.values.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 17\n      }, this), isOrdering ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backBtnClicked,\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: \"grey\"\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 31\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        hidden: orderState === \"Choose Communication\",\n        onClick: e => orderBtnClicked(e),\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: editColor\n        },\n        children: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 17\n      }, this), commMethods.map((method, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          hidden: orderState !== \"Choose Communication\",\n          onClick: e => orderBtnClicked(e),\n          value: capitalizeFirstLetter(method.method),\n          className: \"edit-btn\",\n          style: {\n            backgroundColor: \"#76c32d\"\n          },\n          children: capitalizeFirstLetter(method.method)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        hidden: orderState !== \"Choose Communication\",\n        onClick: e => orderBtnClicked(e),\n        className: \"edit-btn\",\n        value: \"Manual Order\",\n        style: {\n          backgroundColor: \"orange\"\n        },\n        children: \"Manual Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 13\n    }, this), isOrdering ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: orderState === \"Choose Variants/Qty\" ? /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Variant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Current Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Recent Purchases\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Stock Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Cost/unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Recent Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Order Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: variantData.map((variant, index) => {\n              var orderQuantity = 0;\n              dataToUpdate.forEach(item => {\n                if (item.variantId === variant.variant_id) {\n                  orderQuantity = item.quantity;\n                }\n              });\n              const bgColor = variant.stockLevel === \"Low\" ? \"red\" : variant.stockLevel === \"Medium\" ? \"#FFD300\" : \"#4CAF50\";\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 663,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.variant\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 664,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.purchases\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 666,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"table-cell stock-level\",\n                  style: {\n                    backgroundColor: bgColor\n                  },\n                  children: variant.stockLevel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatter.format(variant.cost)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.recentOrder\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 669,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"0\",\n                    style: {\n                      fontSize: \"16px\"\n                    },\n                    value: orderQuantity,\n                    onChange: e => {\n                      addOrderItem(variant, e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 670,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"close\",\n                    style: {\n                      color: \"red\"\n                    },\n                    onClick: () => remove(variantData, variant),\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 673,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 21\n        }, this) : [\"Choose Communication\", \"Review Order\", \"Submit Order\"].includes(orderState) ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Variant\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Cost/unit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Subtotal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: dataToUpdate.map((order_item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order_item.productTitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 697,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order_item.variantTitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 698,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order_item.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 699,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatter.format(order_item.cost)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: formatter.format(order_item.subtotal)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 701,\n                    columnNumber: 41\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 37\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            hidden: isAddItemHidden,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: addProductName,\n              placeholder: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: addVariantName,\n              placeholder: \"Variant Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: addQuantity,\n              placeholder: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: addCost,\n              placeholder: \"Cost/unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addItem,\n              children: \"Add Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAddItemHidden(false),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data,\n          search: true,\n          type: \"order\",\n          checkbox: true,\n          popupEnabled: false,\n          perPage: 5,\n          update: (data, isAllSelected) => rowSelected(data, isAllSelected)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data,\n      type: \"order\",\n      search: true,\n      popupEnabled: false,\n      perPage: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 609,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VendorPopup, \"kMjFsm/d3JsEQOLZHhm85CFbtqU=\");\n\n_c = VendorPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"VendorPopup\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Vendors/VendorPopup.js"],"names":["useState","useEffect","useMemo","useRef","Table","ProgressBar","router","VendorPopup","props","percentage","setPercentage","btnText","setBtnText","isLoading","setLoading","editColor","setEditColor","dataToUpdate","setDataToUpdate","variantsToUpdate","setVariantsToUpdate","data","setData","commMethods","setCommMethods","commMethod","setCommMethod","variantData","setVariantData","isOrdering","setOrdering","orderState","setOrderState","isAddItemHidden","setAddItemHidden","addProductName","addVariantName","addQuantity","addCost","orderSteps","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","columns","Header","accessor","sortDescFirst","show","disableSortBy","getData","loadVendor","values","id","then","products","chooseProducts","chooseVariants","length","loadOrderProducts","alert","chooseCommunication","reviewOrder","value","window","open","website","submitOrder","order","vendor","row","subtotal","status","orderItems","forEach","item","quantity","push","variant","variantId","sendText","contact_name","save","sendEmail","includes","resetOrder","orderBtnClicked","e","target","backBtnClicked","saveOrder","user","toggle","rowSelected","rowData","isAllSelected","oldArray","isSelected","array2","index2","indexOf","splice","remove","element","index","variant_id","array","addOrderItem","orderQuantity","newData","productTitle","title","productId","variantTitle","cost","Math","round","variantsArray","capitalizeFirstLetter","string","charAt","toUpperCase","slice","addItem","current","name","low_products","email","phone","backgroundColor","map","method","bgColor","stockLevel","purchases","format","recentOrder","fontSize","color","order_item"],"mappings":"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","sourcesContent":["import {useState, useEffect, useMemo, useRef} from \"react\"\nimport \"../styles/Popup.css\"\nimport Table from \"../components/Table\"\nimport ProgressBar from \"./ProgressBar\"\nimport * as router from \"./vendorAPI\"\n\nexport default function VendorPopup(props) {\n\n    const [percentage, setPercentage] = useState(0)\n    const [btnText, setBtnText] = useState(\"Order\")\n    // const [extraOptionText, setExtraOptionText] = useState(\"\")\n    const [isLoading, setLoading] = useState(true)\n    const [editColor, setEditColor] = useState(\"#76c32d\")\n\n    const [dataToUpdate, setDataToUpdate] = useState([])\n    const [variantsToUpdate, setVariantsToUpdate] = useState([])\n    const [data, setData] = useState([])\n    const [commMethods, setCommMethods] = useState([])\n    const [commMethod, setCommMethod] = useState(null)\n    const [variantData, setVariantData] = useState([])\n\n   \n\n    const [isOrdering, setOrdering] = useState(false)\n    // const [nextPage, setNextPage] = useState(false)\n    // const [reviewOrder, setReviewOrder] = useState(false)\n    const [orderState, setOrderState] = useState(null)\n\n    const [isAddItemHidden, setAddItemHidden] = useState(true)\n    // const [isOrderItemsHidden, setOrderItemsHidden] = useState(true)\n    // const [isExtraOptionHidden, setExtraOptionHidden] = useState(true)\n    // const [isManualOrderBtnHidden, setManualOrderBtnHidden] = useState(true)\n\n    // const commMethodPlain = props.data.row.values.comm_method\n    // var commMethod = commMethodPlain && commMethodPlain.includes(',') ? commMethodPlain.split(',')[0] : commMethodPlain\n\n    // console.log(dataToUpdate)\n    // console.log(variantData)\n\n    const addProductName = useRef()\n    const addVariantName = useRef()\n    const addQuantity = useRef()\n    const addCost = useRef()\n\n    const orderSteps = 4\n\n\n    // const phone = props.values.phone ? `${props.values.phone.slice(0,3)}-${props.values.phone.slice(3,6)}-${props.values.phone.slice(6,)}` : \"\"\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0\n      })\n\n    const columns = useMemo(\n        () => [\n        {\n            Header: 'ID',\n            accessor: 'id', // Product ID\n            sortDescFirst: true\n            },\n          {\n            Header: 'Product',\n            accessor: 'title',\n            sortDescFirst: true\n          },\n          {\n            Header: 'Variant',\n            accessor: 'variant',\n            sortDescFirst: true,\n            show: true\n          },\n          {\n            Header: 'Quantity',\n            accessor: 'quantity',\n            sortDescFirst: true,\n          },\n          {\n            Header: 'Recent Purchases',\n            accessor: 'purchases',\n            sortDescFirst: true,\n          },\n          {\n            Header: 'Stock Level',\n            accessor: 'stockLevel',\n            disableSortBy: true\n          },\n          {\n            Header: 'Recent Order',\n            accessor: 'recentOrder',\n            disableSortBy: true\n          },\n        ],\n        []\n    )\n\n    function getData() {\n        setLoading(true)\n        router.loadVendor(props.values.id).then(data => {\n            if (data) {\n                setData(data.products) // sets the product data for the table\n                setCommMethods(data.commMethods)\n\n                // if (data.commMethods.length === 1) { // only 1 communication method\n                //     setOrderSteps(3)\n                // }\n\n                // const orderSteps = commMethodPlain && (commMethodPlain.includes(\"call\") || commMethodPlain.includes(\"website\") || commMethodPlain.includes(',')) ? 4 : 3\n                // const orderSteps = commMethods.length === 1 ? \n\n                // console.log(data)\n                setLoading(false)\n            }\n        })\n    }\n\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    function chooseProducts() {\n        // Start Order - change to page where we choose which products to order\n        setOrdering(true)\n        setBtnText(\"Next\")\n        // setOrderItemsHidden(false)\n        setOrderState(\"Choose Products\")\n        setPercentage(100/orderSteps)\n\n        setVariantData([])\n        setDataToUpdate([])\n        setVariantsToUpdate([])\n    }\n\n    function chooseVariants() {\n        // Going to next page of ordering after chose products to choose variants and quantities\n\n        if (variantsToUpdate.length > 0) {\n            // Only load variant data if a product was selected\n            setLoading(true)\n            setPercentage(100/orderSteps * 2) // update progress bar\n            // setNextPage(true)\n            setOrderState(\"Choose Variants/Qty\")\n\n            // console.log(dataToUpdate)\n           \n            router.loadOrderProducts(variantsToUpdate).then(data => {\n            \n                if (data) {\n                    setLoading(false)\n                    setVariantData(data)\n                    setBtnText(\"Review\")\n                }\n            })\n        } else {\n            alert(\"No products selected\")\n        }\n       \n    }\n\n    function chooseCommunication() {\n\n        // Going to next page to review order and submit or use communication method\n        // setNextPage(false)\n        // setReviewOrder(true)\n        setPercentage(100/orderSteps * 3) // update progress bar\n        // setManualOrderBtnHidden(false)\n        setOrderState(\"Choose Communication\")\n        \n\n        // if (commMethods.length > 1) {\n        //     // Multiple communicatoin methods\n        //     // setExtraOptionHidden(false)\n        //     // setExtraOptionText(`${capitalizeFirstLetter(commMethodPlain.split(',')[1])} ${commMethodPlain.split(',')[1] === 'call' ? phone : \"\"}`)\n        //     // setBtnText(`${capitalizeFirstLetter(commMethod)} ${commMethod === 'call' ? phone : \"\"}`)\n        //     // setOrderState(\"Multiple Vendors\")   \n        // } else {\n        //     // Only 1 vendor (as it is for the vast majority)\n        //     // if (commMethodPlain && commMethodPlain.includes(\"website\")) {        \n        //     //     setBtnText(\"Order on website\")\n        //     //     setOrderState(\"Website Order\")\n        //     // } else if (commMethodPlain && commMethodPlain.includes('call')) {\n        //     //     setBtnText(`Call ${phone}`)\n        //     //     setOrderState(\"Calling Order\")         \n        //     // } else {\n        //         setBtnText(\"Submit\")\n        //         setEditColor(\"#26B1FF\")\n                \n        //         setOrderState(\"Review Order\")\n        // //     }\n        // }\n    }\n\n    function reviewOrder(value) {\n        setOrderState(\"Review Order\")\n        setBtnText(\"Submit\")\n        setEditColor(\"#26B1FF\")\n        // setManualOrderBtnHidden(true)\n        setPercentage(100/orderSteps * 4) // update progress bar\n        // console.log('hmmmm')\n\n        // console.log(commMethod)\n\n        // console.log(props.values)\n\n        if (value === \"Website\") {\n            // console.log('aweohaje')\n            // console.log(variantData)\n            // console.log(data)\n            window.open(`https://${props.values.website}`,'_blank') // NEED TO CHANGE\n        }\n    }\n\n    function submitOrder() {\n        // Send message and save order\n             \n        const order = {\n            vendor: props.data.row.values.id,\n            subtotal: 0,\n            status: \"submitted\"\n        }\n\n        const orderItems = []\n        dataToUpdate.forEach(item => {\n\n            if (item.quantity !== 0 || item.quantity !== \"\") {\n       \n                order.subtotal += item.subtotal\n                orderItems.push({\n                    variant: item.variantId,\n                    subtotal: item.subtotal, // this is the subtotal including multiple qtys\n                    quantity: item.quantity\n                })\n            }\n        \n        })\n     \n        if (dataToUpdate.length > 0) {\n            // console.log(dataToUpdate)\n            // console.log(commMethod)\n\n            if (commMethod === \"Text\") {\n                router.sendText(props.values.contact_name, dataToUpdate, \"4848885912\").then(data => { // NEED TO CHANGE\n                    if (data === \"Success\") {\n                        save(order, orderItems)\n                    } else {\n                        alert(\"Failed to send text. Please try again.\")\n                    }     \n                })\n            }\n            else if (commMethod === \"Email\") {\n                router.sendEmail(props.values.contact_name, dataToUpdate, \"stepan.cannuscio@gmail.com\").then(data => { // NEED TO CHANGE\n                    if (data === \"Success\") {\n                        save(order, orderItems)\n                    } else {\n                        alert(\"Failed to send email. Please try again.\")\n                    }     \n                })\n            } else if ([\"Website\", \"Call\", \"Manual Order\"].includes(commMethod)) {\n                save(order, orderItems)\n            } else {\n                alert(\"No communication method selected! Contact Step for help\")\n            }\n        }\n       \n            // save()\n        // commMethodPlain.includes(',') ? save() : sendMessage() \n        \n        // Reset order data\n        \n     \n    }\n\n    function resetOrder() {\n        setOrderState(null)\n        setOrdering(false)\n        setDataToUpdate([]) // empty dataToUpdate from any previous orders\n        setVariantsToUpdate([]) // empty variantsToUpdate from any previous orders\n        setPercentage(0)\n        setEditColor(\"#76c32d\")\n        setBtnText(\"Order\")\n    }\n\n\n    function orderBtnClicked(e) {\n        \n        if (!isOrdering) {\n            \n            chooseProducts()\n\n        } else if (orderState === \"Choose Products\") {\n\n            chooseVariants()\n            \n        } else if (orderState === \"Choose Variants/Qty\") {\n            \n            chooseCommunication()\n\n        } else if (orderState === \"Choose Communication\") {\n\n            // console.log(e.target.value)\n            setCommMethod(e.target.value)\n            reviewOrder(e.target.value)\n         \n        // } else if (orderState === \"Website Order\") {\n        //    window.open(\"https://amazon.com\",'_blank') // NEED TO CHANGE\n        //    setBtnText(\"Submit\")\n        //    setEditColor(\"#26B1FF\")\n        //    setManualOrderBtnHidden(true)\n        //    setOrderState(\"Review Order\")\n        //    setPercentage(100/orderSteps * 4)\n        // } else if (orderState === \"Calling Order\") {\n        //     setPercentage(100/orderSteps * 4)\n        //     setBtnText(\"Submit\")\n        //     setManualOrderBtnHidden(true)\n        //     setEditColor(\"#26B1FF\")\n        //     setOrderState(\"Review Order\")\n        // } else if (orderState === \"Multiple Vendors\") {\n            // One of the 2 buttons was clicked\n            // const method = commMethodPlain.split(',')[btnIndex]\n\n            // if (method === \"call\") {\n            //     // Clicked on the Call button so now need to submit the order\n            //     setPercentage(100/orderSteps * 4)\n            //     setBtnText(\"Submit\")\n            //     setEditColor(\"#26B1FF\")\n            //     setManualOrderBtnHidden(false)\n            //     setOrderState(\"Review Order\")\n            //     setExtraOptionHidden(true)\n            // } else if (method === \"website\") {\n            //     // Clicked on Website so now need to submit the order\n            //     window.open(\"https://amazon.com\",'_blank') // NEED TO CHANGE\n            //     setBtnText(\"Submit\")\n            //     setEditColor(\"#26B1FF\")\n            //     setManualOrderBtnHidden(false)\n            //     setOrderState(\"Review Order\")\n            //     setExtraOptionHidden(true)\n            //     setPercentage(100/orderSteps * 4)\n            // } else {\n            //     // Clicked on Email or Text so need to send the message which will then save the order\n            //     sendMessage(btnIndex)\n            //     setPercentage(100/orderSteps * 4)\n            //     setOrderState(null)\n            //     setOrdering(false)\n            // }\n        }  else if (orderState === \"Review Order\") {\n\n            submitOrder()\n        \n        } \n    }\n    \n    function backBtnClicked() {\n        // const phone = `${props.values.phone.slice(0,3)}-${props.values.phone.slice(3,6)}-${props.values.phone.slice(6,)}`\n        // const orderSteps = commMethod === \"text\" || commMethod === \"email\" ? 4 : 5\n        if (orderState === \"Choose Products\") {\n            resetOrder()\n            // setOrdering(false)\n            // setBtnText(\"Order\")\n            // // setOrderItemsHidden(true)\n            // setOrderState(null)\n            // setPercentage(0)\n        } else if (orderState === \"Choose Variants/Qty\") {\n            chooseProducts()\n        } else if (orderState === \"Choose Communication\") {\n            // chooseVariants()\n\n            setPercentage(100/orderSteps * 2) // update progress bar\n            setOrderState(\"Choose Variants/Qty\")\n            setBtnText(\"Review\")\n\n \n            // setNextPage(false)\n            // setOrderState(\"Choose Products\")\n            // setBtnText(\"Next\")\n            // setPercentage(100/orderSteps)\n        \n        // } else if (orderState === \"Website Order\" || orderState === \"Calling Order\" || orderState === \"Multiple Vendors\") {\n        //     // setNextPage(true)\n        //     // setReviewOrder(false)\n        //     setBtnText(\"Review\")\n        //     setOrderState(\"Choose Variants/Qty\")\n        //     // setExtraOptionHidden(true)\n        //     setPercentage(100/orderSteps * 2) // update progress bar\n        //     setEditColor(\"#76c32d\")\n        //     setManualOrderBtnHidden(true)\n        } else if (orderState === \"Review Order\") {\n            chooseCommunication()\n            // setPercentage(100/orderSteps * 3) // update progress bar\n            // setEditColor(\"#76c32d\")\n            // setManualOrderBtnHidden(false)\n            // if (commMethodPlain && commMethodPlain.includes(',')) {\n            //     // Multiple vendors\n            //     setExtraOptionHidden(false)\n            //     setExtraOptionText(`${capitalizeFirstLetter(commMethodPlain.split(',')[1])} ${commMethodPlain.split(',')[1] === 'call' ? phone : \"\"}`)\n            //     setBtnText(`${capitalizeFirstLetter(commMethod)} ${commMethod === 'call' ? phone : \"\"}`)\n            //     setOrderState(\"Multiple Vendors\")\n                \n            // } else {\n            //     // Only 1 vendor (as it is for the vast majority)\n            //     if (commMethodPlain && commMethodPlain.includes(\"website\")) {        \n            //         setBtnText(\"Order on website\")\n            //         setOrderState(\"Website Order\")\n            //     } else if (commMethodPlain && commMethodPlain.includes('call')) {\n            //         setBtnText(`Call ${phone}`)\n            //         setOrderState(\"Calling Order\")         \n            //     } else {\n            //         setBtnText(\"Review\")\n            //         setReviewOrder(false)\n            //         setOrderState(\"Choose Variants/Qty\")\n            //         setPercentage(100/orderSteps * 2) // update progress bar\n            //         setNextPage(true)\n            //     }\n            // }\n        } \n    }\n\n    // function sendMessage(btnIndex) {\n\n    //     console.log(commMethod)\n\n    //     if (btnIndex) {\n    //         commMethod = commMethodPlain.split(',')[btnIndex]\n    //     }\n\n    //     commMethod = commMethod.trim()\n\n\n    //     console.log(commMethod)\n    //     if (commMethod === \"text\") {\n    //         router.sendText(props.values.contact_name, dataToUpdate, \"4848885912\").then(data => { // NEED TO CHANGE\n    //             save()\n    //         })\n    //     }\n    //     else if (commMethod === \"email\") {\n    //         router.sendEmail(props.values.contact_name, dataToUpdate, \"stepan.cannuscio@gmail.com\").then(data => { // NEED TO CHANGE\n    //             save()\n    //         })\n    //     } else if (commMethod === \"website\" || commMethod === \"call\") {\n    //         save()\n    //     } else {\n    //         alert(\"No communication method for this vendor! Contact Step for help\")\n    //     }\n    // }\n\n    function save(order, orderItems) {\n        // console.log(dataToUpdate)\n        // console.log(variantData)\n       \n        router.saveOrder(order, orderItems, props.user.id).then(data => {\n            if (data === \"Success\") {\n                resetOrder()\n                props.toggle()\n            } else {\n                alert(\"Failed to save data. Please try again.\")\n            }\n        })\n    \n    }\n\n    function rowSelected(rowData, isAllSelected) {\n        if (rowData === \"all\") {\n            setDataToUpdate([]) // clear before adding all rows to the array to update\n            setVariantsToUpdate([])\n    \n            if (!isAllSelected) { // this means all are selected (it's opposite)\n                data.forEach(item => {\n                    setDataToUpdate(oldArray => [...oldArray, item])\n                    setVariantsToUpdate(oldArray => [...oldArray, item.id])\n                })\n            } \n        } else {\n            // console.log(rowData)\n            // console.log(dataToUpdate)\n            if (!rowData.isSelected) { // this means the row is selected (it's opposite)\n                // setDataToUpdate(oldArray => [...oldArray, rowData.values])\n                setVariantsToUpdate(oldArray => [...oldArray, rowData.values.id])\n            } else {\n                // remove from arrays if you unselect it\n                // var array = [...dataToUpdate]; // make a separate copy of the array\n                // var index = array.indexOf(rowData.values.id)\n                // if (index !== -1) {\n                //     array.splice(index, 1);\n                //     setDataToUpdate(array);\n                // }    \n                var array2 = [...variantsToUpdate]; // make a separate copy of the array\n                var index2 = array2.indexOf(rowData.values.id)\n                if (index2 !== -1) {\n                    array2.splice(index2, 1);\n                    setVariantsToUpdate(array2);\n                }         \n            } \n        }\n       \n    }\n\n    function remove(data, element) {\n        variantData.forEach((item, index) => {\n            if (item.variant_id === element.variant_id) {\n                var array = [...data]; // make a separate copy of the array\n                if (index !== -1) {\n                    array.splice(index, 1);\n                    setVariantData(array);\n                }             \n            }\n        })\n\n        if (dataToUpdate.length > 0) {\n            dataToUpdate.forEach((item, index) => {   \n                if (item.variantId === element.variant_id) {\n                    var array = [...dataToUpdate]; // make a separate copy of the array\n                    if (index !== -1) {\n                        array.splice(index, 1);\n                        setDataToUpdate(array);\n                    } \n                }\n            })\n        }\n    }\n\n    function addOrderItem(data, orderQuantity) {\n        const newData = {\n            productTitle: data.title,\n            productId: data.id,\n            variantTitle: data.variant,\n            variantId: data.variant_id,\n            cost: data.cost,\n            quantity: orderQuantity,\n            subtotal: Math.round(data.cost * orderQuantity * 100, 2) / 100\n        }\n\n        if (variantsToUpdate.includes(data.variant_id)) {\n            // Item is in array so let's update it\n            dataToUpdate.forEach((item, index) => {\n\n                // console.log(item)\n                \n                if (item.variantId === data.variant_id) {\n                    var array = [...dataToUpdate]; // make a separate copy of the array\n                    if (index !== -1) {\n                        array.splice(index, 1);\n                        setDataToUpdate(array);\n                    } \n                    // console.log(newData.quantity)\n                    if (newData.quantity !== \"0\" && newData.quantity !== 0 && newData.quantity !== \"\") {\n                        // console.log('are we calling here')\n                        setDataToUpdate(oldArray => [...oldArray, newData])   \n                    } else {\n                        var variantsArray = [...variantsToUpdate]; // make a separate copy of the array\n                        if (index !== -1) {\n                            variantsArray.splice(index, 1);\n                            setVariantsToUpdate(variantsArray);\n                        } \n                    }\n                }\n            })\n        } else {\n            if (newData.quantity !== \"0\" || newData.quantity !== \"\") {\n                setVariantsToUpdate(oldArray => [...oldArray, data.variant_id])\n                setDataToUpdate(oldArray => [...oldArray, newData])\n            }\n        }\n    }\n\n    function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    // function manualOrderBtnClicked() {\n    //     // if (commMethodPlain && commMethodPlain.includes(',')) {\n    //         setManualOrderBtnHidden(true)\n    //         setBtnText(\"Submit\")\n    //         setEditColor(\"#26B1FF\")\n    //         setOrderState(\"Review Order\")\n    //         // setReviewOrder(true)\n\n    //         // setExtraOptionHidden(true)\n    //         setPercentage(100/orderSteps * 4) // update progress bar\n    //     // } else {\n            \n    //     // }\n    // }\n\n    function addItem() {\n\n        if (addProductName.current.value === \"\" || addVariantName.current.value === \"\" ||\n            addQuantity.current.value === \"\" || addCost.current.value === \"\") {\n                alert(\"Please fill out all fields to manually add an item.\")\n        } else {\n            const newData = {\n                productTitle: addProductName.current.value,\n                variantTitle: addVariantName.current.value,\n                quantity: addQuantity.current.value,\n                cost: addCost.current.value,\n                subtotal: addQuantity.current.value * addCost.current.value\n            }\n            setDataToUpdate(oldArray => [...oldArray, newData])\n        }\n    }\n\n  \n\n    if (isLoading) {\n        return <div className=\"loader\"></div>;\n    }\n\n    return (\n        <div>   \n            <div className=\"top-content\">\n                <ProgressBar percentage={percentage}/>\n                <span className=\"close\" onClick={() =>  props.toggle()}>&times;    </span>\n                <h2 >{data && data[0] ? data[0].name : \"No Products\"}</h2>\n                <p>Products: {props.values.products}</p>\n                <p>Low Products: {props.values.low_products}</p>\n                <p>Contact Name: {props.values.contact_name}</p>\n                <p>Email: {props.values.email}</p>\n                <p>Phone: {props.values.phone}</p>\n                {isOrdering ? <button onClick={backBtnClicked} className=\"edit-btn\" style={{backgroundColor: \"grey\"}}>Back</button> : null }\n                <button hidden={orderState === \"Choose Communication\"} onClick={(e) => orderBtnClicked(e)} className=\"edit-btn\" style={{backgroundColor: editColor}}>{btnText}</button>\n                {commMethods.map((method, index) => {\n                    return (\n                        <button key={index} hidden={orderState !== \"Choose Communication\"} onClick={(e) => orderBtnClicked(e)} value={capitalizeFirstLetter(method.method)} className=\"edit-btn\" style={{backgroundColor: \"#76c32d\"}}>{capitalizeFirstLetter(method.method)}</button>\n                    )\n                })}\n                \n                <button hidden={orderState !== \"Choose Communication\"} onClick={(e) => orderBtnClicked(e)} className=\"edit-btn\" value=\"Manual Order\" style={{backgroundColor: \"orange\"}}>Manual Order</button>\n            </div>\n      \n            {isOrdering \n            ?\n            <div>\n                <div>\n                    {orderState === \"Choose Variants/Qty\" \n                    ?\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Product</th>\n                                <th>Variant</th>\n                                <th>Current Quantity</th>\n                                <th>Recent Purchases</th>\n                                <th>Stock Level</th>\n                                <th>Cost/unit</th>\n                                <th>Recent Order</th>\n                                <th>Order Quantity</th>\n                                \n                                <th>Remove</th>\n                                \n                            </tr>\n                        </thead>\n                        <tbody>\n                            {variantData.map((variant, index) => {\n                                var orderQuantity = 0\n                                dataToUpdate.forEach(item => {\n                                    if (item.variantId === variant.variant_id) {\n                                        orderQuantity = item.quantity\n                                    }\n                                })\n                                const bgColor = variant.stockLevel === \"Low\" ? \"red\" : variant.stockLevel === \"Medium\" ? \"#FFD300\" : \"#4CAF50\"\n                                return (\n                                    <tr key={index}>\n                                        <td>{variant.title}</td>\n                                        <td>{variant.variant}</td>\n                                        <td>{variant.quantity}</td>\n                                        <td>{variant.purchases}</td>\n                                        <td className=\"table-cell stock-level\" style={{backgroundColor: bgColor}}>{variant.stockLevel}</td>\n                                        <td>{formatter.format(variant.cost)}</td>\n                                        <td>{variant.recentOrder}</td>\n                                        <td ><input type=\"text\" placeholder=\"0\" style={{fontSize: \"16px\"}}value={orderQuantity} onChange={(e) => {\n                                            addOrderItem(variant, e.target.value) \n                                        }}/></td>\n                                        <td><span className=\"close\" style={{color: \"red\"}} onClick={() =>  remove(variantData, variant)}>&times;</span></td>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                    :\n                    [\"Choose Communication\", \"Review Order\", \"Submit Order\"].includes(orderState)\n                    ?\n                    <div>\n                        <table>\n                        <thead>\n                            <tr>\n                                <th>Product</th>\n                                <th>Variant</th>\n                                <th>Quantity</th>\n                                <th>Cost/unit</th>\n                                <th>Subtotal</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {dataToUpdate.map((order_item, index) => {\n                                return (\n                                    <tr key={index}>\n                                        <td>{order_item.productTitle}</td>\n                                        <td>{order_item.variantTitle}</td>\n                                        <td>{order_item.quantity}</td>\n                                        <td>{formatter.format(order_item.cost)}</td>\n                                        <td>{formatter.format(order_item.subtotal)}</td>\n                                    </tr>\n                                )  \n                            })}\n                        </tbody>\n                        </table>\n                        <div hidden={isAddItemHidden}>\n                            <input ref={addProductName} placeholder=\"Product Name\"></input>\n                            <input ref={addVariantName} placeholder=\"Variant Name\"></input>\n                            <input ref={addQuantity} placeholder=\"Quantity\"></input>\n                            <input ref={addCost} placeholder=\"Cost/unit\"></input>\n                            <button onClick={addItem}>Add Item</button>\n                        </div>\n                        <button onClick={() => setAddItemHidden(false)}>+</button>\n                        \n                    </div>\n                    :\n                <Table columns={columns} data={data} search={true} type=\"order\" checkbox={true} popupEnabled={false} perPage={5} update={(data, isAllSelected) => rowSelected(data, isAllSelected)}/>\n                }     \n                </div>\n            </div>\n            :\n            <Table columns={columns} data={data} type=\"order\" search={true} popupEnabled={false} perPage={5}/>\n}       \n  </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}