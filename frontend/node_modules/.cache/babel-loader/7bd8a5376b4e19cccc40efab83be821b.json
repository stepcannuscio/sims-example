{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Orders/OrderPopup.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport * as router from \"./orderAPI\";\nexport default function OrderPopup(props) {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [orderBtnText, setOrderBtnText] = useState(\"Edit Order\");\n  const [orderItemBtnText, setOrderItemBtnText] = useState(\"Edit Order Item\");\n  const [isEditingOrder, setEditingOrder] = useState(false);\n  const [isEditingOrderItem, setEditingOrderItem] = useState(false);\n  const [editColor, setEditColor] = useState(\"#76c32d\");\n  const [isTrackingHidden, setTrackingHidden] = useState(true);\n  const [idsToUpdate, setIdsToUpdate] = useState([]);\n  const [dataToUpdate, setDataToUpdate] = useState([]); // const [status, setStatus] = useState(\"\")\n  // const [tracking, setTracking] = useState(\"\")\n  // const [orderDiscount, setOrderDiscount] = useState(\"\")\n  // const [orderTotal, setOrderTotal] = useState(\"\")\n  // const [orderSubtotal, setOrderSubtotal] = useState(0)\n\n  const orderSubtotal = useRef();\n  const orderDiscount = useRef();\n  const orderTotal = useRef();\n  const tracking = useRef();\n  const status = useRef();\n  console.log(dataToUpdate);\n  console.log(idsToUpdate); // console.log(isTrackingHidden)\n  // console.log(status)\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  const inputStyle = {\n    margin: \"20px auto\",\n    padding: \"10px 20px\",\n    fontSize: \"16px\",\n    border: \"none\",\n    borderBottom: \"1px solid #76c32d\"\n  };\n\n  function getData() {\n    setLoading(true);\n    router.loadOrder(props.values.id).then(data => {\n      if (data) {\n        console.log(data);\n        setData(data);\n        setLoading(false);\n      }\n    });\n  }\n\n  useEffect(() => {\n    getData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this);\n  }\n\n  function editBtnClicked(e) {\n    if (e.target.id === \"order-btn\") {\n      if (!isEditingOrder) {\n        setOrderBtnText(\"Save Order\");\n        setEditingOrder(true);\n      } else {\n        saveOrder();\n      }\n    } else if (e.target.id === \"order-item-btn\") {\n      if (!isEditingOrderItem) {\n        setOrderItemBtnText(\"Save Order Item\");\n        setEditingOrderItem(true);\n      } else {\n        saveOrderItem();\n      }\n    }\n\n    setEditColor(editColor === \"#26B1FF\" ? \"#76c32d\" : \"#26B1FF\");\n  }\n\n  function saveOrder() {\n    const orderData = {\n      subtotal: orderSubtotal.current.value ? orderSubtotal.current.value : data[0].order_subtotal,\n      discount: orderDiscount.current.value ? orderDiscount.current.value : data[0].order_discount,\n      total: orderTotal.current.value ? orderTotal.current.value : data[0].order_total,\n      status: status.current.value ? status.current.value : data[0].status,\n      tracking: tracking.current.value ? tracking.current.value : data[0].tracking\n    };\n    router.updateOrder(orderData, props.values.id, data).then(data => {\n      if (data === \"Success\") {\n        setEditingOrder(false);\n        setOrderBtnText(\"Edit\");\n        getData(); // reload order item data if the status is completed b/c then would have updated the discount and cost of the items\n        // setTrackingHidden(true)\n      } else {\n        alert(\"Failed to save order. Please try again.\");\n        setOrderBtnText(\"Edit\");\n      }\n    });\n  }\n\n  function saveOrderItem() {\n    console.log('Saving order item');\n    const orderItemData = {};\n    router.updateOrderItem(orderItemData, props.values.id, data).then(data => {\n      if (data === \"Success\") {\n        setEditingOrderItem(false); // move to saveOrderItem if the request is successful\n      } else {\n        alert(\"Failed to save order items. Please try again.\");\n        setOrderItemBtnText(\"Edit\");\n      }\n    });\n  } // function statusChanged(e) {\n  //     console.log(e.target.value)\n  //     setStatus(e.target.value)\n  //     if (e.target.value === \"fulfilled\") {\n  //         setTrackingHidden(false)\n  //     } else {\n  //         setTrackingHidden(true)\n  //     }\n  // }\n  // function selectChanged(e) {\n  //     console.log(e.target.id)\n  // }\n\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  } //     function editInput(e) {\n  //         // e.preventDefault()\n  //         // console.log(orderSubtotal)\n  //         // console.log(e.target.value)\n  //         // console.log(e.target.id)\n  //         switch(e.target.id) {\n  //             case \"order-subtotal\":\n  //                 // setOrderSubtotal(e.target.value)\n  //                 console.log(e.target.value)\n  //                 console.log(orderSubtotal.current.value)\n  //                 break;\n  //             case \"order-total\":\n  //                 setOrderTotal(e.target.value)\n  //                 // break;\n  //             case \"order-discount\":\n  //                 setOrderDiscount(e.target.value)\n  //                 break\n  //             case \"tracking\":\n  //                 setTracking(e.target.value)\n  //                 break\n  //             case \"status\":\n  //                 setStatus(e.target.value)\n  //                 break\n  //             default:\n  //               break\n  //     }\n  // }\n\n\n  function editInput(data, value, type) {\n    if (value !== \"0\" && value !== 0 && value !== \"\") {\n      data[type] = value; // update the value to be what was entered in the inputs\n\n      if (idsToUpdate.includes(data.order_item_id)) {\n        // Item is in array so let's update it\n        dataToUpdate.forEach((item, index) => {\n          if (item.order_item_id === data.order_item_id) {\n            var array = [...dataToUpdate]; // make a separate copy of the array\n\n            if (index !== -1) {\n              array.splice(index, 1);\n              setDataToUpdate(array);\n            }\n\n            setDataToUpdate(oldArray => [...oldArray, data]); // console.log(newData.quantity)\n            // if (newData.quantity !== \"0\" && newData.quantity !== 0 && newData.quantity !== \"\") {\n            //     console.log('are we calling here')\n          }\n        });\n      } else {\n        setIdsToUpdate(oldArray => [...oldArray, data.order_item_id]);\n        setDataToUpdate(oldArray => [...oldArray, data]);\n      }\n    } // console.log(data)\n    // var newData = item\n    // newData[type] = value\n    // console.log(newData)\n    // const newData = {\n    //     item_id: id,\n    //     quantity: \n    //     variantTitle: data.variant,\n    //     variantId: data.variant_id,\n    //     cost: data.cost,\n    //     quantity: orderQuantity,\n    //     subtotal: Math.round(data.cost * orderQuantity * 100, 2) / 100\n    // }\n    // if (variantsToUpdate.includes(data.variant_id)) {\n    //     // Item is in array so let's update it\n    //     dataToUpdate.forEach((item, index) => {\n\n  }\n\n  const EditItem = props => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"inline-block\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          display: \"inline-block\",\n          margin: \"10px\",\n          fontSize: \"1.1rem\"\n        },\n        children: `${props.title}: `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"table-cell\",\n        type: \"text\",\n        id: props.id,\n        ref: props.refName,\n        placeholder: props.placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => props.toggle(),\n        children: \"\\xD7    \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\"\n        },\n        children: [\"Order #\", data.length > 0 ? data[0].order_id : \"Error loading data\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"1.4rem\"\n        },\n        children: [\"Vendor: \", data.length > 0 ? data[0].name : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isEditingOrder ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(EditItem, {\n            title: \"Subtotal\",\n            id: \"order-subtotal\",\n            placeholder: data.length > 0 ? formatter.format(data[0].order_subtotal) : \"\",\n            refName: orderSubtotal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(EditItem, {\n            title: \"Discount\",\n            id: \"order-discount\",\n            placeholder: data.length > 0 ? formatter.format(data[0].order_discount) : \"\",\n            refName: orderDiscount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(EditItem, {\n            title: \"Total\",\n            id: \"order-total\",\n            placeholder: data.length > 0 ? formatter.format(data[0].order_total) : \"\",\n            refName: orderTotal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: \"inline-block\",\n              margin: \"10px\",\n              fontSize: \"1.1rem\"\n            },\n            children: [\"Subtotal: \", data.length > 0 ? formatter.format(data[0].order_subtotal) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: \"inline-block\",\n              margin: \"10px\",\n              fontSize: \"1.1rem\"\n            },\n            children: [\"Discount: \", data.length > 0 ? formatter.format(data[0].order_discount) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: \"inline-block\",\n              margin: \"10px\",\n              fontSize: \"1.1rem\"\n            },\n            children: [\"Total: \", data.length > 0 ? formatter.format(data[0].order_total) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), isEditingOrder ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          style: inputStyle,\n          defaultValue: \"submitted\",\n          ref: status,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"submitted\",\n            children: \"Submitted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fulfilled\",\n            children: \"Fulfilled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditItem, {\n          title: \"Tracking\",\n          id: \"tracking\",\n          placeholder: data.length > 0 && data[0].tracking ? data[0].tracking : \"Enter tracking...\",\n          refName: tracking\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"1.1rem\",\n            color: data.length > 0 && data[0].status === \"submitted\" ? \"red\" : data.length > 0 && data[0].status === \"fulfilled\" ? \"orange\" : \"green\"\n          },\n          children: [\"Status: \", data.length > 0 ? capitalizeFirstLetter(data[0].status) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: \"10px\",\n            fontSize: \"1.1rem\"\n          },\n          children: [\"Tracking: \", data.length > 0 && data[0].tracking ? data[0].tracking : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            display: \"inline-block\",\n            margin: \"10px\",\n            fontSize: \"1.1rem\"\n          },\n          children: [\"Submitted: \", data.length > 0 ? data[0].submitted_date : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            display: \"inline-block\",\n            margin: \"10px\",\n            fontSize: \"1.1rem\"\n          },\n          children: [\"Fulfilled: \", data.length > 0 ? data[0].fulfilled_date : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            display: \"inline-block\",\n            margin: \"10px\",\n            fontSize: \"1.1rem\"\n          },\n          children: [\"Completed: \", data.length > 0 ? data[0].completed_date : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        hidden: isEditingOrderItem,\n        onClick: editBtnClicked,\n        className: \"edit-btn\",\n        id: \"order-btn\",\n        style: {\n          backgroundColor: editColor\n        },\n        children: orderBtnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        hidden: isEditingOrder,\n        onClick: editBtnClicked,\n        className: \"edit-btn\",\n        id: \"order-item-btn\",\n        style: {\n          backgroundColor: editColor\n        },\n        children: orderItemBtnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Variant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Subtotal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Discount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((item, index) => {\n          return isEditingOrderItem ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.product\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.variant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"table-cell\",\n                type: \"text\",\n                onChange: e => editInput(item, e.target.value, \"quantity\"),\n                placeholder: item.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"table-cell\",\n                type: \"text\",\n                onChange: e => editInput(item, e.target.value, \"cost\"),\n                placeholder: formatter.format(item.cost)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"table-cell\",\n                type: \"text\",\n                onChange: e => editInput(item, e.target.value, \"subtotal\"),\n                placeholder: formatter.format(item.subtotal)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"table-cell\",\n                type: \"text\",\n                onChange: e => editInput(item, e.target.value, \"discount\"),\n                placeholder: formatter.format(item.discount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"table-cell\",\n                type: \"text\",\n                onChange: e => editInput(item, e.target.value, \"total\"),\n                placeholder: formatter.format(item.total)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.product\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.variant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: formatter.format(item.cost)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: formatter.format(item.subtotal)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: formatter.format(item.discount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: formatter.format(item.total)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderPopup, \"vycyTzlKvvGbePlv8f1fiq8Avws=\");\n\n_c = OrderPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderPopup\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Orders/OrderPopup.js"],"names":["useState","useEffect","useRef","router","OrderPopup","props","data","setData","isLoading","setLoading","orderBtnText","setOrderBtnText","orderItemBtnText","setOrderItemBtnText","isEditingOrder","setEditingOrder","isEditingOrderItem","setEditingOrderItem","editColor","setEditColor","isTrackingHidden","setTrackingHidden","idsToUpdate","setIdsToUpdate","dataToUpdate","setDataToUpdate","orderSubtotal","orderDiscount","orderTotal","tracking","status","console","log","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","inputStyle","margin","padding","fontSize","border","borderBottom","getData","loadOrder","values","id","then","editBtnClicked","e","target","saveOrder","saveOrderItem","orderData","subtotal","current","value","order_subtotal","discount","order_discount","total","order_total","updateOrder","alert","orderItemData","updateOrderItem","capitalizeFirstLetter","string","charAt","toUpperCase","slice","editInput","type","includes","order_item_id","forEach","item","index","array","splice","oldArray","EditItem","display","title","refName","placeholder","toggle","length","order_id","name","format","textAlign","color","submitted_date","fulfilled_date","completed_date","backgroundColor","map","product","variant","quantity","cost"],"mappings":"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","sourcesContent":["import {useState, useEffect, useRef} from \"react\"\nimport * as router from \"./orderAPI\"\n\nexport default function OrderPopup(props) {\n    \n    const [data, setData] = useState([])\n    const [isLoading, setLoading] = useState(false)\n    const [orderBtnText, setOrderBtnText] = useState(\"Edit Order\")\n    const [orderItemBtnText, setOrderItemBtnText] = useState(\"Edit Order Item\")\n    const [isEditingOrder, setEditingOrder] = useState(false)\n    const [isEditingOrderItem, setEditingOrderItem] = useState(false)\n    const [editColor, setEditColor] = useState(\"#76c32d\")\n    const [isTrackingHidden, setTrackingHidden] = useState(true)\n    const [idsToUpdate, setIdsToUpdate] = useState([])\n    const [dataToUpdate, setDataToUpdate] = useState([])\n\n    // const [status, setStatus] = useState(\"\")\n    // const [tracking, setTracking] = useState(\"\")\n    // const [orderDiscount, setOrderDiscount] = useState(\"\")\n    // const [orderTotal, setOrderTotal] = useState(\"\")\n    // const [orderSubtotal, setOrderSubtotal] = useState(0)\n\n    const orderSubtotal = useRef()\n    const orderDiscount = useRef()\n    const orderTotal = useRef()\n    const tracking = useRef()\n    const status = useRef()\n\n    console.log(dataToUpdate)\n    console.log(idsToUpdate)\n\n    // console.log(isTrackingHidden)\n    // console.log(status)\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0\n        })\n\n    const inputStyle = {\n        margin: \"20px auto\",\n        padding: \"10px 20px\",\n        fontSize: \"16px\",\n        border: \"none\",\n        borderBottom: \"1px solid #76c32d\"\n    }\n\n    function getData() {\n        setLoading(true)\n        router.loadOrder(props.values.id).then(data => {\n            if (data) {\n                console.log(data)\n                setData(data)\n                setLoading(false)      \n            }\n        })\n    }\n\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (isLoading) {\n        return <div className=\"loader\"></div>;\n    }\n\n    function editBtnClicked(e) {\n        \n       \n        if (e.target.id === \"order-btn\") {\n            if (!isEditingOrder) {\n                setOrderBtnText(\"Save Order\")\n                setEditingOrder(true)\n            } else {\n                saveOrder()\n            }\n        } else if (e.target.id === \"order-item-btn\") {\n            if (!isEditingOrderItem) {\n                setOrderItemBtnText(\"Save Order Item\")\n                setEditingOrderItem(true)\n            } else {\n                saveOrderItem()\n            }\n        }\n        setEditColor(editColor === \"#26B1FF\" ? \"#76c32d\" : \"#26B1FF\")\n        \n        \n    }\n\n    function saveOrder() {\n        const orderData = {\n            subtotal: orderSubtotal.current.value ? orderSubtotal.current.value : data[0].order_subtotal,\n            discount: orderDiscount.current.value ? orderDiscount.current.value : data[0].order_discount,\n            total: orderTotal.current.value ? orderTotal.current.value : data[0].order_total,\n            status: status.current.value ? status.current.value : data[0].status,\n            tracking: tracking.current.value ? tracking.current.value : data[0].tracking,\n        }\n\n        router.updateOrder(orderData, props.values.id, data).then(data => {\n            if (data === \"Success\") {\n                setEditingOrder(false)\n                setOrderBtnText(\"Edit\")\n                getData()\n\n                // reload order item data if the status is completed b/c then would have updated the discount and cost of the items\n\n                // setTrackingHidden(true)\n            } else {\n                alert(\"Failed to save order. Please try again.\")\n                setOrderBtnText(\"Edit\")\n            }\n        })      \n    }\n\n    function saveOrderItem() {\n        console.log('Saving order item')\n\n        const orderItemData = {\n\n        }\n\n        router.updateOrderItem(orderItemData, props.values.id, data).then(data => {\n            if (data === \"Success\") {\n                setEditingOrderItem(false) // move to saveOrderItem if the request is successful\n            } else {\n                alert(\"Failed to save order items. Please try again.\")\n                setOrderItemBtnText(\"Edit\")\n            }\n        })\n    }\n        \n        \n        \n\n    // function statusChanged(e) {\n\n    //     console.log(e.target.value)\n\n    //     setStatus(e.target.value)\n\n    //     if (e.target.value === \"fulfilled\") {\n    //         setTrackingHidden(false)\n    //     } else {\n    //         setTrackingHidden(true)\n    //     }\n    // }\n\n    // function selectChanged(e) {\n    //     console.log(e.target.id)\n    // }\n\n    function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n      }\n\n//     function editInput(e) {\n//         // e.preventDefault()\n//         // console.log(orderSubtotal)\n//         // console.log(e.target.value)\n//         // console.log(e.target.id)\n//         switch(e.target.id) {\n//             case \"order-subtotal\":\n//                 // setOrderSubtotal(e.target.value)\n//                 console.log(e.target.value)\n//                 console.log(orderSubtotal.current.value)\n//                 break;\n//             case \"order-total\":\n//                 setOrderTotal(e.target.value)\n//                 // break;\n//             case \"order-discount\":\n//                 setOrderDiscount(e.target.value)\n//                 break\n//             case \"tracking\":\n//                 setTracking(e.target.value)\n//                 break\n//             case \"status\":\n//                 setStatus(e.target.value)\n//                 break\n//             default:\n//               break\n//     }\n// }\n\n    function editInput(data, value, type) {\n\n        if (value !== \"0\" && value !== 0 && value !== \"\") {\n            data[type] = value // update the value to be what was entered in the inputs\n\n            if (idsToUpdate.includes(data.order_item_id)) {\n                // Item is in array so let's update it\n                dataToUpdate.forEach((item, index) => {\n                    \n                    if (item.order_item_id === data.order_item_id) {\n                        var array = [...dataToUpdate]; // make a separate copy of the array\n                        if (index !== -1) {\n                            array.splice(index, 1);\n                            setDataToUpdate(array);\n                        } \n       \n                            setDataToUpdate(oldArray => [...oldArray, data])   \n                       \n                  \n               \n                        // console.log(newData.quantity)\n                        // if (newData.quantity !== \"0\" && newData.quantity !== 0 && newData.quantity !== \"\") {\n                        //     console.log('are we calling here')\n                    }  \n                   \n                    \n                })\n            } else {\n\n                    setIdsToUpdate(oldArray => [...oldArray, data.order_item_id])\n                    setDataToUpdate(oldArray => [...oldArray, data])\n \n            }\n    \n        }\n\n        // console.log(data)\n\n      \n\n\n        // var newData = item\n        // newData[type] = value\n        // console.log(newData)\n        // const newData = {\n        //     item_id: id,\n        //     quantity: \n        //     variantTitle: data.variant,\n        //     variantId: data.variant_id,\n        //     cost: data.cost,\n        //     quantity: orderQuantity,\n        //     subtotal: Math.round(data.cost * orderQuantity * 100, 2) / 100\n        // }\n\n        // if (variantsToUpdate.includes(data.variant_id)) {\n        //     // Item is in array so let's update it\n        //     dataToUpdate.forEach((item, index) => {\n                \n    }\n    \n\n    const EditItem = (props) => {\n        return (\n            <div style={{display: \"inline-block\"}}>\n            <p style={{display: \"inline-block\", margin: \"10px\",fontSize: \"1.1rem\"}}>{`${props.title}: `}</p>\n            <input className=\"table-cell\" type=\"text\" id={props.id} ref={props.refName} placeholder={props.placeholder}/>\n        </div>\n        )\n      \n    }\n\n    return (\n        <div>\n            <div className=\"top-content\">\n                <span className=\"close\" onClick={() =>  props.toggle()}>&times;    </span>\n                <h2 style={{fontSize: \"2rem\"}}>Order #{data.length > 0 ? data[0].order_id : \"Error loading data\"}</h2>\n                <p style={{fontSize: \"1.4rem\"}}>Vendor: {data.length > 0 ? data[0].name : \"\"}</p>\n                <div>\n                {isEditingOrder\n                ? \n                <div>\n                    <EditItem title=\"Subtotal\" id=\"order-subtotal\" placeholder={data.length > 0 ? formatter.format(data[0].order_subtotal) : \"\"} refName={orderSubtotal}/>\n                    <EditItem title=\"Discount\" id=\"order-discount\" placeholder={data.length > 0 ? formatter.format(data[0].order_discount) : \"\"} refName={orderDiscount}/>\n                    <EditItem title=\"Total\" id=\"order-total\" placeholder={data.length > 0 ? formatter.format(data[0].order_total) : \"\"} refName={orderTotal}/> \n                </div>\n                :\n                <div>\n                    <p style={{display: \"inline-block\", margin: \"10px\",fontSize: \"1.1rem\"}}>Subtotal: {data.length > 0 ? formatter.format(data[0].order_subtotal) : \"\"}</p>\n                    <p style={{display: \"inline-block\", margin: \"10px\", fontSize: \"1.1rem\"}}>Discount: {data.length > 0 ? formatter.format(data[0].order_discount) : \"\"}</p>\n                    <p style={{display: \"inline-block\", margin: \"10px\", fontSize: \"1.1rem\"}}>Total: {data.length > 0 ? formatter.format(data[0].order_total) : \"\"}</p>\n                </div>\n                }\n                   \n\n                </div>\n\n                {isEditingOrder \n                ?\n                <div style={{textAlign: \"center\"}}>\n                    <select style={inputStyle} defaultValue=\"submitted\" ref={status}>\n                        <option value=\"submitted\">Submitted</option>\n                        <option value=\"fulfilled\">Fulfilled</option>\n                        <option value=\"completed\">Completed</option>\n                    </select>\n                    <br />\n                    {/* <input hidden={isTrackingHidden} style={inputStyle} placeholder=\"Tracking\" onChange={(e) => setTracking(e.target.value)}></input><br/>\n                    <input hidden={isTrackingHidden} style={inputStyle} placeholder=\"Discount (i.e. 180.02)\" onChange={(e) => setDiscount(e.target.value)}></input> */}\n                    <EditItem title=\"Tracking\" id=\"tracking\" placeholder={data.length > 0  && data[0].tracking ? data[0].tracking : \"Enter tracking...\"} refName={tracking}/>\n                    \n                </div>\n                :\n                <div>\n                    <p style={{fontSize: \"1.1rem\", color: data.length > 0 && data[0].status === \"submitted\" ? \"red\" : data.length > 0 && data[0].status===\"fulfilled\" ? \"orange\" : \"green\"}}>Status: {data.length > 0 ? capitalizeFirstLetter(data[0].status) : \"\"}</p>\n                    <p style={{margin: \"10px\",fontSize: \"1.1rem\"}}>Tracking: {data.length > 0 && data[0].tracking ? data[0].tracking : \"\"}</p>\n                </div>\n                }\n\n               \n                <div>\n                    <p style={{display: \"inline-block\", margin: \"10px\", fontSize: \"1.1rem\"}}>Submitted: {data.length > 0 ? data[0].submitted_date : \"\"}</p>\n                    <p style={{display: \"inline-block\", margin: \"10px\", fontSize: \"1.1rem\"}}>Fulfilled: {data.length > 0 ? data[0].fulfilled_date : \"\"}</p>\n                    <p style={{display: \"inline-block\", margin: \"10px\", fontSize: \"1.1rem\"}}>Completed: {data.length > 0 ? data[0].completed_date : \"\"}</p>\n                </div>\n                \n                \n                {/* <button hidden={isTrackingHidden ? data[0] && data[0].status === \"completed\" : false} onClick={editBtnClicked} className=\"edit-btn\" style={{backgroundColor: editColor}}>{btnText}</button>\n                 */}\n                 <button hidden={isEditingOrderItem} onClick={editBtnClicked} className=\"edit-btn\" id=\"order-btn\"style={{backgroundColor: editColor}}>{orderBtnText}</button>\n                 <button hidden={isEditingOrder} onClick={editBtnClicked} className=\"edit-btn\" id='order-item-btn' style={{backgroundColor: editColor}}>{orderItemBtnText}</button>\n            </div>\n\n            <table style={{textAlign: \"center\"}}>\n                <thead >\n                    <tr>\n                        <th className=\"table-header\">Product</th>\n                        <th className=\"table-header\">Variant</th>\n                        <th className=\"table-header\">Quantity</th>\n                        <th className=\"table-header\">Cost</th>\n                        <th className=\"table-header\">Subtotal</th>\n                        <th className=\"table-header\">Discount</th>\n                        <th className=\"table-header\">Total</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {data.map((item, index) => {\n                    return (\n                         isEditingOrderItem\n                            ? \n                            <tr key={index}>\n                                <td className=\"table-cell\">{item.product}</td>\n                                <td className=\"table-cell\">{item.variant}</td>\n     \n                                <td className=\"table-cell\">\n                                    <input className=\"table-cell\" type=\"text\" onChange={(e) => editInput(item, e.target.value, \"quantity\")} placeholder={item.quantity} />\n                                </td>\n                                <td className=\"table-cell\">\n                                    <input className=\"table-cell\" type=\"text\" onChange={(e) => editInput(item, e.target.value, \"cost\")} placeholder={formatter.format(item.cost)} />\n                                </td>\n                                <td className=\"table-cell\">\n                                    <input className=\"table-cell\" type=\"text\" onChange={(e) => editInput(item, e.target.value, \"subtotal\")} placeholder={formatter.format(item.subtotal)} />\n                                </td>\n                                <td className=\"table-cell\">\n                                    <input className=\"table-cell\" type=\"text\" onChange={(e) => editInput(item, e.target.value, \"discount\")} placeholder={formatter.format(item.discount)} />\n                                </td>\n                                <td className=\"table-cell\">\n                                    <input className=\"table-cell\" type=\"text\" onChange={(e) => editInput(item, e.target.value, \"total\")} placeholder={formatter.format(item.total)} />\n                                </td>\n                            </tr>\n          \n                            :\n                            <tr key={index}>\n                                <td className=\"table-cell\">{item.product}</td>\n                                <td className=\"table-cell\">{item.variant}</td>\n                                <td className=\"table-cell\">{item.quantity}</td>\n                                <td className=\"table-cell\">{formatter.format(item.cost)}</td>\n                                <td className=\"table-cell\">{formatter.format(item.subtotal)}</td>\n                                <td className=\"table-cell\">{formatter.format(item.discount)}</td>\n                                <td className=\"table-cell\">{formatter.format(item.total)}</td>    \n                            </tr>\n                            \n                    )\n                    })\n                }\n                </tbody>\n            </table>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}