{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/Layout\";\nimport SalesChart from \"./SalesChart\";\nimport CogsChart from \"./CogsChart\";\nimport CallToAction from \"./CallToAction\";\nimport MiniTable from \"./MiniTable\";\nimport * as router from \"./homeAPI\";\nexport default function Home(props) {\n  _s();\n\n  const [dateFilter, setDateFilter] = useState(\"month\");\n  const [salesData, setSalesData] = useState([]);\n  const [cogsData, setCogsData] = useState([]);\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [updateMiniTable, setMiniTable] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const style = {\n    display: `flex`,\n    justifyContent: `space-around`,\n    // margin: `0 20px`,\n    padding: `0 20px`,\n    // height: `100vh` /* Force our height since we don't have actual content yet */,\n    color: `#1E384D`,\n    gridArea: \"main\",\n    backgroundColor: \"rgb(246,246,247)\",\n    textAlign: \"center\",\n    flexWrap: \"wrap\"\n  };\n  const filterStyle = {\n    padding: \"10px 30px\",\n    borderRadius: \"5px\",\n    border: \"none\",\n    backgroundColor: \"rgb(45,142,255)\",\n    color: \"white\",\n    fontSize: \"16px\",\n    outline: \"none\",\n    display: \"block\",\n    margin: \"10px auto\" // appearance: \"none\"\n\n  };\n  const datePickerStyle = {\n    padding: \"10px 30px\",\n    borderRadius: \"5px\",\n    border: \"none\",\n    backgroundColor: \"rgb(45,142,255)\",\n    color: \"white\",\n    margin: \"0 10px\",\n    fontSize: \"16px\"\n  };\n  const filterBtnStyle = {\n    padding: \"10px 20px\",\n    display: \"block\",\n    margin: \"10px auto\",\n    borderRadius: \"5px\",\n    border: \"none\",\n    backgroundColor: \"white\",\n    boxShadow: `0 1px 4px rgba(0, 0, 0, 0.2), 0 0 10px rgba(10, 0, 0, 0.1)`,\n    fontSize: \"16px\"\n  };\n  const chartStyle = {\n    width: \"45%\",\n    backgroundColor: \"white\",\n    boxShadow: `0 1px 4px rgba(0, 0, 0, 0.2), 0 0 10px rgba(10, 0, 0, 0.1)`,\n    borderRadius: \"5px\",\n    padding: \"2%\"\n  };\n  const tableStyle = {\n    margin: \"20px 0\",\n    padding: \"10px 40px\",\n    backgroundColor: \"white\",\n    boxShadow: `0 1px 4px rgba(0, 0, 0, 0.2), 0 0 10px rgba(10, 0, 0, 0.1)`,\n    borderRadius: \"5px\"\n  };\n\n  function getPurchases(filter) {\n    setLoading(true);\n    router.loadPurchases(filter, startDate, endDate).then(data => {\n      if (data) {\n        setSalesData(data.salesData);\n        setCogsData(data.cogsData);\n      }\n\n      setLoading(false);\n    });\n  }\n\n  useEffect(() => {\n    getPurchases(dateFilter);\n  }, []);\n\n  function dateFilterChanged(e) {\n    setDateFilter(e.target.value);\n    getPurchases(e.target.value);\n  }\n\n  function filterByDate() {\n    getPurchases(dateFilter);\n    setMiniTable(!updateMiniTable);\n  } // const tableStyle = {\n  //   width: \"100%\", \n  //   textAlign: \"left\", \n  //   backgroundColor: \"#efefef\",\n  //   padding: \"30px\",\n  //   borderRadius: \"5px\"\n  // }\n  // const tableHeaderStyle = {\n  //     paddingBottom: \"10px\",\n  //   }\n  // const tableBodyStyle = {\n  //   paddingRight: \"20px\",\n  // }\n  // const topSellingProducts = {\n  //   \"Delta 8 THC Cart\": \"10\",\n  //   \"Disposable Vape Pen\": \"500\",\n  //   \"Endocure Pet Chews\": \"200\"\n  // }\n  // const productsRunningLow = {\n  //   \"3CHI Cart - Gorilla Glue\": \"55\",\n  //   \"Bath Salts\": \"2\",\n  //   \"White Whale 3.5g\": \"16\"\n  // }\n  // function sortProducts(array, type) {\n  //   // Create items array\n  //   var items = Object.keys(array).map(key => {\n  //     return [key, array[key]];\n  //   });\n  //   if (type === \"high\") {\n  //     // Sort the array based on the second element\n  //     items.sort(function(first, second) {\n  //       return second[1] - first[1];\n  //     });\n  //   } else if (type === \"low\") {\n  //     // Sort the array based on the first element\n  //     items.sort(function(first, second) {\n  //       return first[1] - second[1];\n  //     });\n  //   }\n  //   return items\n  // }\n  // const sortedTopSellingProducts = sortProducts(topSellingProducts, \"high\")\n  // const sortedProductsRunningLow = sortProducts(productsRunningLow, \"low\")\n  // const renderLineChart = (\n  //   <LineChart width={400} height={400} data={data}>\n  //     <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\n  //   </LineChart>\n  // );\n\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 10\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      user: props.user,\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(CallToAction, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            margin: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            style: filterStyle,\n            defaultValue: \"month\",\n            onChange: dateFilterChanged,\n            id: \"dateFilter\",\n            name: \"dateFilter\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"day\",\n              children: \"Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"month\",\n              children: \"Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"week\",\n              children: \"Week\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"year\",\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: datePickerStyle,\n            onChange: e => setStartDate(e.target.value),\n            type: \"date\",\n            id: \"start\",\n            name: \"start\",\n            value: startDate,\n            min: \"2018-01-01\",\n            max: new Date().toISOString().slice(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: datePickerStyle,\n            onChange: e => setEndDate(e.target.value),\n            type: \"date\",\n            id: \"end\",\n            name: \"end\",\n            value: endDate,\n            min: \"2018-01-01\",\n            max: new Date().toISOString().slice(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: filterByDate,\n            children: \"Filter by Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: chartStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Total Sales ($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(SalesChart, {\n            data: salesData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: chartStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Cost of Goods Sold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(CogsChart, {\n            data: cogsData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: tableStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Top Sellers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(MiniTable, {\n            changed: updateMiniTable,\n            startDate: startDate,\n            endDate: endDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this);\n  }\n}\n\n_s(Home, \"gmTxoCoNuUIHY6Tn0lyhvpQzzuw=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/Home/Home.js"],"names":["React","useState","useEffect","Layout","SalesChart","CogsChart","CallToAction","MiniTable","router","Home","props","dateFilter","setDateFilter","salesData","setSalesData","cogsData","setCogsData","startDate","setStartDate","endDate","setEndDate","updateMiniTable","setMiniTable","isLoading","setLoading","style","display","justifyContent","padding","color","gridArea","backgroundColor","textAlign","flexWrap","filterStyle","borderRadius","border","fontSize","outline","margin","datePickerStyle","filterBtnStyle","boxShadow","chartStyle","width","tableStyle","getPurchases","filter","loadPurchases","then","data","dateFilterChanged","e","target","value","filterByDate","user","Date","toISOString","slice"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport Layout from \"../components/Layout\"\nimport SalesChart from \"./SalesChart\"\nimport CogsChart from \"./CogsChart\"\nimport CallToAction from \"./CallToAction\"\nimport MiniTable from \"./MiniTable\"\nimport * as router from \"./homeAPI\";\n\n\nexport default function Home(props) {\n\n  const [dateFilter, setDateFilter] = useState(\"month\")\n  const [salesData, setSalesData] = useState([])\n  const [cogsData, setCogsData] = useState([])\n  const [startDate, setStartDate] = useState(\"\")\n  const [endDate, setEndDate] = useState(\"\")\n  const [updateMiniTable, setMiniTable] = useState(false)\n  const [isLoading, setLoading] = useState(true);\n\n  const style = {\n    display: `flex`,\n    justifyContent: `space-around`,\n    // margin: `0 20px`,\n    padding: `0 20px`,\n    // height: `100vh` /* Force our height since we don't have actual content yet */,\n    color: `#1E384D`,\n    gridArea: \"main\",\n    backgroundColor: \"rgb(246,246,247)\",\n    textAlign: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const filterStyle = {\n    padding: \"10px 30px\",\n    borderRadius: \"5px\",\n    border: \"none\",\n    backgroundColor: \"rgb(45,142,255)\",\n    color: \"white\",\n    fontSize: \"16px\",\n    outline: \"none\",\n    display: \"block\",\n    margin: \"10px auto\"\n    \n    // appearance: \"none\"\n\n  }\n\n  const datePickerStyle = {\n    padding: \"10px 30px\",\n    borderRadius: \"5px\",\n    border: \"none\",\n    backgroundColor: \"rgb(45,142,255)\",\n    color: \"white\",\n    margin: \"0 10px\",\n    fontSize: \"16px\",\n    \n  }\n\n  const filterBtnStyle = {\n    padding: \"10px 20px\",\n    display: \"block\",\n    margin: \"10px auto\",\n    borderRadius: \"5px\",\n    border: \"none\",\n    backgroundColor: \"white\",\n    boxShadow:\n    `0 1px 4px rgba(0, 0, 0, 0.2), 0 0 10px rgba(10, 0, 0, 0.1)`,\n    fontSize: \"16px\",\n  }\n\n  const chartStyle = {\n    width: \"45%\", \n    backgroundColor: \"white\",\n    boxShadow:\n    `0 1px 4px rgba(0, 0, 0, 0.2), 0 0 10px rgba(10, 0, 0, 0.1)`,\n    borderRadius: \"5px\",\n    padding: \"2%\"\n\n  }\n\n  const tableStyle = {\n    margin: \"20px 0\", \n    padding: \"10px 40px\", \n    backgroundColor: \"white\",\n    boxShadow:\n    `0 1px 4px rgba(0, 0, 0, 0.2), 0 0 10px rgba(10, 0, 0, 0.1)`,\n    borderRadius: \"5px\",\n  }\n\n  \n\n  function getPurchases(filter) {\n    setLoading(true)\n    router.loadPurchases(filter, startDate, endDate).then(data => {\n      if (data) {\n        setSalesData(data.salesData)\n        setCogsData(data.cogsData)\n        \n      }\n      setLoading(false)\n    });\n}\n\n  useEffect(() => {\n    \n    getPurchases(dateFilter)\n  }, []);\n\n \n\n\n\n  function dateFilterChanged(e) {\n    setDateFilter(e.target.value)\n    getPurchases(e.target.value)\n  }\n\n  function filterByDate() {\n    getPurchases(dateFilter)\n    setMiniTable(!updateMiniTable)\n\n  }\n\n\n  // const tableStyle = {\n  //   width: \"100%\", \n  //   textAlign: \"left\", \n  //   backgroundColor: \"#efefef\",\n  //   padding: \"30px\",\n  //   borderRadius: \"5px\"\n  // }\n\n  // const tableHeaderStyle = {\n  //     paddingBottom: \"10px\",\n  //   }\n  // const tableBodyStyle = {\n  //   paddingRight: \"20px\",\n  // }\n\n  // const topSellingProducts = {\n  //   \"Delta 8 THC Cart\": \"10\",\n  //   \"Disposable Vape Pen\": \"500\",\n  //   \"Endocure Pet Chews\": \"200\"\n  // }\n\n  // const productsRunningLow = {\n  //   \"3CHI Cart - Gorilla Glue\": \"55\",\n  //   \"Bath Salts\": \"2\",\n  //   \"White Whale 3.5g\": \"16\"\n  // }\n\n  // function sortProducts(array, type) {\n\n  //   // Create items array\n  //   var items = Object.keys(array).map(key => {\n  //     return [key, array[key]];\n  //   });\n\n  //   if (type === \"high\") {\n  //     // Sort the array based on the second element\n  //     items.sort(function(first, second) {\n  //       return second[1] - first[1];\n  //     });\n  //   } else if (type === \"low\") {\n  //     // Sort the array based on the first element\n  //     items.sort(function(first, second) {\n  //       return first[1] - second[1];\n  //     });\n  //   }\n  \n  //   return items\n  // }\n\n  // const sortedTopSellingProducts = sortProducts(topSellingProducts, \"high\")\n  // const sortedProductsRunningLow = sortProducts(productsRunningLow, \"low\")\n\n\n// const renderLineChart = (\n//   <LineChart width={400} height={400} data={data}>\n//     <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\n//   </LineChart>\n// );\nif (isLoading) {\n  return <div className=\"loader\"></div>;\n} else {\n\n\n   \n    return (\n        <Layout user={props.user}>\n          \n              <main style={style}>\n                <CallToAction />\n                \n                <div style={{width: \"100%\", margin: \"20px\"}}>\n                <select style={filterStyle} defaultValue=\"month\" onChange={dateFilterChanged} id=\"dateFilter\" name=\"dateFilter\">\n                  <option value=\"day\">Day</option>\n                  <option value=\"month\">Month</option>\n                  <option value=\"week\">Week</option>\n                  <option value=\"year\">Year</option>\n                </select>\n\n                {/* <label for=\"start\">Start date:</label> */}\n\n                <input style={datePickerStyle} onChange={e => setStartDate(e.target.value)} type=\"date\" id=\"start\" name=\"start\"\n                      value={startDate}\n                      min=\"2018-01-01\" max={new Date().toISOString().slice(0,10)} />\n\n                {/* <label for=\"end\">End date:</label> */}\n\n                <input style={datePickerStyle} onChange={e => setEndDate(e.target.value)} type=\"date\" id=\"end\" name=\"end\"\n                      value={endDate}\n                    min=\"2018-01-01\" max={new Date().toISOString().slice(0,10)} />    \n                <button className=\"btn\" onClick={filterByDate}>Filter by Date</button>\n                </div>\n                \n                <div style={chartStyle}>\n             \n              \n                  <h2>Total Sales ($)</h2>\n                  <SalesChart data={salesData}/>\n                </div>\n                <div style={chartStyle}>\n                {/* <select id=\"itemFilter\" name=\"itemFilter\">\n                  <option value=\"product\">Product</option>\n                  <option value=\"category\">Category</option>\n                </select> */}\n                  <h2>Cost of Goods Sold</h2>\n                  <CogsChart data={cogsData}/>\n                </div>\n                <div style={tableStyle}>\n                  <h2>Top Sellers</h2>\n                  <MiniTable changed={updateMiniTable} startDate={startDate} endDate={endDate}/>\n                </div>\n                {/* <div>\n                  <h2>Top Selling Products</h2>\n                  <table style={tableStyle}>\n                    <thead >\n                      <tr>\n                        <th style={tableHeaderStyle}>Product</th>\n                        <th style={tableHeaderStyle}>Units Sold</th>\n                      </tr>\n                    </thead>\n\n                    <tbody>\n                    {sortedTopSellingProducts.map((item, index) => {\n                      return (\n                      <tr key={index} >\n                        <td style={tableBodyStyle}>{item[0]}</td>\n                        <td style={tableBodyStyle}>{item[1]}</td>\n                      </tr>\n                      )\n                    })\n                    }\n                    </tbody>\n                  </table>\n                  <button className=\"btn-2\">View All</button>\n                </div> */}\n             \n                {/* <div>\n                  <h2>Products Running Low</h2>\n                  <table style={tableStyle}>\n                    <thead >\n                      <tr>\n                        <th style={tableHeaderStyle}>Product</th>\n                        <th style={tableHeaderStyle}>Units Sold</th>\n                      </tr>\n                    </thead>\n\n                    <tbody>\n                    {sortedProductsRunningLow.map((item, index) => {\n                      return (\n                      <tr key={index} >\n                        <td style={tableBodyStyle}>{item[0]}</td>\n                        <td style={tableBodyStyle}>{item[1]}</td>\n                      </tr>\n                      )\n                    })\n                    }\n                    </tbody>\n                  </table>\n                  <button className=\"btn-2\">View All</button>\n                </div> */}\n              </main>\n        </Layout>\n       \n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}