{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/components/Inventory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"./Layout\";\nimport Table from \"./Table\";\nimport axios from \"axios\";\nexport default function Inventory(props) {\n  _s();\n\n  const [products, setProducts] = useState([]);\n\n  function getProducts() {\n    axios.get('http://localhost:5000/products/', {\n      withCredentials: true\n    }).then(response => {\n      console.log(response);\n\n      if (response.data) {\n        const loadedProducts = [];\n        response.data.forEach(product => {\n          const newProduct = {\n            productName: product.title,\n            id: product.id,\n            vendor: product.vendor,\n            quantity: 0,\n            variants: 0\n          };\n          product.variants.forEach(variant => {\n            if (product.id === \"4553389015088\") {\n              console.log(variant);\n            }\n\n            newProduct.variants += 1;\n            newProduct.quantity += variant.quantity;\n          }); // TALK WITH MARTY/TED ABOUT THESE QTY LEVELS\n\n          if (newProduct.quantity < 20) {\n            newProduct.stockLevel = \"Low\";\n          } else if (newProduct.quantity >= 20 && newProduct.quantity < 50) {\n            newProduct.stockLevel = \"Medium\";\n          } else {\n            newProduct.stockLevel = \"High\";\n          }\n\n          loadedProducts.push(newProduct);\n        });\n        setProducts(loadedProducts);\n      }\n    });\n  }\n\n  useEffect(() => {\n    getProducts();\n  }, []);\n  const columns = React.useMemo(() => [{\n    Header: 'Product Name',\n    accessor: 'productName'\n  }, {\n    Header: 'ID',\n    accessor: 'id'\n  }, {\n    Header: 'Vendor',\n    accessor: 'vendor'\n  }, {\n    Header: 'Variants',\n    accessor: 'variants'\n  }, {\n    Header: 'Quantity',\n    accessor: 'quantity'\n  }, {\n    Header: 'Stock Level',\n    accessor: 'stockLevel'\n  }], []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    user: props.user,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        gridArea: \"main\",\n        width: \"80%\",\n        margin: \"20px auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Inventory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        data: products\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Inventory, \"yvWrkWc5Kv0rkUvix4Z1FrsUxNo=\");\n\n_c = Inventory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/components/Inventory.js"],"names":["React","useEffect","useState","Layout","Table","axios","Inventory","props","products","setProducts","getProducts","get","withCredentials","then","response","console","log","data","loadedProducts","forEach","product","newProduct","productName","title","id","vendor","quantity","variants","variant","stockLevel","push","columns","useMemo","Header","accessor","user","gridArea","width","margin"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport Layout from \"./Layout\"\nimport Table from \"./Table\"\nimport axios from \"axios\"\n\nexport default function Inventory(props) {\n    const [products, setProducts] = useState([])\n\n    function getProducts() {\n        axios.get('http://localhost:5000/products/', {withCredentials: true}).then(response => {\n            console.log(response)\n            if (response.data) {\n                const loadedProducts = []\n                response.data.forEach(product => {\n                    const newProduct = {\n                        productName: product.title,\n                        id: product.id,\n                        vendor: product.vendor,\n                        quantity: 0,\n                        variants: 0\n                    }       \n                    product.variants.forEach(variant => {\n                        if (product.id === \"4553389015088\") {\n                            console.log(variant)\n                        }\n                        newProduct.variants += 1\n                        newProduct.quantity += variant.quantity\n                    })\n                    // TALK WITH MARTY/TED ABOUT THESE QTY LEVELS\n                    if (newProduct.quantity < 20) {\n                        newProduct.stockLevel = \"Low\"\n                    } else if (newProduct.quantity >= 20 && newProduct.quantity < 50) {\n                        newProduct.stockLevel = \"Medium\"\n                    } else {\n                        newProduct.stockLevel = \"High\"\n                    }\n                    loadedProducts.push(newProduct)\n                })\n\n                setProducts(loadedProducts)\n            }\n        });\n      }\n  \n      useEffect(() => {\n        getProducts()\n      }, []);\n\n    const columns = React.useMemo(\n        () => [\n          {\n            Header: 'Product Name',\n            accessor: 'productName',\n          },\n          {\n            Header: 'ID',\n            accessor: 'id',\n          },\n          {\n            Header: 'Vendor',\n            accessor: 'vendor',\n          },\n          {\n            Header: 'Variants',\n            accessor: 'variants',\n          },\n          {\n            Header: 'Quantity',\n            accessor: 'quantity',\n          },\n          {\n            Header: 'Stock Level',\n            accessor: 'stockLevel',\n          },\n        ],\n        []\n      )\n\n    return (\n\n        <Layout user={props.user}>\n            <div style={{gridArea: \"main\", width: \"80%\", margin: \"20px auto\"}}>\n                <h1>Inventory</h1>\n                <Table columns={columns} data={products} />\n            </div>\n        </Layout>\n    )\n}"]},"metadata":{},"sourceType":"module"}