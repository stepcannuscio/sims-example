{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/components/Table.js\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useTable, useAsyncDebounce, useGlobalFilter, usePagination, useSortBy, useRowSelect } from \"react-table\";\nimport searchIcon from \"../images/search.png\";\nimport Popup from \"./Popup\"; // Define a default UI for filtering\n\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter\n}) {\n  _s();\n\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  const searchStyle = {\n    border: '1px solid rgba(30,56,77, 50%)',\n    borderRadius: '5px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: searchStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        margin: \"0 10px\",\n        width: \"12px\"\n      },\n      src: searchIcon,\n      alt: \"search icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: value || \"\",\n      onChange: e => {\n        setValue(e.target.value);\n        onChange(e.target.value);\n      },\n      placeholder: `Search products...`,\n      style: {\n        fontSize: '1.1rem',\n        border: '0',\n        width: '80%',\n        padding: \"10px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GlobalFilter, \"u76gItWTPW4jhTYSCcNG7/LfbyA=\", false, function () {\n  return [useAsyncDebounce];\n});\n\n_c = GlobalFilter;\nexport default function Table({\n  columns,\n  initialSearch,\n  data,\n  type,\n  reloadData,\n  search,\n  perPage,\n  popupEnabled,\n  user,\n  checkbox,\n  update,\n  removeItem\n}) {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  // console.log(props)\\\n  // console.log(data)\n  const [isPopup, setIsPopup] = useState(false);\n  const [popupData, setPopupData] = useState({});\n  const [orderQuantity, setOrderQuantity] = useState(0);\n  const IndeterminateCheckbox = /*#__PURE__*/React.forwardRef(_s2(({\n    indeterminate,\n    ...rest\n  }, ref) => {\n    _s2();\n\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n    useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        ref: resolvedRef,\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }, \"ouw4KVvDKeit07oEcYWUcp3TdOA=\"));\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    state,\n    page,\n    pageOptions,\n    setPageSize,\n    canPreviousPage,\n    canNextPage,\n    nextPage,\n    previousPage,\n    state: {\n      pageIndex,\n      pageSize,\n      selectedRowIds\n    },\n    prepareRow,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    setHiddenColumns\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0,\n      pageSize: perPage,\n      hiddenColumns: [\"id\", \"comm_method\", \"email\", \"phone\", \"Vendor_ID\", \"contact_name\", \"subtotal\", \"discount\", \"variant_id\", \"vendor_id\", \"shopify_id\"],\n      globalFilter: initialSearch\n    }\n  }, useGlobalFilter, useSortBy, usePagination, useRowSelect, hooks => {\n    if (checkbox) {\n      hooks.visibleColumns.push(columns => [// Let's make a column for selection\n      {\n        id: 'selection',\n        // The header can use the table's getToggleAllRowsSelectedProps method\n        // to render a checkbox\n        Header: ({\n          getToggleAllRowsSelectedProps\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...getToggleAllRowsSelectedProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this),\n        // The cell can use the individual row's getToggleRowSelectedProps method\n        // to the render a checkbox\n        Cell: ({\n          row\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, { ...row.getToggleRowSelectedProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, ...columns]);\n    }\n  });\n  useEffect(() => {\n    if (type === \"order\") {\n      setHiddenColumns(oldArray => [...oldArray, \"variant\"]);\n    } else if (type === \"order-variant\") {\n      var array = this && this.hiddenColumns ? [...this.hiddenColumns] : []; // make a separate copy of the array\n\n      var index = array.indexOf(\"variant\");\n\n      if (index !== -1) {\n        array.splice(index, 1);\n        setHiddenColumns(array);\n      }\n    }\n  }, []); // console.log(selectedRowIds)\n\n  function togglePopup(cell) {\n    // console.log('toggling')\n    // console.log(isPopup)\n    setIsPopup(!isPopup);\n\n    if (cell) {\n      setPopupData(cell);\n    } else {\n      // console.log('hereee')\n      // console.log(props)\n      reloadData(); // if (type === \"products\") {\n      //   reloadData()\n      // } \n    } // console.log(isPopup)\n    // console.log(cell)\n\n  }\n\n  function optionSelected(data, orderQuantity) {\n    // console.log('yalalalalidsh')\n    if (orderQuantity) {\n      console.log(orderQuantity);\n      console.log(data);\n      update(data, orderQuantity);\n    } else {\n      console.log(data);\n      update(data);\n    }\n  }\n\n  const results = page.length > 10 ? 10 : page.length;\n  const pageBtnStyle = {\n    backgroundColor: \"#EFEFEF\",\n    border: \"none\",\n    padding: \"5px 15px\",\n    margin: \"0 5px\",\n    borderRadius: \"5px\",\n    color: \"#1E384D\"\n  };\n  return (\n    /*#__PURE__*/\n    // apply the table props\n    _jsxDEV(\"div\", {\n      class: \"inventory-table\",\n      children: [search ? /*#__PURE__*/_jsxDEV(GlobalFilter, {\n        preGlobalFilteredRows: preGlobalFilteredRows,\n        globalFilter: state.globalFilter,\n        setGlobalFilter: setGlobalFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 14\n      }, this) : null, search ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"25px 0\",\n          color: 'rgba(0,0,0, 57%)'\n        },\n        children: [\"Showing the first \", results, \" results of \", rows.length, \" rows\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: // Loop over the header rows\n          headerGroups.map(headerGroup =>\n          /*#__PURE__*/\n          // Apply the header row props\n          _jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: // Loop over the headers in each row\n            headerGroup.headers.map(column =>\n            /*#__PURE__*/\n            // Apply the header cell props\n            _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: [// Render the header\n              column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"#76c32d\",\n                  fontSize: \"14px\"\n                },\n                children: column.isSorted ? column.isSortedDesc ? ' (high-low)' : ' (low-high)' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: page.map((row, i) => {\n            // Prepare the row for display\n            prepareRow(row);\n            return (\n              /*#__PURE__*/\n              // Apply the row props\n              _jsxDEV(\"tr\", { ...row.getRowProps(),\n                children: // Loop over the rows cells\n                row.cells.map(cell => {\n                  const stockStyle = {\n                    color: \"#1E384D\"\n                  };\n\n                  if (cell.column.id === \"stockLevel\" || cell.column.id === \"status\") {\n                    stockStyle.padding = \"5px\";\n                    stockStyle.borderRadius = \"5px\";\n                    stockStyle.color = \"white\";\n                    stockStyle.textAlign = \"center\";\n\n                    if (cell.value === \"Low\" || cell.value === \"submitted\") {\n                      stockStyle.backgroundColor = \"red\";\n                    } else if (cell.value === \"Medium\" || cell.value === \"fulfilled\") {\n                      stockStyle.backgroundColor = \"#FFD300\";\n                    } else {\n                      stockStyle.backgroundColor = \"#4CAF50\";\n                    }\n                  } else if (cell.column.id === \"submitted_date\" && cell.value === '01/01/1969 04:20AM') {\n                    console.log(cell.value);\n                    cell.value = '';\n                  } else if (cell.column.id === \"fulfilled_date\" && cell.value === '01/01/1969 04:20AM') {\n                    console.log(cell.value);\n                    cell.value = '';\n                    console.log(cell.value);\n                  } else if (cell.column.id === \"completed_date\" && cell.value === '01/01/1969 04:20AM') {\n                    console.log(cell.value);\n                    cell.value = '';\n                    console.log(cell.value);\n                    cell.row.values.completed_date = \"\";\n                    cell.row.original.completed_date = \"\";\n                  } // Apply the cell props\n\n\n                  return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                    onClick: () => popupEnabled ? togglePopup(cell) : null,\n                    onChange: () => type === \"order\" ? optionSelected(cell.row) : null,\n                    children: [\" \", console.log(cell), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: stockStyle,\n                      children: (cell.column.id === \"completed_date\" || cell.column.id === \"fulfilled_date\" || cell.column.id === \"submitted_date\") && cell.value === '01/01/1969 04:20AM' ? cell.row.original.attributes.completed_date = \"\" : cell.render('Cell')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this)\n            );\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"right\",\n          margin: \"20px 10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: pageBtnStyle,\n          onClick: () => previousPage(),\n          disabled: !canPreviousPage,\n          children: 'Previous'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          style: pageBtnStyle,\n          id: \"next-btn\",\n          onClick: () => nextPage(),\n          disabled: !canNextPage,\n          children: 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"select\", {\n          value: pageSize,\n          onChange: e => {\n            setPageSize(Number(e.target.value));\n          },\n          children: [5, 10, 20, 30, 40, 50].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: pageSize,\n            children: [\"Show \", pageSize]\n          }, pageSize, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), isPopup ? /*#__PURE__*/_jsxDEV(Popup, {\n        type: type,\n        user: user,\n        data: popupData,\n        toggle: () => togglePopup()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 20\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s3(Table, \"W1oiN9SoBzO8ASWO2KKwuZDLxu4=\", false, function () {\n  return [useTable];\n});\n\n_c2 = Table;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalFilter\");\n$RefreshReg$(_c2, \"Table\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/components/Table.js"],"names":["React","useState","useEffect","useTable","useAsyncDebounce","useGlobalFilter","usePagination","useSortBy","useRowSelect","searchIcon","Popup","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","value","setValue","onChange","undefined","searchStyle","border","borderRadius","margin","width","e","target","fontSize","padding","Table","columns","initialSearch","data","type","reloadData","search","perPage","popupEnabled","user","checkbox","update","removeItem","isPopup","setIsPopup","popupData","setPopupData","orderQuantity","setOrderQuantity","IndeterminateCheckbox","forwardRef","indeterminate","rest","ref","defaultRef","useRef","resolvedRef","current","getTableProps","getTableBodyProps","headerGroups","rows","state","page","pageOptions","setPageSize","canPreviousPage","canNextPage","nextPage","previousPage","pageIndex","pageSize","selectedRowIds","prepareRow","setHiddenColumns","initialState","hiddenColumns","hooks","visibleColumns","push","id","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","oldArray","array","index","indexOf","splice","togglePopup","cell","optionSelected","console","log","results","pageBtnStyle","backgroundColor","color","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","i","getRowProps","cells","stockStyle","textAlign","values","completed_date","original","getCellProps","attributes","Number"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport { useTable, useAsyncDebounce, useGlobalFilter, usePagination, useSortBy, useRowSelect } from \"react-table\"\nimport searchIcon from \"../images/search.png\"\nimport Popup from \"./Popup\"\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n    }) {\n    const count = preGlobalFilteredRows.length\n    const [value, setValue] = React.useState(globalFilter)\n    const onChange = useAsyncDebounce(value => {\n        setGlobalFilter(value || undefined)\n    }, 200)\n\n    const searchStyle = {\n        border: '1px solid rgba(30,56,77, 50%)',\n        borderRadius: '5px',\n\n    }\n    \n    return (\n    <div style={searchStyle}>\n        <img style={{margin: \"0 10px\", width: \"12px\"}} src={searchIcon} alt=\"search icon\" />\n        <input\n            value={value || \"\"}\n            onChange={e => {\n            setValue(e.target.value);\n            onChange(e.target.value);\n            }}\n            placeholder={`Search products...`}\n            style={{\n            fontSize: '1.1rem',\n            border: '0',\n            width: '80%',\n            padding: \"10px 0\"\n            }}\n        />\n        \n        </div>\n    )\n    }\n\n\nexport default function Table({columns, initialSearch, data, type, reloadData, search, perPage, popupEnabled, user, checkbox, update, removeItem}) {\n  // console.log(props)\\\n  // console.log(data)\n\n    const [isPopup, setIsPopup] = useState(false)\n    const [popupData, setPopupData] = useState({})\n    const [orderQuantity, setOrderQuantity] = useState(0)\n\n    const IndeterminateCheckbox = React.forwardRef(\n      ({ indeterminate, ...rest }, ref) => {\n        const defaultRef = React.useRef()\n        const resolvedRef = ref || defaultRef\n    \n        useEffect(() => {\n          resolvedRef.current.indeterminate = indeterminate\n        }, [resolvedRef, indeterminate])\n    \n        return (\n          <>\n            <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n          </>\n        )\n      }\n    )\n    \n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        state,\n        page,\n        pageOptions,\n        setPageSize,\n        canPreviousPage,\n        canNextPage,\n        nextPage,\n        previousPage,\n        state: { pageIndex, pageSize, selectedRowIds },\n        prepareRow,\n        preGlobalFilteredRows,\n        setGlobalFilter,\n        setHiddenColumns\n      } = useTable(\n          {\n              columns,\n              data,\n              initialState: {\n                pageIndex: 0, \n                pageSize: perPage,\n                hiddenColumns: [\"id\", \"comm_method\", \"email\", \"phone\", \"Vendor_ID\", \"contact_name\",\n                                \"subtotal\", \"discount\", \"variant_id\", \"vendor_id\", \"shopify_id\"],\n                globalFilter: initialSearch\n              }\n          },\n          useGlobalFilter,\n          useSortBy,\n          usePagination,\n          useRowSelect,\n          hooks => {\n            if (checkbox) {\n              hooks.visibleColumns.push(columns => [\n                // Let's make a column for selection\n                {\n                  id: 'selection',\n                  // The header can use the table's getToggleAllRowsSelectedProps method\n                  // to render a checkbox\n                  Header: ({ getToggleAllRowsSelectedProps }) => (\n                    <div>\n                      <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()}/>\n                    </div>\n                  ),\n                  // The cell can use the individual row's getToggleRowSelectedProps method\n                  // to the render a checkbox\n                  Cell: ({ row }) => (\n                    <div>\n                      <IndeterminateCheckbox {...row.getToggleRowSelectedProps()}/>\n                    </div>\n                  ),\n                },\n                ...columns,\n              ])\n            }\n            \n          }\n\n      )\n      \n      \n\n      useEffect(() => {\n        if (type === \"order\") {\n          setHiddenColumns(oldArray => [...oldArray, \"variant\"])\n          \n        } else if (type === \"order-variant\") {\n          var array = this && this.hiddenColumns ? [...this.hiddenColumns] : []; // make a separate copy of the array\n          var index = array.indexOf(\"variant\")\n          if (index !== -1) {\n              array.splice(index, 1);\n              setHiddenColumns(array);\n          }  \n        }\n    }, []);\n      \n\n\n      // console.log(selectedRowIds)\n      \n      \n      function togglePopup(cell) {\n        // console.log('toggling')\n        // console.log(isPopup)\n        setIsPopup(!isPopup)\n        if (cell) {\n            setPopupData(cell)\n        } else {\n          // console.log('hereee')\n          // console.log(props)\n          reloadData()\n          // if (type === \"products\") {\n          //   reloadData()\n          // } \n          \n\n        }   \n        // console.log(isPopup)\n        // console.log(cell)\n      }\n\n      function optionSelected(data, orderQuantity) {\n        // console.log('yalalalalidsh')\n        if (orderQuantity) {\n          console.log(orderQuantity)\n          console.log(data)\n          update(data, orderQuantity)\n        } else {\n          console.log(data)\n          update(data)\n        }\n      }\n\n      const results = page.length > 10 ? 10 : page.length\n\n      const pageBtnStyle = {\n        backgroundColor: \"#EFEFEF\", \n        border: \"none\", \n        padding: \"5px 15px\", \n        margin: \"0 5px\", \n        borderRadius: \"5px\", \n        color: \"#1E384D\"\n      }\n\n      return (\n    \n          // apply the table props\n        <div class=\"inventory-table\">\n          {search ? \n             <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={state.globalFilter}\n                setGlobalFilter={setGlobalFilter}\n              />\n              : null}\n       {search ?  <div style={{margin: \"25px 0\", color: 'rgba(0,0,0, 57%)'}}>\n            Showing the first {results} results of {rows.length} rows\n        </div> : null}\n      \n        <table {...getTableProps()}>\n          <thead>\n            \n            {// Loop over the header rows\n            headerGroups.map(headerGroup => (\n              \n              // Apply the header row props\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {// Loop over the headers in each row\n                headerGroup.headers.map(column => (\n                  \n                  // Apply the header cell props\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {// Render the header\n                    column.render('Header')}\n                    {/* Add a sort direction indicator */}\n                  <span style={{color: \"#76c32d\", fontSize: \"14px\"}}>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? ' (high-low)'\n                        : ' (low-high)'\n                      : ''}\n                  </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          {/* Apply the table body props */}\n          <tbody {...getTableBodyProps()}>\n            \n            {page.map((row, i) => {\n                // Prepare the row for display\n                \n                prepareRow(row)\n                \n                return (\n                    // Apply the row props\n                    <tr {...row.getRowProps()}>\n                      \n                    \n                    {// Loop over the rows cells\n                    \n                    row.cells.map(cell => {\n                        const stockStyle = {\n                            color: \"#1E384D\"\n                        } \n                        if (cell.column.id === \"stockLevel\" || cell.column.id === \"status\") {\n                            stockStyle.padding = \"5px\"\n                            stockStyle.borderRadius = \"5px\"\n                            stockStyle.color = \"white\"\n                            stockStyle.textAlign = \"center\"\n\n                            if (cell.value === \"Low\" || cell.value === \"submitted\") {\n                                stockStyle.backgroundColor = \"red\"\n                            } else if (cell.value === \"Medium\" || cell.value === \"fulfilled\") {\n                                stockStyle.backgroundColor = \"#FFD300\"\n                            } else {\n                                stockStyle.backgroundColor = \"#4CAF50\"\n                            }\n                        } else if (cell.column.id === \"submitted_date\" && cell.value ==='01/01/1969 04:20AM') {\n                          console.log(cell.value)\n                          cell.value = ''\n                        } else if (cell.column.id === \"fulfilled_date\" && cell.value === '01/01/1969 04:20AM') {\n                          console.log(cell.value)\n                          cell.value = ''\n                          console.log(cell.value)\n                        } else if (cell.column.id === \"completed_date\" && cell.value === '01/01/1969 04:20AM') {\n                          console.log(cell.value)\n                          cell.value = ''\n                          console.log(cell.value)\n                          cell.row.values.completed_date = \"\"\n                          cell.row.original.completed_date = \"\"\n                        }\n                        // Apply the cell props\n                        return (\n                        <td {...cell.getCellProps()} onClick={() => popupEnabled ? togglePopup(cell) : null} onChange={() => type === \"order\" ? optionSelected(cell.row) : null}> {/*  */}\n                        {console.log(cell)}\n                          \n                          \n                            <div style={stockStyle}>\n                              \n                            {// Render the cell contents\n                            \n                            }\n                            {(cell.column.id === \"completed_date\" || cell.column.id === \"fulfilled_date\" || cell.column.id === \"submitted_date\") && cell.value === '01/01/1969 04:20AM' ? cell.row.original.attributes.completed_date=\"\" : cell.render('Cell')}\n                            {/* {cell.column.id === \"orderQuantity\" && type===\"order-variant\" ? <input type=\"text\" placeholder=\"0\" onChange={(e) => optionSelected(cell.row.values, e.target.value) }/> : null}\n                            {cell.column.id === \"remove\" && type===\"order-variant\" ? <span className=\"close\" style={{color: \"red\"}} onClick={() =>  removeItem(cell.row)}>&times;    </span> : null} */}\n                            </div>\n                        </td>\n                        )\n                    })}\n                    </tr>\n                )\n                })}           \n          </tbody>\n        </table>\n        <div style={{textAlign: \"right\", margin: \"20px 10px\"}}>\n            <button style={pageBtnStyle} onClick={() => previousPage()} disabled={!canPreviousPage}>\n            {'Previous'}\n            </button>{' '}\n            <button style={pageBtnStyle} id=\"next-btn\" onClick={() => nextPage()} disabled={!canNextPage}>\n            {'Next'}\n            </button>{' '}\n            <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{' '}\n          <select\n          value={pageSize}\n          onChange={e => {\n            setPageSize(Number(e.target.value))\n          }}\n        >\n          {[5, 10, 20, 30, 40, 50].map(pageSize => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n        </div>\n        {isPopup ? <Popup type={type} user={user} data={popupData} toggle={() => togglePopup()} /> : null}\n        </div> \n      )\n}\n\n"]},"metadata":{},"sourceType":"module"}