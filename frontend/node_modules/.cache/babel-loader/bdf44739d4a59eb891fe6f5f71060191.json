{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Vendors/VendorPopup.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport \"../styles/Popup.css\";\nimport Table from \"../components/Table\";\nimport ProgressBar from \"./ProgressBar\";\nimport * as router from \"./vendorAPI\";\nexport default function VendorPopup(props) {\n  _s();\n\n  const [percentage, setPercentage] = useState(0);\n  const [btnText, setBtnText] = useState(\"Order\");\n  const [extraOptionText, setExtraOptionText] = useState(\"\");\n  const [isLoading, setLoading] = useState(true);\n  const [editColor, setEditColor] = useState(\"#76c32d\");\n  const [dataToUpdate, setDataToUpdate] = useState([]);\n  const [variantsToUpdate, setVariantsToUpdate] = useState([]);\n  const [data, setData] = useState([]);\n  const [commMethods, setCommMethods] = useState([]);\n  const [variantData, setVariantData] = useState([]);\n  const [orderSteps, setOrderSteps] = useState(4);\n  const [isOrdering, setOrdering] = useState(false); // const [nextPage, setNextPage] = useState(false)\n  // const [reviewOrder, setReviewOrder] = useState(false)\n\n  const [orderState, setOrderState] = useState(null); // const [isOrderItemsHidden, setOrderItemsHidden] = useState(true)\n  // const [isExtraOptionHidden, setExtraOptionHidden] = useState(true)\n\n  const [isManualOrderBtnHidden, setManualOrderBtnHidden] = useState(true); // const commMethodPlain = props.data.row.values.comm_method\n  // var commMethod = commMethodPlain && commMethodPlain.includes(',') ? commMethodPlain.split(',')[0] : commMethodPlain\n\n  console.log(dataToUpdate);\n  console.log(variantData);\n  const phone = props.values.phone ? `${props.values.phone.slice(0, 3)}-${props.values.phone.slice(3, 6)}-${props.values.phone.slice(6)}` : \"\";\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  const columns = useMemo(() => [{\n    Header: 'ID',\n    accessor: 'id',\n    // Product ID\n    sortDescFirst: true\n  }, {\n    Header: 'Product',\n    accessor: 'title',\n    sortDescFirst: true\n  }, {\n    Header: 'Variant',\n    accessor: 'variant',\n    sortDescFirst: true,\n    show: true\n  }, {\n    Header: 'Quantity',\n    accessor: 'quantity',\n    sortDescFirst: true\n  }, {\n    Header: 'Recent Purchases',\n    accessor: 'purchases',\n    sortDescFirst: true\n  }, {\n    Header: 'Stock Level',\n    accessor: 'stockLevel',\n    disableSortBy: true\n  }, {\n    Header: 'Recent Order',\n    accessor: 'recentOrder',\n    disableSortBy: true\n  }], []);\n\n  function getData() {\n    setLoading(true);\n    router.loadVendor(props.values.id).then(data => {\n      if (data) {\n        setData(data.products); // sets the product data for the table\n\n        setCommMethods(data.commMethods); // if (data.commMethods.length === 1) { // only 1 communication method\n        //     setOrderSteps(3)\n        // }\n        // const orderSteps = commMethodPlain && (commMethodPlain.includes(\"call\") || commMethodPlain.includes(\"website\") || commMethodPlain.includes(',')) ? 4 : 3\n        // const orderSteps = commMethods.length === 1 ? \n\n        console.log(data);\n        setLoading(false);\n      }\n    });\n  }\n\n  useEffect(() => {\n    getData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function chooseProducts() {\n    // Start Order - change to page where we choose which products to order\n    setOrdering(true);\n    setBtnText(\"Next\"); // setOrderItemsHidden(false)\n\n    setOrderState(\"Choose Products\");\n    setPercentage(100 / orderSteps);\n    setVariantData([]);\n    setDataToUpdate([]);\n    setVariantsToUpdate([]);\n  }\n\n  function chooseVariants() {\n    // Going to next page of ordering after chose products to choose variants and quantities\n    if (dataToUpdate.length > 0) {\n      // Only load variant data if a product was selected\n      setLoading(true);\n      setPercentage(100 / orderSteps * 2); // update progress bar\n      // setNextPage(true)\n\n      setOrderState(\"Choose Variants/Qty\");\n      console.log(dataToUpdate);\n      router.loadOrderProducts(variantsToUpdate).then(data => {\n        if (data) {\n          setLoading(false);\n          setVariantData(data);\n          setBtnText(\"Review\");\n        }\n      });\n    } else {\n      alert(\"No products selected\");\n    }\n  }\n\n  function chooseCommunication() {\n    // Going to next page to review order and submit or use communication method\n    // setNextPage(false)\n    // setReviewOrder(true)\n    setPercentage(100 / orderSteps * 3); // update progress bar\n\n    setManualOrderBtnHidden(false);\n    setOrderState(\"Choose Communication\"); // if (commMethods.length > 1) {\n    //     // Multiple communicatoin methods\n    //     // setExtraOptionHidden(false)\n    //     // setExtraOptionText(`${capitalizeFirstLetter(commMethodPlain.split(',')[1])} ${commMethodPlain.split(',')[1] === 'call' ? phone : \"\"}`)\n    //     // setBtnText(`${capitalizeFirstLetter(commMethod)} ${commMethod === 'call' ? phone : \"\"}`)\n    //     // setOrderState(\"Multiple Vendors\")   \n    // } else {\n    //     // Only 1 vendor (as it is for the vast majority)\n    //     // if (commMethodPlain && commMethodPlain.includes(\"website\")) {        \n    //     //     setBtnText(\"Order on website\")\n    //     //     setOrderState(\"Website Order\")\n    //     // } else if (commMethodPlain && commMethodPlain.includes('call')) {\n    //     //     setBtnText(`Call ${phone}`)\n    //     //     setOrderState(\"Calling Order\")         \n    //     // } else {\n    //         setBtnText(\"Submit\")\n    //         setEditColor(\"#26B1FF\")\n    //         setOrderState(\"Review Order\")\n    // //     }\n    // }\n  }\n\n  function reviewOrder() {\n    setOrderState(\"Review Order\");\n    setBtnText(\"Submit\");\n    setEditColor(\"#26B1FF\");\n    setManualOrderBtnHidden(true);\n    setPercentage(100 / orderSteps * 4); // update progress bar\n  }\n\n  function submitOrder() {\n    // Send message and save order\n    // commMethodPlain.includes(',') ? save() : sendMessage() \n    // Reset order data\n    resetOrder();\n  }\n\n  function resetOrder() {\n    setOrderState(null);\n    setOrdering(false);\n    setDataToUpdate([]); // empty dataToUpdate from any previous orders\n\n    setVariantsToUpdate([]); // empty variantsToUpdate from any previous orders\n\n    setPercentage(0);\n    setEditColor(\"#76c32d\");\n    setBtnText(\"Order\");\n  }\n\n  function orderBtnClicked() {\n    if (!isOrdering) {\n      chooseProducts();\n    } else if (orderState === \"Choose Products\") {\n      chooseVariants();\n    } else if (orderState === \"Choose Variants/Qty\") {\n      chooseCommunication();\n    } else if (orderState === \"Choose Communication\") {\n      reviewOrder(); // } else if (orderState === \"Website Order\") {\n      //    window.open(\"https://amazon.com\",'_blank') // NEED TO CHANGE\n      //    setBtnText(\"Submit\")\n      //    setEditColor(\"#26B1FF\")\n      //    setManualOrderBtnHidden(true)\n      //    setOrderState(\"Review Order\")\n      //    setPercentage(100/orderSteps * 4)\n      // } else if (orderState === \"Calling Order\") {\n      //     setPercentage(100/orderSteps * 4)\n      //     setBtnText(\"Submit\")\n      //     setManualOrderBtnHidden(true)\n      //     setEditColor(\"#26B1FF\")\n      //     setOrderState(\"Review Order\")\n      // } else if (orderState === \"Multiple Vendors\") {\n      // One of the 2 buttons was clicked\n      // const method = commMethodPlain.split(',')[btnIndex]\n      // if (method === \"call\") {\n      //     // Clicked on the Call button so now need to submit the order\n      //     setPercentage(100/orderSteps * 4)\n      //     setBtnText(\"Submit\")\n      //     setEditColor(\"#26B1FF\")\n      //     setManualOrderBtnHidden(false)\n      //     setOrderState(\"Review Order\")\n      //     setExtraOptionHidden(true)\n      // } else if (method === \"website\") {\n      //     // Clicked on Website so now need to submit the order\n      //     window.open(\"https://amazon.com\",'_blank') // NEED TO CHANGE\n      //     setBtnText(\"Submit\")\n      //     setEditColor(\"#26B1FF\")\n      //     setManualOrderBtnHidden(false)\n      //     setOrderState(\"Review Order\")\n      //     setExtraOptionHidden(true)\n      //     setPercentage(100/orderSteps * 4)\n      // } else {\n      //     // Clicked on Email or Text so need to send the message which will then save the order\n      //     sendMessage(btnIndex)\n      //     setPercentage(100/orderSteps * 4)\n      //     setOrderState(null)\n      //     setOrdering(false)\n      // }\n    } else if (orderState === \"Review Order\") {\n      submitOrder();\n    }\n  }\n\n  function backBtnClicked() {\n    // const phone = `${props.values.phone.slice(0,3)}-${props.values.phone.slice(3,6)}-${props.values.phone.slice(6,)}`\n    // const orderSteps = commMethod === \"text\" || commMethod === \"email\" ? 4 : 5\n    if (orderState === \"Choose Products\") {\n      resetOrder(); // setOrdering(false)\n      // setBtnText(\"Order\")\n      // // setOrderItemsHidden(true)\n      // setOrderState(null)\n      // setPercentage(0)\n    } else if (orderState === \"Choose Variants/Qty\") {\n      chooseProducts();\n    } else if (orderState === \"Choose Communication\") {\n      // chooseVariants()\n      setPercentage(100 / orderSteps * 2); // update progress bar\n\n      setOrderState(\"Choose Variants/Qty\");\n      setBtnText(\"Review\"); // setNextPage(false)\n      // setOrderState(\"Choose Products\")\n      // setBtnText(\"Next\")\n      // setPercentage(100/orderSteps)\n      // } else if (orderState === \"Website Order\" || orderState === \"Calling Order\" || orderState === \"Multiple Vendors\") {\n      //     // setNextPage(true)\n      //     // setReviewOrder(false)\n      //     setBtnText(\"Review\")\n      //     setOrderState(\"Choose Variants/Qty\")\n      //     // setExtraOptionHidden(true)\n      //     setPercentage(100/orderSteps * 2) // update progress bar\n      //     setEditColor(\"#76c32d\")\n      //     setManualOrderBtnHidden(true)\n    } else if (orderState === \"Review Order\") {\n      chooseCommunication(); // setPercentage(100/orderSteps * 3) // update progress bar\n      // setEditColor(\"#76c32d\")\n      // setManualOrderBtnHidden(false)\n      // if (commMethodPlain && commMethodPlain.includes(',')) {\n      //     // Multiple vendors\n      //     setExtraOptionHidden(false)\n      //     setExtraOptionText(`${capitalizeFirstLetter(commMethodPlain.split(',')[1])} ${commMethodPlain.split(',')[1] === 'call' ? phone : \"\"}`)\n      //     setBtnText(`${capitalizeFirstLetter(commMethod)} ${commMethod === 'call' ? phone : \"\"}`)\n      //     setOrderState(\"Multiple Vendors\")\n      // } else {\n      //     // Only 1 vendor (as it is for the vast majority)\n      //     if (commMethodPlain && commMethodPlain.includes(\"website\")) {        \n      //         setBtnText(\"Order on website\")\n      //         setOrderState(\"Website Order\")\n      //     } else if (commMethodPlain && commMethodPlain.includes('call')) {\n      //         setBtnText(`Call ${phone}`)\n      //         setOrderState(\"Calling Order\")         \n      //     } else {\n      //         setBtnText(\"Review\")\n      //         setReviewOrder(false)\n      //         setOrderState(\"Choose Variants/Qty\")\n      //         setPercentage(100/orderSteps * 2) // update progress bar\n      //         setNextPage(true)\n      //     }\n      // }\n    }\n  } // function sendMessage(btnIndex) {\n  //     console.log(commMethod)\n  //     if (btnIndex) {\n  //         commMethod = commMethodPlain.split(',')[btnIndex]\n  //     }\n  //     commMethod = commMethod.trim()\n  //     console.log(commMethod)\n  //     if (commMethod === \"text\") {\n  //         router.sendText(props.values.contact_name, dataToUpdate, \"4848885912\").then(data => { // NEED TO CHANGE\n  //             save()\n  //         })\n  //     }\n  //     else if (commMethod === \"email\") {\n  //         router.sendEmail(props.values.contact_name, dataToUpdate, \"stepan.cannuscio@gmail.com\").then(data => { // NEED TO CHANGE\n  //             save()\n  //         })\n  //     } else if (commMethod === \"website\" || commMethod === \"call\") {\n  //         save()\n  //     } else {\n  //         alert(\"No communication method for this vendor! Contact Step for help\")\n  //     }\n  // }\n\n\n  function save() {\n    const order = {\n      vendor: props.data.row.values.id,\n      subtotal: 0,\n      status: \"submitted\"\n    };\n    const orderItems = [];\n    dataToUpdate.forEach(item => {\n      if (item.quantity !== 0 || item.quantity !== \"\") {\n        order.subtotal += item.subtotal;\n        orderItems.push({\n          variant: item.variantId,\n          subtotal: item.subtotal,\n          // this is the subtotal including multiple qtys\n          quantity: item.quantity\n        });\n      }\n    });\n\n    if (dataToUpdate.length > 0) {\n      router.saveOrder(order, orderItems, props.user.id).then(data => {\n        if (data === \"Success\") {\n          props.toggle();\n        } else {}\n      });\n    }\n  }\n\n  function rowSelected(rowData, isAllSelected) {\n    if (rowData === \"all\") {\n      setDataToUpdate([]); // clear before adding all rows to the array to update\n\n      setVariantsToUpdate([]);\n\n      if (!isAllSelected) {\n        // this means all are selected (it's opposite)\n        rowData.forEach(item => {\n          setDataToUpdate(oldArray => [...oldArray, item]);\n          setVariantsToUpdate(oldArray => [...oldArray, item.id]);\n        });\n      }\n    } else {\n      console.log(rowData);\n      console.log(dataToUpdate);\n\n      if (!rowData.isSelected) {\n        // this means the row is selected (it's opposite)\n        setDataToUpdate(oldArray => [...oldArray, rowData.values]);\n        setVariantsToUpdate(oldArray => [...oldArray, rowData.values.id]);\n      } else {\n        // remove from arrays if you unselect it\n        var array = [...dataToUpdate]; // make a separate copy of the array\n\n        var index = array.indexOf(rowData.values.id);\n\n        if (index !== -1) {\n          array.splice(index, 1);\n          setDataToUpdate(array);\n        }\n\n        var array2 = [...variantsToUpdate]; // make a separate copy of the array\n\n        var index2 = array2.indexOf(rowData.values.id);\n\n        if (index2 !== -1) {\n          array2.splice(index2, 1);\n          setDataToUpdate(array2);\n        }\n      }\n    }\n  }\n\n  function remove(data, element) {\n    variantData.forEach((item, index) => {\n      if (item.variant_id === element.variant_id) {\n        var array = [...data]; // make a separate copy of the array\n\n        if (index !== -1) {\n          array.splice(index, 1);\n          setVariantData(array);\n        }\n      }\n    });\n\n    if (dataToUpdate.length > 0) {\n      dataToUpdate.forEach((item, index) => {\n        if (item.variantId === element.variant_id) {\n          var array = [...dataToUpdate]; // make a separate copy of the array\n\n          if (index !== -1) {\n            array.splice(index, 1);\n            setDataToUpdate(array);\n          }\n        }\n      });\n    }\n  }\n\n  function addOrderItem(data, orderQuantity) {\n    const newData = {\n      productTitle: data.title,\n      productId: data.id,\n      variantTitle: data.variant,\n      variantId: data.variant_id,\n      cost: data.cost,\n      quantity: orderQuantity,\n      subtotal: Math.round(data.cost * orderQuantity * 100, 2) / 100\n    };\n\n    if (variantsToUpdate.includes(data.variant_id)) {\n      // Item is in array so let's update it\n      dataToUpdate.forEach((item, index) => {\n        // console.log(item)\n        if (item.variantId === data.variant_id) {\n          var array = [...dataToUpdate]; // make a separate copy of the array\n\n          if (index !== -1) {\n            array.splice(index, 1);\n            setDataToUpdate(array);\n          }\n\n          console.log(newData.quantity);\n\n          if (newData.quantity !== \"0\" && newData.quantity !== 0 && newData.quantity !== \"\") {\n            console.log('are we calling here');\n            setDataToUpdate(oldArray => [...oldArray, newData]);\n          } else {\n            var array = [...variantsToUpdate]; // make a separate copy of the array\n\n            if (index !== -1) {\n              array.splice(index, 1);\n              setVariantsToUpdate(array);\n            }\n          }\n        }\n      });\n    } else {\n      if (newData.quantity !== \"0\" || newData.quantity !== \"\") {\n        setVariantsToUpdate(oldArray => [...oldArray, data.variant_id]);\n        setDataToUpdate(oldArray => [...oldArray, newData]);\n      }\n    }\n  }\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  function manualOrderBtnClicked() {\n    // if (commMethodPlain && commMethodPlain.includes(',')) {\n    setManualOrderBtnHidden(true);\n    setBtnText(\"Submit\");\n    setEditColor(\"#26B1FF\");\n    setOrderState(\"Review Order\"); // setReviewOrder(true)\n    // setExtraOptionHidden(true)\n\n    setPercentage(100 / orderSteps * 4); // update progress bar\n    // } else {\n    // }\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-content\",\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        percentage: percentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => props.toggle(),\n        children: \"\\xD7    \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data[0] ? data[0].name : \"No Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Products: \", props.values.products]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Low Products: \", props.values.low_products]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Contact Name: \", props.values.contact_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", props.values.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone: \", props.values.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 17\n      }, this), isOrdering ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backBtnClicked,\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: \"grey\"\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 31\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        hidden: orderState === \"Choose Communication\",\n        onClick: () => orderBtnClicked(),\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: editColor\n        },\n        children: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 17\n      }, this), commMethods.map((method, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          hidden: orderState !== \"Choose Communication\",\n          onClick: () => orderBtnClicked(),\n          className: \"edit-btn\",\n          style: {\n            backgroundColor: \"#76c32d\"\n          },\n          children: method.method\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        hidden: isManualOrderBtnHidden,\n        onClick: manualOrderBtnClicked,\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: \"orange\"\n        },\n        children: \"Manual Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 13\n    }, this), isOrdering ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: orderState === \"Choose Variants/Qty\" ? /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Variant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Current Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Recent Purchases\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Stock Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Cost/unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Recent Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Order Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: variantData.map((variant, index) => {\n              var orderQuantity = 0;\n              dataToUpdate.forEach(item => {\n                if (item.variantId === variant.variant_id) {\n                  orderQuantity = item.quantity;\n                }\n              });\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.variant\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.purchases\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.stockLevel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatter.format(variant.cost)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.recentOrder\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"0\",\n                    style: {\n                      fontSize: \"16px\"\n                    },\n                    value: orderQuantity,\n                    onChange: e => {\n                      addOrderItem(variant, e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 594,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"close\",\n                    style: {\n                      color: \"red\"\n                    },\n                    onClick: () => remove(variantData, variant),\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 597,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 21\n        }, this) : [\"Choose Communication\", \"Review Order\", \"Submit Order\"].includes(orderState) ? /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Variant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Cost/unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Subtotal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: dataToUpdate.map((order_item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order_item.productTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order_item.variantTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order_item.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatter.format(order_item.cost)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatter.format(order_item.subtotal)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 37\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data,\n          search: false,\n          type: \"order\",\n          checkbox: true,\n          popupEnabled: false,\n          perPage: 5,\n          update: (data, isAllSelected) => rowSelected(data, isAllSelected)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data,\n      type: \"order\",\n      search: false,\n      popupEnabled: false,\n      perPage: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 534,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VendorPopup, \"eFkVpPMqItEpBgsqe0MQS0dRwxs=\");\n\n_c = VendorPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"VendorPopup\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Vendors/VendorPopup.js"],"names":["useState","useEffect","useMemo","Table","ProgressBar","router","VendorPopup","props","percentage","setPercentage","btnText","setBtnText","extraOptionText","setExtraOptionText","isLoading","setLoading","editColor","setEditColor","dataToUpdate","setDataToUpdate","variantsToUpdate","setVariantsToUpdate","data","setData","commMethods","setCommMethods","variantData","setVariantData","orderSteps","setOrderSteps","isOrdering","setOrdering","orderState","setOrderState","isManualOrderBtnHidden","setManualOrderBtnHidden","console","log","phone","values","slice","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","columns","Header","accessor","sortDescFirst","show","disableSortBy","getData","loadVendor","id","then","products","chooseProducts","chooseVariants","length","loadOrderProducts","alert","chooseCommunication","reviewOrder","submitOrder","resetOrder","orderBtnClicked","backBtnClicked","save","order","vendor","row","subtotal","status","orderItems","forEach","item","quantity","push","variant","variantId","saveOrder","user","toggle","rowSelected","rowData","isAllSelected","oldArray","isSelected","array","index","indexOf","splice","array2","index2","remove","element","variant_id","addOrderItem","orderQuantity","newData","productTitle","title","productId","variantTitle","cost","Math","round","includes","capitalizeFirstLetter","string","charAt","toUpperCase","manualOrderBtnClicked","name","low_products","contact_name","email","backgroundColor","map","method","purchases","stockLevel","format","recentOrder","fontSize","e","target","value","color","order_item"],"mappings":"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","sourcesContent":["import {useState, useEffect, useMemo} from \"react\"\nimport \"../styles/Popup.css\"\nimport Table from \"../components/Table\"\nimport ProgressBar from \"./ProgressBar\"\nimport * as router from \"./vendorAPI\"\n\nexport default function VendorPopup(props) {\n\n    const [percentage, setPercentage] = useState(0)\n    const [btnText, setBtnText] = useState(\"Order\")\n    const [extraOptionText, setExtraOptionText] = useState(\"\")\n    const [isLoading, setLoading] = useState(true)\n    const [editColor, setEditColor] = useState(\"#76c32d\")\n\n    const [dataToUpdate, setDataToUpdate] = useState([])\n    const [variantsToUpdate, setVariantsToUpdate] = useState([])\n    const [data, setData] = useState([])\n    const [commMethods, setCommMethods] = useState([])\n    const [variantData, setVariantData] = useState([])\n\n    const [orderSteps, setOrderSteps] = useState(4)\n\n    const [isOrdering, setOrdering] = useState(false)\n    // const [nextPage, setNextPage] = useState(false)\n    // const [reviewOrder, setReviewOrder] = useState(false)\n    const [orderState, setOrderState] = useState(null)\n    // const [isOrderItemsHidden, setOrderItemsHidden] = useState(true)\n    // const [isExtraOptionHidden, setExtraOptionHidden] = useState(true)\n    const [isManualOrderBtnHidden, setManualOrderBtnHidden] = useState(true)\n\n    // const commMethodPlain = props.data.row.values.comm_method\n    // var commMethod = commMethodPlain && commMethodPlain.includes(',') ? commMethodPlain.split(',')[0] : commMethodPlain\n\n    console.log(dataToUpdate)\n    console.log(variantData)\n\n\n    const phone = props.values.phone ? `${props.values.phone.slice(0,3)}-${props.values.phone.slice(3,6)}-${props.values.phone.slice(6,)}` : \"\"\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0\n      })\n\n    const columns = useMemo(\n        () => [\n        {\n            Header: 'ID',\n            accessor: 'id', // Product ID\n            sortDescFirst: true\n            },\n          {\n            Header: 'Product',\n            accessor: 'title',\n            sortDescFirst: true\n          },\n          {\n            Header: 'Variant',\n            accessor: 'variant',\n            sortDescFirst: true,\n            show: true\n          },\n          {\n            Header: 'Quantity',\n            accessor: 'quantity',\n            sortDescFirst: true,\n          },\n          {\n            Header: 'Recent Purchases',\n            accessor: 'purchases',\n            sortDescFirst: true,\n          },\n          {\n            Header: 'Stock Level',\n            accessor: 'stockLevel',\n            disableSortBy: true\n          },\n          {\n            Header: 'Recent Order',\n            accessor: 'recentOrder',\n            disableSortBy: true\n          },\n        ],\n        []\n    )\n\n    function getData() {\n        setLoading(true)\n        router.loadVendor(props.values.id).then(data => {\n            if (data) {\n                setData(data.products) // sets the product data for the table\n                setCommMethods(data.commMethods)\n\n                // if (data.commMethods.length === 1) { // only 1 communication method\n                //     setOrderSteps(3)\n                // }\n\n                // const orderSteps = commMethodPlain && (commMethodPlain.includes(\"call\") || commMethodPlain.includes(\"website\") || commMethodPlain.includes(',')) ? 4 : 3\n                // const orderSteps = commMethods.length === 1 ? \n\n                console.log(data)\n                setLoading(false)\n            }\n        })\n    }\n\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    function chooseProducts() {\n        // Start Order - change to page where we choose which products to order\n        setOrdering(true)\n        setBtnText(\"Next\")\n        // setOrderItemsHidden(false)\n        setOrderState(\"Choose Products\")\n        setPercentage(100/orderSteps)\n\n        setVariantData([])\n        setDataToUpdate([])\n        setVariantsToUpdate([])\n    }\n\n    function chooseVariants() {\n        // Going to next page of ordering after chose products to choose variants and quantities\n\n        if (dataToUpdate.length > 0) {\n            // Only load variant data if a product was selected\n            setLoading(true)\n            setPercentage(100/orderSteps * 2) // update progress bar\n            // setNextPage(true)\n            setOrderState(\"Choose Variants/Qty\")\n\n            console.log(dataToUpdate)\n           \n            router.loadOrderProducts(variantsToUpdate).then(data => {\n            \n                if (data) {\n                    setLoading(false)\n                    setVariantData(data)\n                    setBtnText(\"Review\")\n                }\n            })\n        } else {\n            alert(\"No products selected\")\n        }\n       \n    }\n\n    function chooseCommunication() {\n\n        // Going to next page to review order and submit or use communication method\n        // setNextPage(false)\n        // setReviewOrder(true)\n        setPercentage(100/orderSteps * 3) // update progress bar\n        setManualOrderBtnHidden(false)\n        setOrderState(\"Choose Communication\")\n        \n\n        // if (commMethods.length > 1) {\n        //     // Multiple communicatoin methods\n        //     // setExtraOptionHidden(false)\n        //     // setExtraOptionText(`${capitalizeFirstLetter(commMethodPlain.split(',')[1])} ${commMethodPlain.split(',')[1] === 'call' ? phone : \"\"}`)\n        //     // setBtnText(`${capitalizeFirstLetter(commMethod)} ${commMethod === 'call' ? phone : \"\"}`)\n        //     // setOrderState(\"Multiple Vendors\")   \n        // } else {\n        //     // Only 1 vendor (as it is for the vast majority)\n        //     // if (commMethodPlain && commMethodPlain.includes(\"website\")) {        \n        //     //     setBtnText(\"Order on website\")\n        //     //     setOrderState(\"Website Order\")\n        //     // } else if (commMethodPlain && commMethodPlain.includes('call')) {\n        //     //     setBtnText(`Call ${phone}`)\n        //     //     setOrderState(\"Calling Order\")         \n        //     // } else {\n        //         setBtnText(\"Submit\")\n        //         setEditColor(\"#26B1FF\")\n                \n        //         setOrderState(\"Review Order\")\n        // //     }\n        // }\n    }\n\n    function reviewOrder() {\n        setOrderState(\"Review Order\")\n        setBtnText(\"Submit\")\n        setEditColor(\"#26B1FF\")\n        setManualOrderBtnHidden(true)\n        setPercentage(100/orderSteps * 4) // update progress bar\n    }\n\n    function submitOrder() {\n        // Send message and save order\n        // commMethodPlain.includes(',') ? save() : sendMessage() \n        \n        // Reset order data\n        resetOrder()\n     \n    }\n\n    function resetOrder() {\n        setOrderState(null)\n        setOrdering(false)\n        setDataToUpdate([]) // empty dataToUpdate from any previous orders\n        setVariantsToUpdate([]) // empty variantsToUpdate from any previous orders\n        setPercentage(0)\n        setEditColor(\"#76c32d\")\n        setBtnText(\"Order\")\n    }\n\n\n    function orderBtnClicked() {\n        \n        if (!isOrdering) {\n            \n            chooseProducts()\n\n        } else if (orderState === \"Choose Products\") {\n\n            chooseVariants()\n            \n        } else if (orderState === \"Choose Variants/Qty\") {\n            \n            chooseCommunication()\n\n        } else if (orderState === \"Choose Communication\") {\n\n            reviewOrder()\n         \n        // } else if (orderState === \"Website Order\") {\n        //    window.open(\"https://amazon.com\",'_blank') // NEED TO CHANGE\n        //    setBtnText(\"Submit\")\n        //    setEditColor(\"#26B1FF\")\n        //    setManualOrderBtnHidden(true)\n        //    setOrderState(\"Review Order\")\n        //    setPercentage(100/orderSteps * 4)\n        // } else if (orderState === \"Calling Order\") {\n        //     setPercentage(100/orderSteps * 4)\n        //     setBtnText(\"Submit\")\n        //     setManualOrderBtnHidden(true)\n        //     setEditColor(\"#26B1FF\")\n        //     setOrderState(\"Review Order\")\n        // } else if (orderState === \"Multiple Vendors\") {\n            // One of the 2 buttons was clicked\n            // const method = commMethodPlain.split(',')[btnIndex]\n\n            // if (method === \"call\") {\n            //     // Clicked on the Call button so now need to submit the order\n            //     setPercentage(100/orderSteps * 4)\n            //     setBtnText(\"Submit\")\n            //     setEditColor(\"#26B1FF\")\n            //     setManualOrderBtnHidden(false)\n            //     setOrderState(\"Review Order\")\n            //     setExtraOptionHidden(true)\n            // } else if (method === \"website\") {\n            //     // Clicked on Website so now need to submit the order\n            //     window.open(\"https://amazon.com\",'_blank') // NEED TO CHANGE\n            //     setBtnText(\"Submit\")\n            //     setEditColor(\"#26B1FF\")\n            //     setManualOrderBtnHidden(false)\n            //     setOrderState(\"Review Order\")\n            //     setExtraOptionHidden(true)\n            //     setPercentage(100/orderSteps * 4)\n            // } else {\n            //     // Clicked on Email or Text so need to send the message which will then save the order\n            //     sendMessage(btnIndex)\n            //     setPercentage(100/orderSteps * 4)\n            //     setOrderState(null)\n            //     setOrdering(false)\n            // }\n        }  else if (orderState === \"Review Order\") {\n\n            submitOrder()\n        \n        } \n    }\n    \n    function backBtnClicked() {\n        // const phone = `${props.values.phone.slice(0,3)}-${props.values.phone.slice(3,6)}-${props.values.phone.slice(6,)}`\n        // const orderSteps = commMethod === \"text\" || commMethod === \"email\" ? 4 : 5\n        if (orderState === \"Choose Products\") {\n            resetOrder()\n            // setOrdering(false)\n            // setBtnText(\"Order\")\n            // // setOrderItemsHidden(true)\n            // setOrderState(null)\n            // setPercentage(0)\n        } else if (orderState === \"Choose Variants/Qty\") {\n            chooseProducts()\n        } else if (orderState === \"Choose Communication\") {\n            // chooseVariants()\n\n            setPercentage(100/orderSteps * 2) // update progress bar\n            setOrderState(\"Choose Variants/Qty\")\n            setBtnText(\"Review\")\n\n \n            // setNextPage(false)\n            // setOrderState(\"Choose Products\")\n            // setBtnText(\"Next\")\n            // setPercentage(100/orderSteps)\n        \n        // } else if (orderState === \"Website Order\" || orderState === \"Calling Order\" || orderState === \"Multiple Vendors\") {\n        //     // setNextPage(true)\n        //     // setReviewOrder(false)\n        //     setBtnText(\"Review\")\n        //     setOrderState(\"Choose Variants/Qty\")\n        //     // setExtraOptionHidden(true)\n        //     setPercentage(100/orderSteps * 2) // update progress bar\n        //     setEditColor(\"#76c32d\")\n        //     setManualOrderBtnHidden(true)\n        } else if (orderState === \"Review Order\") {\n            chooseCommunication()\n            // setPercentage(100/orderSteps * 3) // update progress bar\n            // setEditColor(\"#76c32d\")\n            // setManualOrderBtnHidden(false)\n            // if (commMethodPlain && commMethodPlain.includes(',')) {\n            //     // Multiple vendors\n            //     setExtraOptionHidden(false)\n            //     setExtraOptionText(`${capitalizeFirstLetter(commMethodPlain.split(',')[1])} ${commMethodPlain.split(',')[1] === 'call' ? phone : \"\"}`)\n            //     setBtnText(`${capitalizeFirstLetter(commMethod)} ${commMethod === 'call' ? phone : \"\"}`)\n            //     setOrderState(\"Multiple Vendors\")\n                \n            // } else {\n            //     // Only 1 vendor (as it is for the vast majority)\n            //     if (commMethodPlain && commMethodPlain.includes(\"website\")) {        \n            //         setBtnText(\"Order on website\")\n            //         setOrderState(\"Website Order\")\n            //     } else if (commMethodPlain && commMethodPlain.includes('call')) {\n            //         setBtnText(`Call ${phone}`)\n            //         setOrderState(\"Calling Order\")         \n            //     } else {\n            //         setBtnText(\"Review\")\n            //         setReviewOrder(false)\n            //         setOrderState(\"Choose Variants/Qty\")\n            //         setPercentage(100/orderSteps * 2) // update progress bar\n            //         setNextPage(true)\n            //     }\n            // }\n        } \n    }\n\n    // function sendMessage(btnIndex) {\n\n    //     console.log(commMethod)\n\n    //     if (btnIndex) {\n    //         commMethod = commMethodPlain.split(',')[btnIndex]\n    //     }\n\n    //     commMethod = commMethod.trim()\n\n\n    //     console.log(commMethod)\n    //     if (commMethod === \"text\") {\n    //         router.sendText(props.values.contact_name, dataToUpdate, \"4848885912\").then(data => { // NEED TO CHANGE\n    //             save()\n    //         })\n    //     }\n    //     else if (commMethod === \"email\") {\n    //         router.sendEmail(props.values.contact_name, dataToUpdate, \"stepan.cannuscio@gmail.com\").then(data => { // NEED TO CHANGE\n    //             save()\n    //         })\n    //     } else if (commMethod === \"website\" || commMethod === \"call\") {\n    //         save()\n    //     } else {\n    //         alert(\"No communication method for this vendor! Contact Step for help\")\n    //     }\n    // }\n\n    function save() {\n            \n        const order = {\n            vendor: props.data.row.values.id,\n            subtotal: 0,\n            status: \"submitted\"\n        }\n\n        const orderItems = []\n        dataToUpdate.forEach(item => {\n\n            if (item.quantity !== 0 || item.quantity !== \"\") {\n       \n                order.subtotal += item.subtotal\n                orderItems.push({\n                    variant: item.variantId,\n                    subtotal: item.subtotal, // this is the subtotal including multiple qtys\n                    quantity: item.quantity\n                })\n            }\n        \n        })\n     \n        if (dataToUpdate.length > 0) {\n            router.saveOrder(order, orderItems, props.user.id).then(data => {\n            if (data === \"Success\") {\n                props.toggle()\n            } else {\n            }\n         })\n        } \n    }\n\n    function rowSelected(rowData, isAllSelected) {\n        if (rowData === \"all\") {\n            setDataToUpdate([]) // clear before adding all rows to the array to update\n            setVariantsToUpdate([])\n            if (!isAllSelected) { // this means all are selected (it's opposite)\n                rowData.forEach(item => {\n                    setDataToUpdate(oldArray => [...oldArray, item])\n                    setVariantsToUpdate(oldArray => [...oldArray, item.id])\n                })\n            } \n        } else {\n            console.log(rowData)\n            console.log(dataToUpdate)\n            if (!rowData.isSelected) { // this means the row is selected (it's opposite)\n                setDataToUpdate(oldArray => [...oldArray, rowData.values])\n                setVariantsToUpdate(oldArray => [...oldArray, rowData.values.id])\n            } else {\n                // remove from arrays if you unselect it\n                var array = [...dataToUpdate]; // make a separate copy of the array\n                var index = array.indexOf(rowData.values.id)\n                if (index !== -1) {\n                    array.splice(index, 1);\n                    setDataToUpdate(array);\n                }    \n                var array2 = [...variantsToUpdate]; // make a separate copy of the array\n                var index2 = array2.indexOf(rowData.values.id)\n                if (index2 !== -1) {\n                    array2.splice(index2, 1);\n                    setDataToUpdate(array2);\n                }         \n            } \n        }\n       \n    }\n\n    function remove(data, element) {\n        variantData.forEach((item, index) => {\n            if (item.variant_id === element.variant_id) {\n                var array = [...data]; // make a separate copy of the array\n                if (index !== -1) {\n                    array.splice(index, 1);\n                    setVariantData(array);\n                }             \n            }\n        })\n\n        if (dataToUpdate.length > 0) {\n            dataToUpdate.forEach((item, index) => {   \n                if (item.variantId === element.variant_id) {\n                    var array = [...dataToUpdate]; // make a separate copy of the array\n                    if (index !== -1) {\n                        array.splice(index, 1);\n                        setDataToUpdate(array);\n                    } \n                }\n            })\n        }\n    }\n\n    function addOrderItem(data, orderQuantity) {\n        const newData = {\n            productTitle: data.title,\n            productId: data.id,\n            variantTitle: data.variant,\n            variantId: data.variant_id,\n            cost: data.cost,\n            quantity: orderQuantity,\n            subtotal: Math.round(data.cost * orderQuantity * 100, 2) / 100\n        }\n\n        if (variantsToUpdate.includes(data.variant_id)) {\n            // Item is in array so let's update it\n            dataToUpdate.forEach((item, index) => {\n\n                // console.log(item)\n                \n                if (item.variantId === data.variant_id) {\n                    var array = [...dataToUpdate]; // make a separate copy of the array\n                    if (index !== -1) {\n                        array.splice(index, 1);\n                        setDataToUpdate(array);\n                    } \n                    console.log(newData.quantity)\n                    if (newData.quantity !== \"0\" && newData.quantity !== 0 && newData.quantity !== \"\") {\n                        console.log('are we calling here')\n                        setDataToUpdate(oldArray => [...oldArray, newData])   \n                    } else {\n                        var array = [...variantsToUpdate]; // make a separate copy of the array\n                        if (index !== -1) {\n                            array.splice(index, 1);\n                            setVariantsToUpdate(array);\n                        } \n                    }\n                }\n            })\n        } else {\n            if (newData.quantity !== \"0\" || newData.quantity !== \"\") {\n                setVariantsToUpdate(oldArray => [...oldArray, data.variant_id])\n                setDataToUpdate(oldArray => [...oldArray, newData])\n            }\n        }\n    }\n\n    function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    function manualOrderBtnClicked() {\n        // if (commMethodPlain && commMethodPlain.includes(',')) {\n            setManualOrderBtnHidden(true)\n            setBtnText(\"Submit\")\n            setEditColor(\"#26B1FF\")\n            setOrderState(\"Review Order\")\n            // setReviewOrder(true)\n\n            // setExtraOptionHidden(true)\n            setPercentage(100/orderSteps * 4) // update progress bar\n        // } else {\n            \n        // }\n    }\n\n  \n\n    if (isLoading) {\n        return <div className=\"loader\"></div>;\n    }\n\n    return (\n        <div>   \n            <div className=\"top-content\">\n                <ProgressBar percentage={percentage}/>\n                <span className=\"close\" onClick={() =>  props.toggle()}>&times;    </span>\n                <h2 >{data[0] ? data[0].name : \"No Products\"}</h2>\n                <p>Products: {props.values.products}</p>\n                <p>Low Products: {props.values.low_products}</p>\n                <p>Contact Name: {props.values.contact_name}</p>\n                <p>Email: {props.values.email}</p>\n                <p>Phone: {props.values.phone}</p>\n                {isOrdering ? <button onClick={backBtnClicked} className=\"edit-btn\" style={{backgroundColor: \"grey\"}}>Back</button> : null }\n                <button hidden={orderState === \"Choose Communication\"} onClick={() => orderBtnClicked()} className=\"edit-btn\" style={{backgroundColor: editColor}}>{btnText}</button>\n                {commMethods.map((method, index) => {\n                    return (\n                        <button key={index} hidden={orderState !== \"Choose Communication\"} onClick={() => orderBtnClicked()} className=\"edit-btn\" style={{backgroundColor: \"#76c32d\"}}>{method.method}</button>\n                    )\n                })}\n                \n                <button hidden={isManualOrderBtnHidden} onClick={manualOrderBtnClicked} className=\"edit-btn\" style={{backgroundColor: \"orange\"}}>Manual Order</button>\n            </div>\n      \n            {isOrdering \n            ?\n            <div>\n                <div>\n                    {orderState === \"Choose Variants/Qty\" \n                    ?\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Product</th>\n                                <th>Variant</th>\n                                <th>Current Quantity</th>\n                                <th>Recent Purchases</th>\n                                <th>Stock Level</th>\n                                <th>Cost/unit</th>\n                                <th>Recent Order</th>\n                                <th>Order Quantity</th>\n                                \n                                <th>Remove</th>\n                                \n                            </tr>\n                        </thead>\n                        <tbody>\n                            {variantData.map((variant, index) => {\n                                var orderQuantity = 0\n                                dataToUpdate.forEach(item => {\n                                    if (item.variantId === variant.variant_id) {\n                                        orderQuantity = item.quantity\n                                    }\n                                })\n                                return (\n                                    <tr key={index}>\n                                        <td>{variant.title}</td>\n                                        <td>{variant.variant}</td>\n                                        <td>{variant.quantity}</td>\n                                        <td>{variant.purchases}</td>\n                                        <td>{variant.stockLevel}</td>\n                                        <td>{formatter.format(variant.cost)}</td>\n                                        <td>{variant.recentOrder}</td>\n                                        <td ><input type=\"text\" placeholder=\"0\" style={{fontSize: \"16px\"}}value={orderQuantity} onChange={(e) => {\n                                            addOrderItem(variant, e.target.value) \n                                        }}/></td>\n                                        <td><span className=\"close\" style={{color: \"red\"}} onClick={() =>  remove(variantData, variant)}>&times;</span></td>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                    :\n                    [\"Choose Communication\", \"Review Order\", \"Submit Order\"].includes(orderState)\n                    ?\n                    <table>\n                    <thead>\n                        <tr>\n                            <th>Product</th>\n                            <th>Variant</th>\n                            <th>Quantity</th>\n                            <th>Cost/unit</th>\n                            <th>Subtotal</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {dataToUpdate.map((order_item, index) => {\n                            return (\n                                <tr key={index}>\n                                    <td>{order_item.productTitle}</td>\n                                    <td>{order_item.variantTitle}</td>\n                                    <td>{order_item.quantity}</td>\n                                    <td>{formatter.format(order_item.cost)}</td>\n                                    <td>{formatter.format(order_item.subtotal)}</td>\n                                </tr>\n                            )  \n                        })}\n                    </tbody>\n                </table>\n                    :\n                <Table columns={columns} data={data} search={false} type=\"order\" checkbox={true} popupEnabled={false} perPage={5} update={(data, isAllSelected) => rowSelected(data, isAllSelected)}/>\n                }     \n                </div>\n            </div>\n            :\n            <Table columns={columns} data={data} type=\"order\" search={false} popupEnabled={false} perPage={5}/>\n}       \n  </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}