{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Vendors/VendorPopup.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport \"../styles/Popup.css\";\nimport Table from \"../components/Table\";\nimport ProgressBar from \"./ProgressBar\";\nimport * as router from \"./vendorAPI\";\nexport default function VendorPopup(props) {\n  _s();\n\n  const [percentage, setPercentage] = useState(0);\n  const [btnText, setBtnText] = useState(\"Order\");\n  const [extraOptionText, setExtraOptionText] = useState(\"\");\n  const [isLoading, setLoading] = useState(true);\n  const [editColor, setEditColor] = useState(\"#76c32d\");\n  const [dataToUpdate, setDataToUpdate] = useState([]);\n  const [variantsToUpdate, setVariantsToUpdate] = useState([]);\n  const [data, setData] = useState([]);\n  const [commMethods, setCommMethods] = useState([]);\n  const [variantData, setVariantData] = useState([]);\n  const [isOrdering, setOrdering] = useState(false);\n  const [nextPage, setNextPage] = useState(false);\n  const [reviewOrder, setReviewOrder] = useState(false);\n  const [orderState, setOrderState] = useState(null);\n  const [isOrderItemsHidden, setOrderItemsHidden] = useState(true);\n  const [isExtraOptionHidden, setExtraOptionHidden] = useState(true);\n  const [isManualOrderBtnHidden, setManualOrderBtnHidden] = useState(true);\n  const commMethodPlain = props.data.row.values.comm_method;\n  var commMethod = commMethodPlain && commMethodPlain.includes(',') ? commMethodPlain.split(',')[0] : commMethodPlain;\n  const orderSteps = commMethodPlain && (commMethodPlain.includes(\"call\") || commMethodPlain.includes(\"website\") || commMethodPlain.includes(',')) ? 4 : 3;\n  const phone = props.values.phone ? `${props.values.phone.slice(0, 3)}-${props.values.phone.slice(3, 6)}-${props.values.phone.slice(6)}` : \"\";\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  const columns = useMemo(() => [{\n    Header: 'ID',\n    accessor: 'id',\n    // Product ID\n    sortDescFirst: true\n  }, {\n    Header: 'Product',\n    accessor: 'title',\n    sortDescFirst: true\n  }, {\n    Header: 'Variant',\n    accessor: 'variant',\n    sortDescFirst: true,\n    show: true\n  }, {\n    Header: 'Quantity',\n    accessor: 'quantity',\n    sortDescFirst: true\n  }, {\n    Header: 'Recent Purchases',\n    accessor: 'purchases',\n    sortDescFirst: true\n  }, {\n    Header: 'Stock Level',\n    accessor: 'stockLevel',\n    disableSortBy: true\n  }, {\n    Header: 'Recent Order',\n    accessor: 'recentOrder',\n    disableSortBy: true\n  }], []);\n\n  function getData() {\n    setLoading(true);\n    router.loadVendor(props.values.id).then(data => {\n      if (data) {\n        setData(data.products); // sets the product data for the table\n\n        setCommMethods(data.commMethods);\n        console.log(data);\n        setLoading(false);\n      }\n    });\n  }\n\n  useEffect(() => {\n    getData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function chooseProducts(steps) {\n    // Start Order - change to page where we choose which products to order\n    setOrdering(true);\n    setBtnText(\"Next\");\n    setOrderItemsHidden(false);\n    setOrderState(\"Choose Products\");\n    setPercentage(100 / steps);\n  }\n\n  function chooseVariants(steps) {\n    // Going to next page of ordering after chose products to choose variants and quantities\n    if (dataToUpdate.length > 0) {\n      // Only load variant data if a product was selected\n      setLoading(true);\n      setPercentage(100 / steps * 2); // update progress bar\n\n      setNextPage(true);\n      setOrderState(\"Choose Variants/Qty\");\n      router.loadOrderProducts(dataToUpdate).then(data => {\n        if (data) {\n          setLoading(false);\n          setVariantData(data);\n          setDataToUpdate([]); // empty dataToUpdate from any previous orders\n\n          setBtnText(\"Review\");\n        }\n      });\n    } else {\n      alert(\"No products selected\");\n    }\n  }\n\n  function reviewingOrder(steps) {\n    // Going to next page to review order and submit or use communication method\n    setNextPage(false);\n    setReviewOrder(true);\n    setPercentage(100 / steps * 3); // update progress bar\n\n    setManualOrderBtnHidden(false);\n\n    if (commMethodPlain && commMethodPlain.includes(',')) {\n      // Multiple communicatoin methods\n      setExtraOptionHidden(false);\n      setExtraOptionText(`${capitalizeFirstLetter(commMethodPlain.split(',')[1])} ${commMethodPlain.split(',')[1] === 'call' ? phone : \"\"}`);\n      setBtnText(`${capitalizeFirstLetter(commMethod)} ${commMethod === 'call' ? phone : \"\"}`);\n      setOrderState(\"Multiple Vendors\");\n    } else {\n      // Only 1 vendor (as it is for the vast majority)\n      if (commMethodPlain && commMethodPlain.includes(\"website\")) {\n        setBtnText(\"Order on website\");\n        setOrderState(\"Website Order\");\n      } else if (commMethodPlain && commMethodPlain.includes('call')) {\n        setBtnText(`Call ${phone}`);\n        setOrderState(\"Calling Order\");\n      } else {\n        setBtnText(\"Submit\");\n        setEditColor(\"#26B1FF\");\n        setOrderState(\"Review Order\");\n      }\n    }\n  }\n\n  function orderBtnClicked(btnIndex, phone, orderSteps) {\n    if (!isOrdering) {\n      chooseProducts(orderSteps);\n    } else if (orderState === \"Choose Products\") {\n      chooseVariants(orderSteps);\n    } else if (orderState === \"Choose Variants/Qty\") {\n      reviewingOrder(orderSteps);\n    } else if (orderState === \"Website Order\") {\n      window.open(\"https://amazon.com\", '_blank'); // NEED TO CHANGE\n\n      setBtnText(\"Submit\");\n      setEditColor(\"#26B1FF\");\n      setManualOrderBtnHidden(true);\n      setOrderState(\"Review Order\");\n      setPercentage(100 / orderSteps * 4);\n    } else if (orderState === \"Calling Order\") {\n      setPercentage(100 / orderSteps * 4);\n      setBtnText(\"Submit\");\n      setManualOrderBtnHidden(true);\n      setEditColor(\"#26B1FF\");\n      setOrderState(\"Review Order\");\n    } else if (orderState === \"Multiple Vendors\") {\n      // One of the 2 buttons was clicked\n      const method = commMethodPlain.split(',')[btnIndex];\n\n      if (method === \"call\") {\n        // Clicked on the Call button so now need to submit the order\n        setPercentage(100 / orderSteps * 4);\n        setBtnText(\"Submit\");\n        setEditColor(\"#26B1FF\");\n        setManualOrderBtnHidden(false);\n        setOrderState(\"Review Order\");\n        setExtraOptionHidden(true);\n      } else if (method === \"website\") {\n        // Clicked on Website so now need to submit the order\n        window.open(\"https://amazon.com\", '_blank'); // NEED TO CHANGE\n\n        setBtnText(\"Submit\");\n        setEditColor(\"#26B1FF\");\n        setManualOrderBtnHidden(false);\n        setOrderState(\"Review Order\");\n        setExtraOptionHidden(true);\n        setPercentage(100 / orderSteps * 4);\n      } else {\n        // Clicked on Email or Text so need to send the message which will then save the order\n        sendMessage(btnIndex);\n        setPercentage(100 / orderSteps * 4);\n        setOrderState(null);\n        setOrdering(false);\n      }\n    } else if (orderState === \"Review Order\") {\n      // Submit - save order\n      commMethodPlain.includes(',') ? save() : sendMessage();\n      setOrderState(null);\n      setOrdering(false);\n    }\n  }\n\n  function backBtnClicked() {\n    // const phone = `${props.values.phone.slice(0,3)}-${props.values.phone.slice(3,6)}-${props.values.phone.slice(6,)}`\n    // const orderSteps = commMethod === \"text\" || commMethod === \"email\" ? 4 : 5\n    if (orderState === \"Choose Products\") {\n      setOrdering(false);\n      setBtnText(\"Order\");\n      setOrderItemsHidden(true);\n      setOrderState(null);\n      setPercentage(0);\n    } else if (orderState === \"Choose Variants/Qty\") {\n      setNextPage(false);\n      setOrderState(\"Choose Products\");\n      setBtnText(\"Next\");\n      setPercentage(100 / orderSteps);\n      setVariantData([]);\n      setDataToUpdate([]);\n      setVariantsToUpdate([]);\n    } else if (orderState === \"Website Order\" || orderState === \"Calling Order\" || orderState === \"Multiple Vendors\") {\n      setNextPage(true);\n      setReviewOrder(false);\n      setBtnText(\"Review\");\n      setOrderState(\"Choose Variants/Qty\");\n      setExtraOptionHidden(true);\n      setPercentage(100 / orderSteps * 2); // update progress bar\n\n      setEditColor(\"#76c32d\");\n      setManualOrderBtnHidden(true);\n    } else if (orderState === \"Review Order\") {\n      setPercentage(100 / orderSteps * 3); // update progress bar\n\n      setEditColor(\"#76c32d\");\n      setManualOrderBtnHidden(false);\n\n      if (commMethodPlain && commMethodPlain.includes(',')) {\n        // Multiple vendors\n        setExtraOptionHidden(false);\n        setExtraOptionText(`${capitalizeFirstLetter(commMethodPlain.split(',')[1])} ${commMethodPlain.split(',')[1] === 'call' ? phone : \"\"}`);\n        setBtnText(`${capitalizeFirstLetter(commMethod)} ${commMethod === 'call' ? phone : \"\"}`);\n        setOrderState(\"Multiple Vendors\");\n      } else {\n        // Only 1 vendor (as it is for the vast majority)\n        if (commMethodPlain && commMethodPlain.includes(\"website\")) {\n          setBtnText(\"Order on website\");\n          setOrderState(\"Website Order\");\n        } else if (commMethodPlain && commMethodPlain.includes('call')) {\n          setBtnText(`Call ${phone}`);\n          setOrderState(\"Calling Order\");\n        } else {\n          setBtnText(\"Review\");\n          setReviewOrder(false);\n          setOrderState(\"Choose Variants/Qty\");\n          setPercentage(100 / orderSteps * 2); // update progress bar\n\n          setNextPage(true);\n        }\n      }\n    }\n  }\n\n  function sendMessage(btnIndex) {\n    console.log(commMethod);\n\n    if (btnIndex) {\n      commMethod = commMethodPlain.split(',')[btnIndex];\n    }\n\n    commMethod = commMethod.trim();\n    console.log(commMethod);\n\n    if (commMethod === \"text\") {\n      router.sendText(props.values.contact_name, dataToUpdate, \"4848885912\").then(data => {\n        // NEED TO CHANGE\n        save();\n      });\n    } else if (commMethod === \"email\") {\n      router.sendEmail(props.values.contact_name, dataToUpdate, \"stepan.cannuscio@gmail.com\").then(data => {\n        // NEED TO CHANGE\n        save();\n      });\n    } else if (commMethod === \"website\" || commMethod === \"call\") {\n      save();\n    } else {\n      alert(\"No communication method for this vendor! Contact Step for help\");\n    }\n  }\n\n  function save() {\n    const order = {\n      vendor: props.data.row.values.id,\n      subtotal: 0,\n      status: \"submitted\"\n    };\n    const orderItems = [];\n    dataToUpdate.forEach(item => {\n      if (item.quantity !== 0 || item.quantity !== \"\") {\n        order.subtotal += item.subtotal;\n        orderItems.push({\n          variant: item.variantId,\n          subtotal: item.subtotal,\n          // this is the subtotal including multiple qtys\n          quantity: item.quantity\n        });\n      }\n    });\n\n    if (dataToUpdate.length > 0) {\n      router.saveOrder(order, orderItems, props.user.id).then(data => {\n        if (data === \"Success\") {\n          props.toggle();\n        } else {}\n      });\n    }\n  }\n\n  function rowSelected(rowData, isAllSelected) {\n    if (rowData === \"all\") {\n      setDataToUpdate([]); // clear before adding all rows to the array to update\n\n      if (!isAllSelected) {\n        // this means all are selected (it's opposite)\n        data.forEach(item => {\n          setDataToUpdate(oldArray => [...oldArray, item.id]);\n        });\n      }\n    } else {\n      if (!rowData.isSelected) {\n        // this means the row is selected (it's opposite)\n        setDataToUpdate(oldArray => [...oldArray, rowData.values.id]);\n      } else {\n        var array = [...dataToUpdate]; // make a separate copy of the array\n\n        var index = array.indexOf(rowData.values.id);\n\n        if (index !== -1) {\n          array.splice(index, 1);\n          setDataToUpdate(array);\n        }\n      }\n    }\n  }\n\n  function remove(data, element) {\n    variantData.forEach((item, index) => {\n      if (item.variant_id === element.variant_id) {\n        var array = [...data]; // make a separate copy of the array\n\n        if (index !== -1) {\n          array.splice(index, 1);\n          setVariantData(array);\n        }\n      }\n    });\n\n    if (dataToUpdate.length > 0) {\n      dataToUpdate.forEach((item, index) => {\n        if (item.variantId === element.variant_id) {\n          var array = [...dataToUpdate]; // make a separate copy of the array\n\n          if (index !== -1) {\n            array.splice(index, 1);\n            setDataToUpdate(array);\n          }\n        }\n      });\n    }\n  }\n\n  function addOrderItem(data, orderQuantity) {\n    const newData = {\n      productTitle: data.title,\n      productId: data.id,\n      variantTitle: data.variant,\n      variantId: data.variant_id,\n      cost: data.cost,\n      quantity: orderQuantity,\n      subtotal: Math.round(data.cost * orderQuantity * 100, 2) / 100\n    };\n\n    if (variantsToUpdate.includes(data.variant_id)) {\n      // Item is in array so let's update it\n      dataToUpdate.forEach((item, index) => {\n        if (item.variantId === data.variant_id) {\n          var array = [...dataToUpdate]; // make a separate copy of the array\n\n          if (index !== -1) {\n            array.splice(index, 1);\n            setDataToUpdate(array);\n          }\n\n          console.log(newData.quantity);\n\n          if (newData.quantity !== \"0\" && newData.quantity !== 0 && newData.quantity !== \"\") {\n            console.log('are we calling here');\n            setDataToUpdate(oldArray => [...oldArray, newData]);\n          } else {\n            var array = [...variantsToUpdate]; // make a separate copy of the array\n\n            if (index !== -1) {\n              array.splice(index, 1);\n              setVariantsToUpdate(array);\n            }\n          }\n        }\n      });\n    } else {\n      if (newData.quantity !== \"0\" || newData.quantity !== \"\") {\n        setVariantsToUpdate(oldArray => [...oldArray, data.variant_id]);\n        setDataToUpdate(oldArray => [...oldArray, newData]);\n      }\n    }\n  }\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  function manualOrderBtnClicked() {\n    // if (commMethodPlain && commMethodPlain.includes(',')) {\n    setManualOrderBtnHidden(true);\n    setBtnText(\"Submit\");\n    setEditColor(\"#26B1FF\");\n    setOrderState(\"Review Order\");\n    setReviewOrder(true);\n    setExtraOptionHidden(true);\n    setPercentage(100 / orderSteps * 4); // update progress bar\n    // } else {\n    // }\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-content\",\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        percentage: percentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => props.toggle(),\n        children: \"\\xD7    \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data[0] ? data[0].name : \"No Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Products: \", props.values.products]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Low Products: \", props.values.low_products]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Contact Name: \", props.values.contact_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", props.values.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone: \", props.values.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 17\n      }, this), isOrdering ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backBtnClicked,\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: \"grey\"\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 31\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => orderBtnClicked(0, phone, orderSteps),\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: editColor\n        },\n        children: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        hidden: isExtraOptionHidden,\n        onClick: () => orderBtnClicked(1, phone, orderSteps),\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: \"#76c32d\"\n        },\n        children: extraOptionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        hidden: isManualOrderBtnHidden,\n        onClick: manualOrderBtnClicked,\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: \"orange\"\n        },\n        children: \"Manual Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 13\n    }, this), isOrdering ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        hidden: isOrderItemsHidden,\n        children: nextPage ? /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Variant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Current Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Recent Purchases\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Stock Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Cost/unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Recent Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Order Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: variantData.map((variant, index) => {\n              var orderQuantity = 0;\n              dataToUpdate.forEach(item => {\n                if (item.variantId === variant.variant_id) {\n                  orderQuantity = item.quantity;\n                }\n              });\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.variant\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.purchases\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.stockLevel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatter.format(variant.cost)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.recentOrder\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"0\",\n                    style: {\n                      fontSize: \"16px\"\n                    },\n                    value: orderQuantity,\n                    onChange: e => {\n                      addOrderItem(variant, e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"close\",\n                    style: {\n                      color: \"red\"\n                    },\n                    onClick: () => remove(variantData, variant),\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 21\n        }, this) : reviewOrder ? /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Variant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Cost/unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Subtotal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: dataToUpdate.map((order_item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order_item.productTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order_item.variantTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order_item.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatter.format(order_item.cost)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatter.format(order_item.subtotal)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 37\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data,\n          search: false,\n          type: \"order\",\n          checkbox: true,\n          popupEnabled: false,\n          perPage: 5,\n          update: (data, isAllSelected) => rowSelected(data, isAllSelected)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data,\n      type: \"order\",\n      search: false,\n      popupEnabled: false,\n      perPage: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 463,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VendorPopup, \"ZNIvcCdye353TUAMXcakwSep9uA=\");\n\n_c = VendorPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"VendorPopup\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Vendors/VendorPopup.js"],"names":["useState","useEffect","useMemo","Table","ProgressBar","router","VendorPopup","props","percentage","setPercentage","btnText","setBtnText","extraOptionText","setExtraOptionText","isLoading","setLoading","editColor","setEditColor","dataToUpdate","setDataToUpdate","variantsToUpdate","setVariantsToUpdate","data","setData","commMethods","setCommMethods","variantData","setVariantData","isOrdering","setOrdering","nextPage","setNextPage","reviewOrder","setReviewOrder","orderState","setOrderState","isOrderItemsHidden","setOrderItemsHidden","isExtraOptionHidden","setExtraOptionHidden","isManualOrderBtnHidden","setManualOrderBtnHidden","commMethodPlain","row","values","comm_method","commMethod","includes","split","orderSteps","phone","slice","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","columns","Header","accessor","sortDescFirst","show","disableSortBy","getData","loadVendor","id","then","products","console","log","chooseProducts","steps","chooseVariants","length","loadOrderProducts","alert","reviewingOrder","capitalizeFirstLetter","orderBtnClicked","btnIndex","window","open","method","sendMessage","save","backBtnClicked","trim","sendText","contact_name","sendEmail","order","vendor","subtotal","status","orderItems","forEach","item","quantity","push","variant","variantId","saveOrder","user","toggle","rowSelected","rowData","isAllSelected","oldArray","isSelected","array","index","indexOf","splice","remove","element","variant_id","addOrderItem","orderQuantity","newData","productTitle","title","productId","variantTitle","cost","Math","round","string","charAt","toUpperCase","manualOrderBtnClicked","name","low_products","email","backgroundColor","map","purchases","stockLevel","format","recentOrder","fontSize","e","target","value","color","order_item"],"mappings":";;;;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,OAA7B,QAA2C,OAA3C;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAEvC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,OAAD,CAAtC;AACA,QAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACc,SAAD,EAAYC,UAAZ,IAA0Bf,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,SAAD,CAA1C;AAEA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACoB,gBAAD,EAAmBC,mBAAnB,IAA0CrB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC0B,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM,CAAC4B,UAAD,EAAaC,WAAb,IAA4B7B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC8B,QAAD,EAAWC,WAAX,IAA0B/B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACgC,WAAD,EAAcC,cAAd,IAAgCjC,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACkC,UAAD,EAAaC,aAAb,IAA8BnC,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACoC,kBAAD,EAAqBC,mBAArB,IAA4CrC,QAAQ,CAAC,IAAD,CAA1D;AACA,QAAM,CAACsC,mBAAD,EAAsBC,oBAAtB,IAA8CvC,QAAQ,CAAC,IAAD,CAA5D;AACA,QAAM,CAACwC,sBAAD,EAAyBC,uBAAzB,IAAoDzC,QAAQ,CAAC,IAAD,CAAlE;AAEA,QAAM0C,eAAe,GAAGnC,KAAK,CAACe,IAAN,CAAWqB,GAAX,CAAeC,MAAf,CAAsBC,WAA9C;AACA,MAAIC,UAAU,GAAGJ,eAAe,IAAIA,eAAe,CAACK,QAAhB,CAAyB,GAAzB,CAAnB,GAAmDL,eAAe,CAACM,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAnD,GAAmFN,eAApG;AACA,QAAMO,UAAU,GAAGP,eAAe,KAAKA,eAAe,CAACK,QAAhB,CAAyB,MAAzB,KAAoCL,eAAe,CAACK,QAAhB,CAAyB,SAAzB,CAApC,IAA2EL,eAAe,CAACK,QAAhB,CAAyB,GAAzB,CAAhF,CAAf,GAAgI,CAAhI,GAAoI,CAAvJ;AAEA,QAAMG,KAAK,GAAG3C,KAAK,CAACqC,MAAN,CAAaM,KAAb,GAAsB,GAAE3C,KAAK,CAACqC,MAAN,CAAaM,KAAb,CAAmBC,KAAnB,CAAyB,CAAzB,EAA2B,CAA3B,CAA8B,IAAG5C,KAAK,CAACqC,MAAN,CAAaM,KAAb,CAAmBC,KAAnB,CAAyB,CAAzB,EAA2B,CAA3B,CAA8B,IAAG5C,KAAK,CAACqC,MAAN,CAAaM,KAAb,CAAmBC,KAAnB,CAAyB,CAAzB,CAA6B,EAAvH,GAA2H,EAAzI;AAEA,QAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC7CC,IAAAA,KAAK,EAAE,UADsC;AAE7CC,IAAAA,QAAQ,EAAE,KAFmC;AAG7CC,IAAAA,qBAAqB,EAAE;AAHsB,GAA/B,CAAlB;AAMA,QAAMC,OAAO,GAAGxD,OAAO,CACnB,MAAM,CACN;AACIyD,IAAAA,MAAM,EAAE,IADZ;AAEIC,IAAAA,QAAQ,EAAE,IAFd;AAEoB;AAChBC,IAAAA,aAAa,EAAE;AAHnB,GADM,EAMJ;AACEF,IAAAA,MAAM,EAAE,SADV;AAEEC,IAAAA,QAAQ,EAAE,OAFZ;AAGEC,IAAAA,aAAa,EAAE;AAHjB,GANI,EAWJ;AACEF,IAAAA,MAAM,EAAE,SADV;AAEEC,IAAAA,QAAQ,EAAE,SAFZ;AAGEC,IAAAA,aAAa,EAAE,IAHjB;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAXI,EAiBJ;AACEH,IAAAA,MAAM,EAAE,UADV;AAEEC,IAAAA,QAAQ,EAAE,UAFZ;AAGEC,IAAAA,aAAa,EAAE;AAHjB,GAjBI,EAsBJ;AACEF,IAAAA,MAAM,EAAE,kBADV;AAEEC,IAAAA,QAAQ,EAAE,WAFZ;AAGEC,IAAAA,aAAa,EAAE;AAHjB,GAtBI,EA2BJ;AACEF,IAAAA,MAAM,EAAE,aADV;AAEEC,IAAAA,QAAQ,EAAE,YAFZ;AAGEG,IAAAA,aAAa,EAAE;AAHjB,GA3BI,EAgCJ;AACEJ,IAAAA,MAAM,EAAE,cADV;AAEEC,IAAAA,QAAQ,EAAE,aAFZ;AAGEG,IAAAA,aAAa,EAAE;AAHjB,GAhCI,CADa,EAuCnB,EAvCmB,CAAvB;;AA0CA,WAASC,OAAT,GAAmB;AACfjD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAV,IAAAA,MAAM,CAAC4D,UAAP,CAAkB1D,KAAK,CAACqC,MAAN,CAAasB,EAA/B,EAAmCC,IAAnC,CAAwC7C,IAAI,IAAI;AAC5C,UAAIA,IAAJ,EAAU;AACNC,QAAAA,OAAO,CAACD,IAAI,CAAC8C,QAAN,CAAP,CADM,CACiB;;AACvB3C,QAAAA,cAAc,CAACH,IAAI,CAACE,WAAN,CAAd;AACA6C,QAAAA,OAAO,CAACC,GAAR,CAAYhD,IAAZ;AACAP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KAPD;AAQH;;AAEDd,EAAAA,SAAS,CAAC,MAAM;AACZ+D,IAAAA,OAAO,GADK,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,WAASO,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B;AACA3C,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAlB,IAAAA,UAAU,CAAC,MAAD,CAAV;AACA0B,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAF,IAAAA,aAAa,CAAC,iBAAD,CAAb;AACA1B,IAAAA,aAAa,CAAC,MAAI+D,KAAL,CAAb;AACH;;AAED,WAASC,cAAT,CAAwBD,KAAxB,EAA+B;AAC3B;AAEA,QAAItD,YAAY,CAACwD,MAAb,GAAsB,CAA1B,EAA6B;AACzB;AACA3D,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAN,MAAAA,aAAa,CAAC,MAAI+D,KAAJ,GAAY,CAAb,CAAb,CAHyB,CAGI;;AAC7BzC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,MAAAA,aAAa,CAAC,qBAAD,CAAb;AAEA9B,MAAAA,MAAM,CAACsE,iBAAP,CAAyBzD,YAAzB,EAAuCiD,IAAvC,CAA4C7C,IAAI,IAAI;AAEhD,YAAIA,IAAJ,EAAU;AACNP,UAAAA,UAAU,CAAC,KAAD,CAAV;AACAY,UAAAA,cAAc,CAACL,IAAD,CAAd;AACAH,UAAAA,eAAe,CAAC,EAAD,CAAf,CAHM,CAGc;;AACpBR,UAAAA,UAAU,CAAC,QAAD,CAAV;AACH;AACJ,OARD;AASH,KAhBD,MAgBO;AACHiE,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACH;AAEJ;;AAED,WAASC,cAAT,CAAwBL,KAAxB,EAA+B;AAE3B;AACAzC,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAxB,IAAAA,aAAa,CAAC,MAAI+D,KAAJ,GAAY,CAAb,CAAb,CAL2B,CAKE;;AAC7B/B,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;;AAGA,QAAIC,eAAe,IAAIA,eAAe,CAACK,QAAhB,CAAyB,GAAzB,CAAvB,EAAsD;AAClD;AACAR,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACA1B,MAAAA,kBAAkB,CAAE,GAAEiE,qBAAqB,CAACpC,eAAe,CAACM,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAD,CAAgC,IAAGN,eAAe,CAACM,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,MAAkC,MAAlC,GAA2CE,KAA3C,GAAmD,EAAG,EAAlH,CAAlB;AACAvC,MAAAA,UAAU,CAAE,GAAEmE,qBAAqB,CAAChC,UAAD,CAAa,IAAGA,UAAU,KAAK,MAAf,GAAwBI,KAAxB,GAAgC,EAAG,EAA5E,CAAV;AACAf,MAAAA,aAAa,CAAC,kBAAD,CAAb;AACH,KAND,MAMO;AACH;AACA,UAAIO,eAAe,IAAIA,eAAe,CAACK,QAAhB,CAAyB,SAAzB,CAAvB,EAA4D;AACxDpC,QAAAA,UAAU,CAAC,kBAAD,CAAV;AACAwB,QAAAA,aAAa,CAAC,eAAD,CAAb;AACH,OAHD,MAGO,IAAIO,eAAe,IAAIA,eAAe,CAACK,QAAhB,CAAyB,MAAzB,CAAvB,EAAyD;AAC5DpC,QAAAA,UAAU,CAAE,QAAOuC,KAAM,EAAf,CAAV;AACAf,QAAAA,aAAa,CAAC,eAAD,CAAb;AACH,OAHM,MAGA;AACHxB,QAAAA,UAAU,CAAC,QAAD,CAAV;AACAM,QAAAA,YAAY,CAAC,SAAD,CAAZ;AAEAkB,QAAAA,aAAa,CAAC,cAAD,CAAb;AACH;AACJ;AACJ;;AAGD,WAAS4C,eAAT,CAAyBC,QAAzB,EAAmC9B,KAAnC,EAA0CD,UAA1C,EAAsD;AAElD,QAAI,CAACrB,UAAL,EAAiB;AAEb2C,MAAAA,cAAc,CAACtB,UAAD,CAAd;AAEH,KAJD,MAIO,IAAIf,UAAU,KAAK,iBAAnB,EAAsC;AAEzCuC,MAAAA,cAAc,CAACxB,UAAD,CAAd;AAEH,KAJM,MAIA,IAAIf,UAAU,KAAK,qBAAnB,EAA0C;AAE7C2C,MAAAA,cAAc,CAAC5B,UAAD,CAAd;AAEH,KAJM,MAIA,IAAIf,UAAU,KAAK,eAAnB,EAAoC;AACxC+C,MAAAA,MAAM,CAACC,IAAP,CAAY,oBAAZ,EAAiC,QAAjC,EADwC,CACG;;AAC3CvE,MAAAA,UAAU,CAAC,QAAD,CAAV;AACAM,MAAAA,YAAY,CAAC,SAAD,CAAZ;AACAwB,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAN,MAAAA,aAAa,CAAC,cAAD,CAAb;AACA1B,MAAAA,aAAa,CAAC,MAAIwC,UAAJ,GAAiB,CAAlB,CAAb;AACF,KAPM,MAOA,IAAIf,UAAU,KAAK,eAAnB,EAAoC;AACvCzB,MAAAA,aAAa,CAAC,MAAIwC,UAAJ,GAAiB,CAAlB,CAAb;AACAtC,MAAAA,UAAU,CAAC,QAAD,CAAV;AACA8B,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAxB,MAAAA,YAAY,CAAC,SAAD,CAAZ;AACAkB,MAAAA,aAAa,CAAC,cAAD,CAAb;AACH,KANM,MAMA,IAAID,UAAU,KAAK,kBAAnB,EAAuC;AAC1C;AACA,YAAMiD,MAAM,GAAGzC,eAAe,CAACM,KAAhB,CAAsB,GAAtB,EAA2BgC,QAA3B,CAAf;;AAEA,UAAIG,MAAM,KAAK,MAAf,EAAuB;AACnB;AACA1E,QAAAA,aAAa,CAAC,MAAIwC,UAAJ,GAAiB,CAAlB,CAAb;AACAtC,QAAAA,UAAU,CAAC,QAAD,CAAV;AACAM,QAAAA,YAAY,CAAC,SAAD,CAAZ;AACAwB,QAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACAN,QAAAA,aAAa,CAAC,cAAD,CAAb;AACAI,QAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,OARD,MAQO,IAAI4C,MAAM,KAAK,SAAf,EAA0B;AAC7B;AACAF,QAAAA,MAAM,CAACC,IAAP,CAAY,oBAAZ,EAAiC,QAAjC,EAF6B,CAEc;;AAC3CvE,QAAAA,UAAU,CAAC,QAAD,CAAV;AACAM,QAAAA,YAAY,CAAC,SAAD,CAAZ;AACAwB,QAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACAN,QAAAA,aAAa,CAAC,cAAD,CAAb;AACAI,QAAAA,oBAAoB,CAAC,IAAD,CAApB;AACA9B,QAAAA,aAAa,CAAC,MAAIwC,UAAJ,GAAiB,CAAlB,CAAb;AACH,OATM,MASA;AACH;AACAmC,QAAAA,WAAW,CAACJ,QAAD,CAAX;AACAvE,QAAAA,aAAa,CAAC,MAAIwC,UAAJ,GAAiB,CAAlB,CAAb;AACAd,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAN,QAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ,KA5BM,MA4BC,IAAIK,UAAU,KAAK,cAAnB,EAAmC;AACvC;AACAQ,MAAAA,eAAe,CAACK,QAAhB,CAAyB,GAAzB,IAAgCsC,IAAI,EAApC,GAAyCD,WAAW,EAApD;AAEAjD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAN,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ;;AAED,WAASyD,cAAT,GAA0B;AACtB;AACA;AACA,QAAIpD,UAAU,KAAK,iBAAnB,EAAsC;AAClCL,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAlB,MAAAA,UAAU,CAAC,OAAD,CAAV;AACA0B,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA1B,MAAAA,aAAa,CAAC,CAAD,CAAb;AACH,KAND,MAMO,IAAIyB,UAAU,KAAK,qBAAnB,EAA0C;AAC7CH,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAI,MAAAA,aAAa,CAAC,iBAAD,CAAb;AACAxB,MAAAA,UAAU,CAAC,MAAD,CAAV;AACAF,MAAAA,aAAa,CAAC,MAAIwC,UAAL,CAAb;AACAtB,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAR,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,MAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACH,KARM,MAQA,IAAIa,UAAU,KAAK,eAAf,IAAkCA,UAAU,KAAK,eAAjD,IAAoEA,UAAU,KAAK,kBAAvF,EAA2G;AAC9GH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAtB,MAAAA,UAAU,CAAC,QAAD,CAAV;AACAwB,MAAAA,aAAa,CAAC,qBAAD,CAAb;AACAI,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACA9B,MAAAA,aAAa,CAAC,MAAIwC,UAAJ,GAAiB,CAAlB,CAAb,CAN8G,CAM5E;;AAClChC,MAAAA,YAAY,CAAC,SAAD,CAAZ;AACAwB,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH,KATM,MASA,IAAIP,UAAU,KAAK,cAAnB,EAAmC;AACtCzB,MAAAA,aAAa,CAAC,MAAIwC,UAAJ,GAAiB,CAAlB,CAAb,CADsC,CACJ;;AAClChC,MAAAA,YAAY,CAAC,SAAD,CAAZ;AACAwB,MAAAA,uBAAuB,CAAC,KAAD,CAAvB;;AACA,UAAIC,eAAe,IAAIA,eAAe,CAACK,QAAhB,CAAyB,GAAzB,CAAvB,EAAsD;AAClD;AACAR,QAAAA,oBAAoB,CAAC,KAAD,CAApB;AACA1B,QAAAA,kBAAkB,CAAE,GAAEiE,qBAAqB,CAACpC,eAAe,CAACM,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAD,CAAgC,IAAGN,eAAe,CAACM,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,MAAkC,MAAlC,GAA2CE,KAA3C,GAAmD,EAAG,EAAlH,CAAlB;AACAvC,QAAAA,UAAU,CAAE,GAAEmE,qBAAqB,CAAChC,UAAD,CAAa,IAAGA,UAAU,KAAK,MAAf,GAAwBI,KAAxB,GAAgC,EAAG,EAA5E,CAAV;AACAf,QAAAA,aAAa,CAAC,kBAAD,CAAb;AAEH,OAPD,MAOO;AACH;AACA,YAAIO,eAAe,IAAIA,eAAe,CAACK,QAAhB,CAAyB,SAAzB,CAAvB,EAA4D;AACxDpC,UAAAA,UAAU,CAAC,kBAAD,CAAV;AACAwB,UAAAA,aAAa,CAAC,eAAD,CAAb;AACH,SAHD,MAGO,IAAIO,eAAe,IAAIA,eAAe,CAACK,QAAhB,CAAyB,MAAzB,CAAvB,EAAyD;AAC5DpC,UAAAA,UAAU,CAAE,QAAOuC,KAAM,EAAf,CAAV;AACAf,UAAAA,aAAa,CAAC,eAAD,CAAb;AACH,SAHM,MAGA;AACHxB,UAAAA,UAAU,CAAC,QAAD,CAAV;AACAsB,UAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,UAAAA,aAAa,CAAC,qBAAD,CAAb;AACA1B,UAAAA,aAAa,CAAC,MAAIwC,UAAJ,GAAiB,CAAlB,CAAb,CAJG,CAI+B;;AAClClB,UAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ;AACJ;AACJ;;AAED,WAASqD,WAAT,CAAqBJ,QAArB,EAA+B;AAE3BX,IAAAA,OAAO,CAACC,GAAR,CAAYxB,UAAZ;;AAEA,QAAIkC,QAAJ,EAAc;AACVlC,MAAAA,UAAU,GAAGJ,eAAe,CAACM,KAAhB,CAAsB,GAAtB,EAA2BgC,QAA3B,CAAb;AACH;;AAEDlC,IAAAA,UAAU,GAAGA,UAAU,CAACyC,IAAX,EAAb;AAGAlB,IAAAA,OAAO,CAACC,GAAR,CAAYxB,UAAZ;;AACA,QAAIA,UAAU,KAAK,MAAnB,EAA2B;AACvBzC,MAAAA,MAAM,CAACmF,QAAP,CAAgBjF,KAAK,CAACqC,MAAN,CAAa6C,YAA7B,EAA2CvE,YAA3C,EAAyD,YAAzD,EAAuEiD,IAAvE,CAA4E7C,IAAI,IAAI;AAAE;AAClF+D,QAAAA,IAAI;AACP,OAFD;AAGH,KAJD,MAKK,IAAIvC,UAAU,KAAK,OAAnB,EAA4B;AAC7BzC,MAAAA,MAAM,CAACqF,SAAP,CAAiBnF,KAAK,CAACqC,MAAN,CAAa6C,YAA9B,EAA4CvE,YAA5C,EAA0D,4BAA1D,EAAwFiD,IAAxF,CAA6F7C,IAAI,IAAI;AAAE;AACnG+D,QAAAA,IAAI;AACP,OAFD;AAGH,KAJI,MAIE,IAAIvC,UAAU,KAAK,SAAf,IAA4BA,UAAU,KAAK,MAA/C,EAAuD;AAC1DuC,MAAAA,IAAI;AACP,KAFM,MAEA;AACHT,MAAAA,KAAK,CAAC,gEAAD,CAAL;AACH;AACJ;;AAED,WAASS,IAAT,GAAgB;AAEZ,UAAMM,KAAK,GAAG;AACVC,MAAAA,MAAM,EAAErF,KAAK,CAACe,IAAN,CAAWqB,GAAX,CAAeC,MAAf,CAAsBsB,EADpB;AAEV2B,MAAAA,QAAQ,EAAE,CAFA;AAGVC,MAAAA,MAAM,EAAE;AAHE,KAAd;AAMA,UAAMC,UAAU,GAAG,EAAnB;AACA7E,IAAAA,YAAY,CAAC8E,OAAb,CAAqBC,IAAI,IAAI;AAEzB,UAAIA,IAAI,CAACC,QAAL,KAAkB,CAAlB,IAAuBD,IAAI,CAACC,QAAL,KAAkB,EAA7C,EAAiD;AAE7CP,QAAAA,KAAK,CAACE,QAAN,IAAkBI,IAAI,CAACJ,QAAvB;AACAE,QAAAA,UAAU,CAACI,IAAX,CAAgB;AACZC,UAAAA,OAAO,EAAEH,IAAI,CAACI,SADF;AAEZR,UAAAA,QAAQ,EAAEI,IAAI,CAACJ,QAFH;AAEa;AACzBK,UAAAA,QAAQ,EAAED,IAAI,CAACC;AAHH,SAAhB;AAKH;AAEJ,KAZD;;AAcA,QAAIhF,YAAY,CAACwD,MAAb,GAAsB,CAA1B,EAA6B;AACzBrE,MAAAA,MAAM,CAACiG,SAAP,CAAiBX,KAAjB,EAAwBI,UAAxB,EAAoCxF,KAAK,CAACgG,IAAN,CAAWrC,EAA/C,EAAmDC,IAAnD,CAAwD7C,IAAI,IAAI;AAChE,YAAIA,IAAI,KAAK,SAAb,EAAwB;AACpBf,UAAAA,KAAK,CAACiG,MAAN;AACH,SAFD,MAEO,CACN;AACH,OALE;AAMH;AACJ;;AAED,WAASC,WAAT,CAAqBC,OAArB,EAA8BC,aAA9B,EAA6C;AACzC,QAAID,OAAO,KAAK,KAAhB,EAAuB;AACnBvF,MAAAA,eAAe,CAAC,EAAD,CAAf,CADmB,CACC;;AACpB,UAAI,CAACwF,aAAL,EAAoB;AAAE;AAClBrF,QAAAA,IAAI,CAAC0E,OAAL,CAAaC,IAAI,IAAI;AACjB9E,UAAAA,eAAe,CAACyF,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcX,IAAI,CAAC/B,EAAnB,CAAb,CAAf;AACH,SAFD;AAGH;AACJ,KAPD,MAOO;AACH,UAAI,CAACwC,OAAO,CAACG,UAAb,EAAyB;AAAE;AACvB1F,QAAAA,eAAe,CAACyF,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcF,OAAO,CAAC9D,MAAR,CAAesB,EAA7B,CAAb,CAAf;AACH,OAFD,MAEO;AACH,YAAI4C,KAAK,GAAG,CAAC,GAAG5F,YAAJ,CAAZ,CADG,CAC4B;;AAC/B,YAAI6F,KAAK,GAAGD,KAAK,CAACE,OAAN,CAAcN,OAAO,CAAC9D,MAAR,CAAesB,EAA7B,CAAZ;;AACA,YAAI6C,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdD,UAAAA,KAAK,CAACG,MAAN,CAAaF,KAAb,EAAoB,CAApB;AACA5F,UAAAA,eAAe,CAAC2F,KAAD,CAAf;AACH;AACJ;AACJ;AAEJ;;AAED,WAASI,MAAT,CAAgB5F,IAAhB,EAAsB6F,OAAtB,EAA+B;AAC3BzF,IAAAA,WAAW,CAACsE,OAAZ,CAAoB,CAACC,IAAD,EAAOc,KAAP,KAAiB;AACjC,UAAId,IAAI,CAACmB,UAAL,KAAoBD,OAAO,CAACC,UAAhC,EAA4C;AACxC,YAAIN,KAAK,GAAG,CAAC,GAAGxF,IAAJ,CAAZ,CADwC,CACjB;;AACvB,YAAIyF,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdD,UAAAA,KAAK,CAACG,MAAN,CAAaF,KAAb,EAAoB,CAApB;AACApF,UAAAA,cAAc,CAACmF,KAAD,CAAd;AACH;AACJ;AACJ,KARD;;AAUA,QAAI5F,YAAY,CAACwD,MAAb,GAAsB,CAA1B,EAA6B;AACzBxD,MAAAA,YAAY,CAAC8E,OAAb,CAAqB,CAACC,IAAD,EAAOc,KAAP,KAAiB;AAClC,YAAId,IAAI,CAACI,SAAL,KAAmBc,OAAO,CAACC,UAA/B,EAA2C;AACvC,cAAIN,KAAK,GAAG,CAAC,GAAG5F,YAAJ,CAAZ,CADuC,CACR;;AAC/B,cAAI6F,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdD,YAAAA,KAAK,CAACG,MAAN,CAAaF,KAAb,EAAoB,CAApB;AACA5F,YAAAA,eAAe,CAAC2F,KAAD,CAAf;AACH;AACJ;AACJ,OARD;AASH;AACJ;;AAED,WAASO,YAAT,CAAsB/F,IAAtB,EAA4BgG,aAA5B,EAA2C;AACvC,UAAMC,OAAO,GAAG;AACZC,MAAAA,YAAY,EAAElG,IAAI,CAACmG,KADP;AAEZC,MAAAA,SAAS,EAAEpG,IAAI,CAAC4C,EAFJ;AAGZyD,MAAAA,YAAY,EAAErG,IAAI,CAAC8E,OAHP;AAIZC,MAAAA,SAAS,EAAE/E,IAAI,CAAC8F,UAJJ;AAKZQ,MAAAA,IAAI,EAAEtG,IAAI,CAACsG,IALC;AAMZ1B,MAAAA,QAAQ,EAAEoB,aANE;AAOZzB,MAAAA,QAAQ,EAAEgC,IAAI,CAACC,KAAL,CAAWxG,IAAI,CAACsG,IAAL,GAAYN,aAAZ,GAA4B,GAAvC,EAA4C,CAA5C,IAAiD;AAP/C,KAAhB;;AAUA,QAAIlG,gBAAgB,CAAC2B,QAAjB,CAA0BzB,IAAI,CAAC8F,UAA/B,CAAJ,EAAgD;AAC5C;AACAlG,MAAAA,YAAY,CAAC8E,OAAb,CAAqB,CAACC,IAAD,EAAOc,KAAP,KAAiB;AAElC,YAAId,IAAI,CAACI,SAAL,KAAmB/E,IAAI,CAAC8F,UAA5B,EAAwC;AACpC,cAAIN,KAAK,GAAG,CAAC,GAAG5F,YAAJ,CAAZ,CADoC,CACL;;AAC/B,cAAI6F,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdD,YAAAA,KAAK,CAACG,MAAN,CAAaF,KAAb,EAAoB,CAApB;AACA5F,YAAAA,eAAe,CAAC2F,KAAD,CAAf;AACH;;AACDzC,UAAAA,OAAO,CAACC,GAAR,CAAYiD,OAAO,CAACrB,QAApB;;AACA,cAAIqB,OAAO,CAACrB,QAAR,KAAqB,GAArB,IAA4BqB,OAAO,CAACrB,QAAR,KAAqB,CAAjD,IAAsDqB,OAAO,CAACrB,QAAR,KAAqB,EAA/E,EAAmF;AAC/E7B,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAnD,YAAAA,eAAe,CAACyF,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcW,OAAd,CAAb,CAAf;AACH,WAHD,MAGO;AACH,gBAAIT,KAAK,GAAG,CAAC,GAAG1F,gBAAJ,CAAZ,CADG,CACgC;;AACnC,gBAAI2F,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdD,cAAAA,KAAK,CAACG,MAAN,CAAaF,KAAb,EAAoB,CAApB;AACA1F,cAAAA,mBAAmB,CAACyF,KAAD,CAAnB;AACH;AACJ;AACJ;AACJ,OApBD;AAqBH,KAvBD,MAuBO;AACH,UAAIS,OAAO,CAACrB,QAAR,KAAqB,GAArB,IAA4BqB,OAAO,CAACrB,QAAR,KAAqB,EAArD,EAAyD;AACrD7E,QAAAA,mBAAmB,CAACuF,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAActF,IAAI,CAAC8F,UAAnB,CAAb,CAAnB;AACAjG,QAAAA,eAAe,CAACyF,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcW,OAAd,CAAb,CAAf;AACH;AACJ;AACJ;;AAED,WAASzC,qBAAT,CAA+BiD,MAA/B,EAAuC;AACnC,WAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAAC5E,KAAP,CAAa,CAAb,CAAxC;AACH;;AAED,WAAS+E,qBAAT,GAAiC;AAC7B;AACIzF,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACA9B,IAAAA,UAAU,CAAC,QAAD,CAAV;AACAM,IAAAA,YAAY,CAAC,SAAD,CAAZ;AACAkB,IAAAA,aAAa,CAAC,cAAD,CAAb;AACAF,IAAAA,cAAc,CAAC,IAAD,CAAd;AAEAM,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACA9B,IAAAA,aAAa,CAAC,MAAIwC,UAAJ,GAAiB,CAAlB,CAAb,CATyB,CASS;AACtC;AAEA;AACH;;AAID,MAAInC,SAAJ,EAAe;AACX,wBAAO;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,UAAU,EAAEN;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAwB,QAAA,OAAO,EAAE,MAAOD,KAAK,CAACiG,MAAN,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAMlF,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQ6G,IAAlB,GAAyB;AAA/B;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,iCAAc5H,KAAK,CAACqC,MAAN,CAAawB,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,qCAAkB7D,KAAK,CAACqC,MAAN,CAAawF,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,qCAAkB7H,KAAK,CAACqC,MAAN,CAAa6C,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,8BAAWlF,KAAK,CAACqC,MAAN,CAAayF,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA,8BAAW9H,KAAK,CAACqC,MAAN,CAAaM,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,EASKtB,UAAU,gBAAG;AAAQ,QAAA,OAAO,EAAE0D,cAAjB;AAAiC,QAAA,SAAS,EAAC,UAA3C;AAAsD,QAAA,KAAK,EAAE;AAACgD,UAAAA,eAAe,EAAE;AAAlB,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAA2G,IAT1H,eAUI;AAAQ,QAAA,OAAO,EAAE,MAAMvD,eAAe,CAAC,CAAD,EAAI7B,KAAJ,EAAWD,UAAX,CAAtC;AAA8D,QAAA,SAAS,EAAC,UAAxE;AAAmF,QAAA,KAAK,EAAE;AAACqF,UAAAA,eAAe,EAAEtH;AAAlB,SAA1F;AAAA,kBAAyHN;AAAzH;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAQ,QAAA,MAAM,EAAE4B,mBAAhB;AAAqC,QAAA,OAAO,EAAE,MAAMyC,eAAe,CAAC,CAAD,EAAI7B,KAAJ,EAAWD,UAAX,CAAnE;AAA2F,QAAA,SAAS,EAAC,UAArG;AAAgH,QAAA,KAAK,EAAE;AAACqF,UAAAA,eAAe,EAAE;AAAlB,SAAvH;AAAA,kBAAsJ1H;AAAtJ;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAQ,QAAA,MAAM,EAAE4B,sBAAhB;AAAwC,QAAA,OAAO,EAAE0F,qBAAjD;AAAwE,QAAA,SAAS,EAAC,UAAlF;AAA6F,QAAA,KAAK,EAAE;AAACI,UAAAA,eAAe,EAAE;AAAlB,SAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAgBK1G,UAAU,gBAEX;AAAA,6BACI;AAAK,QAAA,MAAM,EAAEQ,kBAAb;AAAA,kBACKN,QAAQ,gBAET;AAAA,kCACI;AAAA,mCACI;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAgBI;AAAA,sBACKJ,WAAW,CAAC6G,GAAZ,CAAgB,CAACnC,OAAD,EAAUW,KAAV,KAAoB;AACjC,kBAAIO,aAAa,GAAG,CAApB;AACApG,cAAAA,YAAY,CAAC8E,OAAb,CAAqBC,IAAI,IAAI;AACzB,oBAAIA,IAAI,CAACI,SAAL,KAAmBD,OAAO,CAACgB,UAA/B,EAA2C;AACvCE,kBAAAA,aAAa,GAAGrB,IAAI,CAACC,QAArB;AACH;AACJ,eAJD;AAKA,kCACI;AAAA,wCACI;AAAA,4BAAKE,OAAO,CAACqB;AAAb;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAKrB,OAAO,CAACA;AAAb;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA,4BAAKA,OAAO,CAACF;AAAb;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII;AAAA,4BAAKE,OAAO,CAACoC;AAAb;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI;AAAA,4BAAKpC,OAAO,CAACqC;AAAb;AAAA;AAAA;AAAA;AAAA,wBALJ,eAMI;AAAA,4BAAKrF,SAAS,CAACsF,MAAV,CAAiBtC,OAAO,CAACwB,IAAzB;AAAL;AAAA;AAAA;AAAA;AAAA,wBANJ,eAOI;AAAA,4BAAKxB,OAAO,CAACuC;AAAb;AAAA;AAAA;AAAA;AAAA,wBAPJ,eAQI;AAAA,yCAAK;AAAO,oBAAA,IAAI,EAAC,MAAZ;AAAmB,oBAAA,WAAW,EAAC,GAA/B;AAAmC,oBAAA,KAAK,EAAE;AAACC,sBAAAA,QAAQ,EAAE;AAAX,qBAA1C;AAA6D,oBAAA,KAAK,EAAEtB,aAApE;AAAmF,oBAAA,QAAQ,EAAGuB,CAAD,IAAO;AACrGxB,sBAAAA,YAAY,CAACjB,OAAD,EAAUyC,CAAC,CAACC,MAAF,CAASC,KAAnB,CAAZ;AACH;AAFI;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,wBARJ,eAWI;AAAA,yCAAI;AAAM,oBAAA,SAAS,EAAC,OAAhB;AAAwB,oBAAA,KAAK,EAAE;AAACC,sBAAAA,KAAK,EAAE;AAAR,qBAA/B;AAA+C,oBAAA,OAAO,EAAE,MAAO9B,MAAM,CAACxF,WAAD,EAAc0E,OAAd,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,wBAXJ;AAAA,iBAASW,KAAT;AAAA;AAAA;AAAA;AAAA,sBADJ;AAeH,aAtBA;AADL;AAAA;AAAA;AAAA;AAAA,kBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFS,GA6CT/E,WAAW,gBAEX;AAAA,kCACA;AAAA,mCACI;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADA,eAUA;AAAA,sBACKd,YAAY,CAACqH,GAAb,CAAiB,CAACU,UAAD,EAAalC,KAAb,KAAuB;AACrC,kCACI;AAAA,wCACI;AAAA,4BAAKkC,UAAU,CAACzB;AAAhB;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAKyB,UAAU,CAACtB;AAAhB;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA,4BAAKsB,UAAU,CAAC/C;AAAhB;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII;AAAA,4BAAK9C,SAAS,CAACsF,MAAV,CAAiBO,UAAU,CAACrB,IAA5B;AAAL;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI;AAAA,4BAAKxE,SAAS,CAACsF,MAAV,CAAiBO,UAAU,CAACpD,QAA5B;AAAL;AAAA;AAAA;AAAA;AAAA,wBALJ;AAAA,iBAASkB,KAAT;AAAA;AAAA;AAAA;AAAA,sBADJ;AASH,aAVA;AADL;AAAA;AAAA;AAAA;AAAA,kBAVA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFW,gBA2Bf,QAAC,KAAD;AAAO,UAAA,OAAO,EAAErD,OAAhB;AAAyB,UAAA,IAAI,EAAEpC,IAA/B;AAAqC,UAAA,MAAM,EAAE,KAA7C;AAAoD,UAAA,IAAI,EAAC,OAAzD;AAAiE,UAAA,QAAQ,EAAE,IAA3E;AAAiF,UAAA,YAAY,EAAE,KAA/F;AAAsG,UAAA,OAAO,EAAE,CAA/G;AAAkH,UAAA,MAAM,EAAE,CAACA,IAAD,EAAOqF,aAAP,KAAyBF,WAAW,CAACnF,IAAD,EAAOqF,aAAP;AAA9J;AAAA;AAAA;AAAA;AAAA;AAzEA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFW,gBAiFX,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEjD,OAAhB;AAAyB,MAAA,IAAI,EAAEpC,IAA/B;AAAqC,MAAA,IAAI,EAAC,OAA1C;AAAkD,MAAA,MAAM,EAAE,KAA1D;AAAiE,MAAA,YAAY,EAAE,KAA/E;AAAsF,MAAA,OAAO,EAAE;AAA/F;AAAA;AAAA;AAAA;AAAA,YAjGJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsGH;;GA7iBuBhB,W;;KAAAA,W","sourcesContent":["import {useState, useEffect, useMemo} from \"react\"\nimport \"../styles/Popup.css\"\nimport Table from \"../components/Table\"\nimport ProgressBar from \"./ProgressBar\"\nimport * as router from \"./vendorAPI\"\n\nexport default function VendorPopup(props) {\n\n    const [percentage, setPercentage] = useState(0)\n    const [btnText, setBtnText] = useState(\"Order\")\n    const [extraOptionText, setExtraOptionText] = useState(\"\")\n    const [isLoading, setLoading] = useState(true)\n    const [editColor, setEditColor] = useState(\"#76c32d\")\n\n    const [dataToUpdate, setDataToUpdate] = useState([])\n    const [variantsToUpdate, setVariantsToUpdate] = useState([])\n    const [data, setData] = useState([])\n    const [commMethods, setCommMethods] = useState([])\n    const [variantData, setVariantData] = useState([])\n\n    const [isOrdering, setOrdering] = useState(false)\n    const [nextPage, setNextPage] = useState(false)\n    const [reviewOrder, setReviewOrder] = useState(false)\n    const [orderState, setOrderState] = useState(null)\n    const [isOrderItemsHidden, setOrderItemsHidden] = useState(true)\n    const [isExtraOptionHidden, setExtraOptionHidden] = useState(true)\n    const [isManualOrderBtnHidden, setManualOrderBtnHidden] = useState(true)\n\n    const commMethodPlain = props.data.row.values.comm_method\n    var commMethod = commMethodPlain && commMethodPlain.includes(',') ? commMethodPlain.split(',')[0] : commMethodPlain\n    const orderSteps = commMethodPlain && (commMethodPlain.includes(\"call\") || commMethodPlain.includes(\"website\") || commMethodPlain.includes(',')) ? 4 : 3\n\n    const phone = props.values.phone ? `${props.values.phone.slice(0,3)}-${props.values.phone.slice(3,6)}-${props.values.phone.slice(6,)}` : \"\"\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0\n      })\n\n    const columns = useMemo(\n        () => [\n        {\n            Header: 'ID',\n            accessor: 'id', // Product ID\n            sortDescFirst: true\n            },\n          {\n            Header: 'Product',\n            accessor: 'title',\n            sortDescFirst: true\n          },\n          {\n            Header: 'Variant',\n            accessor: 'variant',\n            sortDescFirst: true,\n            show: true\n          },\n          {\n            Header: 'Quantity',\n            accessor: 'quantity',\n            sortDescFirst: true,\n          },\n          {\n            Header: 'Recent Purchases',\n            accessor: 'purchases',\n            sortDescFirst: true,\n          },\n          {\n            Header: 'Stock Level',\n            accessor: 'stockLevel',\n            disableSortBy: true\n          },\n          {\n            Header: 'Recent Order',\n            accessor: 'recentOrder',\n            disableSortBy: true\n          },\n        ],\n        []\n    )\n\n    function getData() {\n        setLoading(true)\n        router.loadVendor(props.values.id).then(data => {\n            if (data) {\n                setData(data.products) // sets the product data for the table\n                setCommMethods(data.commMethods)\n                console.log(data)\n                setLoading(false)\n            }\n        })\n    }\n\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    function chooseProducts(steps) {\n        // Start Order - change to page where we choose which products to order\n        setOrdering(true)\n        setBtnText(\"Next\")\n        setOrderItemsHidden(false)\n        setOrderState(\"Choose Products\")\n        setPercentage(100/steps)\n    }\n\n    function chooseVariants(steps) {\n        // Going to next page of ordering after chose products to choose variants and quantities\n\n        if (dataToUpdate.length > 0) {\n            // Only load variant data if a product was selected\n            setLoading(true)\n            setPercentage(100/steps * 2) // update progress bar\n            setNextPage(true)\n            setOrderState(\"Choose Variants/Qty\")\n           \n            router.loadOrderProducts(dataToUpdate).then(data => {\n            \n                if (data) {\n                    setLoading(false)\n                    setVariantData(data)\n                    setDataToUpdate([]) // empty dataToUpdate from any previous orders\n                    setBtnText(\"Review\")\n                }\n            })\n        } else {\n            alert(\"No products selected\")\n        }\n       \n    }\n\n    function reviewingOrder(steps) {\n\n        // Going to next page to review order and submit or use communication method\n        setNextPage(false)\n        setReviewOrder(true)\n        setPercentage(100/steps * 3) // update progress bar\n        setManualOrderBtnHidden(false)\n        \n\n        if (commMethodPlain && commMethodPlain.includes(',')) {\n            // Multiple communicatoin methods\n            setExtraOptionHidden(false)\n            setExtraOptionText(`${capitalizeFirstLetter(commMethodPlain.split(',')[1])} ${commMethodPlain.split(',')[1] === 'call' ? phone : \"\"}`)\n            setBtnText(`${capitalizeFirstLetter(commMethod)} ${commMethod === 'call' ? phone : \"\"}`)\n            setOrderState(\"Multiple Vendors\")   \n        } else {\n            // Only 1 vendor (as it is for the vast majority)\n            if (commMethodPlain && commMethodPlain.includes(\"website\")) {        \n                setBtnText(\"Order on website\")\n                setOrderState(\"Website Order\")\n            } else if (commMethodPlain && commMethodPlain.includes('call')) {\n                setBtnText(`Call ${phone}`)\n                setOrderState(\"Calling Order\")         \n            } else {\n                setBtnText(\"Submit\")\n                setEditColor(\"#26B1FF\")\n                \n                setOrderState(\"Review Order\")\n            }\n        }\n    }\n\n\n    function orderBtnClicked(btnIndex, phone, orderSteps) {\n        \n        if (!isOrdering) {\n            \n            chooseProducts(orderSteps)\n\n        } else if (orderState === \"Choose Products\") {\n\n            chooseVariants(orderSteps)\n            \n        } else if (orderState === \"Choose Variants/Qty\") {\n            \n            reviewingOrder(orderSteps)\n         \n        } else if (orderState === \"Website Order\") {\n           window.open(\"https://amazon.com\",'_blank') // NEED TO CHANGE\n           setBtnText(\"Submit\")\n           setEditColor(\"#26B1FF\")\n           setManualOrderBtnHidden(true)\n           setOrderState(\"Review Order\")\n           setPercentage(100/orderSteps * 4)\n        } else if (orderState === \"Calling Order\") {\n            setPercentage(100/orderSteps * 4)\n            setBtnText(\"Submit\")\n            setManualOrderBtnHidden(true)\n            setEditColor(\"#26B1FF\")\n            setOrderState(\"Review Order\")\n        } else if (orderState === \"Multiple Vendors\") {\n            // One of the 2 buttons was clicked\n            const method = commMethodPlain.split(',')[btnIndex]\n\n            if (method === \"call\") {\n                // Clicked on the Call button so now need to submit the order\n                setPercentage(100/orderSteps * 4)\n                setBtnText(\"Submit\")\n                setEditColor(\"#26B1FF\")\n                setManualOrderBtnHidden(false)\n                setOrderState(\"Review Order\")\n                setExtraOptionHidden(true)\n            } else if (method === \"website\") {\n                // Clicked on Website so now need to submit the order\n                window.open(\"https://amazon.com\",'_blank') // NEED TO CHANGE\n                setBtnText(\"Submit\")\n                setEditColor(\"#26B1FF\")\n                setManualOrderBtnHidden(false)\n                setOrderState(\"Review Order\")\n                setExtraOptionHidden(true)\n                setPercentage(100/orderSteps * 4)\n            } else {\n                // Clicked on Email or Text so need to send the message which will then save the order\n                sendMessage(btnIndex)\n                setPercentage(100/orderSteps * 4)\n                setOrderState(null)\n                setOrdering(false)\n            }\n        }  else if (orderState === \"Review Order\") {\n            // Submit - save order\n            commMethodPlain.includes(',') ? save() : sendMessage() \n            \n            setOrderState(null)\n            setOrdering(false)\n        } \n    }\n    \n    function backBtnClicked() {\n        // const phone = `${props.values.phone.slice(0,3)}-${props.values.phone.slice(3,6)}-${props.values.phone.slice(6,)}`\n        // const orderSteps = commMethod === \"text\" || commMethod === \"email\" ? 4 : 5\n        if (orderState === \"Choose Products\") {\n            setOrdering(false)\n            setBtnText(\"Order\")\n            setOrderItemsHidden(true)\n            setOrderState(null)\n            setPercentage(0)\n        } else if (orderState === \"Choose Variants/Qty\") {\n            setNextPage(false)\n            setOrderState(\"Choose Products\")\n            setBtnText(\"Next\")\n            setPercentage(100/orderSteps)\n            setVariantData([])\n            setDataToUpdate([])\n            setVariantsToUpdate([])\n        } else if (orderState === \"Website Order\" || orderState === \"Calling Order\" || orderState === \"Multiple Vendors\") {\n            setNextPage(true)\n            setReviewOrder(false)\n            setBtnText(\"Review\")\n            setOrderState(\"Choose Variants/Qty\")\n            setExtraOptionHidden(true)\n            setPercentage(100/orderSteps * 2) // update progress bar\n            setEditColor(\"#76c32d\")\n            setManualOrderBtnHidden(true)\n        } else if (orderState === \"Review Order\") {\n            setPercentage(100/orderSteps * 3) // update progress bar\n            setEditColor(\"#76c32d\")\n            setManualOrderBtnHidden(false)\n            if (commMethodPlain && commMethodPlain.includes(',')) {\n                // Multiple vendors\n                setExtraOptionHidden(false)\n                setExtraOptionText(`${capitalizeFirstLetter(commMethodPlain.split(',')[1])} ${commMethodPlain.split(',')[1] === 'call' ? phone : \"\"}`)\n                setBtnText(`${capitalizeFirstLetter(commMethod)} ${commMethod === 'call' ? phone : \"\"}`)\n                setOrderState(\"Multiple Vendors\")\n                \n            } else {\n                // Only 1 vendor (as it is for the vast majority)\n                if (commMethodPlain && commMethodPlain.includes(\"website\")) {        \n                    setBtnText(\"Order on website\")\n                    setOrderState(\"Website Order\")\n                } else if (commMethodPlain && commMethodPlain.includes('call')) {\n                    setBtnText(`Call ${phone}`)\n                    setOrderState(\"Calling Order\")         \n                } else {\n                    setBtnText(\"Review\")\n                    setReviewOrder(false)\n                    setOrderState(\"Choose Variants/Qty\")\n                    setPercentage(100/orderSteps * 2) // update progress bar\n                    setNextPage(true)\n                }\n            }\n        } \n    }\n\n    function sendMessage(btnIndex) {\n\n        console.log(commMethod)\n\n        if (btnIndex) {\n            commMethod = commMethodPlain.split(',')[btnIndex]\n        }\n\n        commMethod = commMethod.trim()\n\n\n        console.log(commMethod)\n        if (commMethod === \"text\") {\n            router.sendText(props.values.contact_name, dataToUpdate, \"4848885912\").then(data => { // NEED TO CHANGE\n                save()\n            })\n        }\n        else if (commMethod === \"email\") {\n            router.sendEmail(props.values.contact_name, dataToUpdate, \"stepan.cannuscio@gmail.com\").then(data => { // NEED TO CHANGE\n                save()\n            })\n        } else if (commMethod === \"website\" || commMethod === \"call\") {\n            save()\n        } else {\n            alert(\"No communication method for this vendor! Contact Step for help\")\n        }\n    }\n\n    function save() {\n            \n        const order = {\n            vendor: props.data.row.values.id,\n            subtotal: 0,\n            status: \"submitted\"\n        }\n\n        const orderItems = []\n        dataToUpdate.forEach(item => {\n\n            if (item.quantity !== 0 || item.quantity !== \"\") {\n       \n                order.subtotal += item.subtotal\n                orderItems.push({\n                    variant: item.variantId,\n                    subtotal: item.subtotal, // this is the subtotal including multiple qtys\n                    quantity: item.quantity\n                })\n            }\n        \n        })\n     \n        if (dataToUpdate.length > 0) {\n            router.saveOrder(order, orderItems, props.user.id).then(data => {\n            if (data === \"Success\") {\n                props.toggle()\n            } else {\n            }\n         })\n        } \n    }\n\n    function rowSelected(rowData, isAllSelected) {\n        if (rowData === \"all\") {\n            setDataToUpdate([]) // clear before adding all rows to the array to update\n            if (!isAllSelected) { // this means all are selected (it's opposite)\n                data.forEach(item => {\n                    setDataToUpdate(oldArray => [...oldArray, item.id])\n                })\n            } \n        } else {\n            if (!rowData.isSelected) { // this means the row is selected (it's opposite)\n                setDataToUpdate(oldArray => [...oldArray, rowData.values.id])\n            } else {\n                var array = [...dataToUpdate]; // make a separate copy of the array\n                var index = array.indexOf(rowData.values.id)\n                if (index !== -1) {\n                    array.splice(index, 1);\n                    setDataToUpdate(array);\n                }        \n            } \n        }\n       \n    }\n\n    function remove(data, element) {\n        variantData.forEach((item, index) => {\n            if (item.variant_id === element.variant_id) {\n                var array = [...data]; // make a separate copy of the array\n                if (index !== -1) {\n                    array.splice(index, 1);\n                    setVariantData(array);\n                }             \n            }\n        })\n\n        if (dataToUpdate.length > 0) {\n            dataToUpdate.forEach((item, index) => {   \n                if (item.variantId === element.variant_id) {\n                    var array = [...dataToUpdate]; // make a separate copy of the array\n                    if (index !== -1) {\n                        array.splice(index, 1);\n                        setDataToUpdate(array);\n                    } \n                }\n            })\n        }\n    }\n\n    function addOrderItem(data, orderQuantity) {\n        const newData = {\n            productTitle: data.title,\n            productId: data.id,\n            variantTitle: data.variant,\n            variantId: data.variant_id,\n            cost: data.cost,\n            quantity: orderQuantity,\n            subtotal: Math.round(data.cost * orderQuantity * 100, 2) / 100\n        }\n\n        if (variantsToUpdate.includes(data.variant_id)) {\n            // Item is in array so let's update it\n            dataToUpdate.forEach((item, index) => {\n                \n                if (item.variantId === data.variant_id) {\n                    var array = [...dataToUpdate]; // make a separate copy of the array\n                    if (index !== -1) {\n                        array.splice(index, 1);\n                        setDataToUpdate(array);\n                    } \n                    console.log(newData.quantity)\n                    if (newData.quantity !== \"0\" && newData.quantity !== 0 && newData.quantity !== \"\") {\n                        console.log('are we calling here')\n                        setDataToUpdate(oldArray => [...oldArray, newData])   \n                    } else {\n                        var array = [...variantsToUpdate]; // make a separate copy of the array\n                        if (index !== -1) {\n                            array.splice(index, 1);\n                            setVariantsToUpdate(array);\n                        } \n                    }\n                }\n            })\n        } else {\n            if (newData.quantity !== \"0\" || newData.quantity !== \"\") {\n                setVariantsToUpdate(oldArray => [...oldArray, data.variant_id])\n                setDataToUpdate(oldArray => [...oldArray, newData])\n            }\n        }\n    }\n\n    function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    function manualOrderBtnClicked() {\n        // if (commMethodPlain && commMethodPlain.includes(',')) {\n            setManualOrderBtnHidden(true)\n            setBtnText(\"Submit\")\n            setEditColor(\"#26B1FF\")\n            setOrderState(\"Review Order\")\n            setReviewOrder(true)\n\n            setExtraOptionHidden(true)\n            setPercentage(100/orderSteps * 4) // update progress bar\n        // } else {\n            \n        // }\n    }\n\n  \n\n    if (isLoading) {\n        return <div className=\"loader\"></div>;\n    }\n\n    return (\n        <div>   \n            <div className=\"top-content\">\n                <ProgressBar percentage={percentage}/>\n                <span className=\"close\" onClick={() =>  props.toggle()}>&times;    </span>\n                <h2 >{data[0] ? data[0].name : \"No Products\"}</h2>\n                <p>Products: {props.values.products}</p>\n                <p>Low Products: {props.values.low_products}</p>\n                <p>Contact Name: {props.values.contact_name}</p>\n                <p>Email: {props.values.email}</p>\n                <p>Phone: {props.values.phone}</p>\n                {isOrdering ? <button onClick={backBtnClicked} className=\"edit-btn\" style={{backgroundColor: \"grey\"}}>Back</button> : null }\n                <button onClick={() => orderBtnClicked(0, phone, orderSteps)} className=\"edit-btn\" style={{backgroundColor: editColor}}>{btnText}</button>\n                <button hidden={isExtraOptionHidden} onClick={() => orderBtnClicked(1, phone, orderSteps)} className=\"edit-btn\" style={{backgroundColor: \"#76c32d\"}}>{extraOptionText}</button>\n                <button hidden={isManualOrderBtnHidden} onClick={manualOrderBtnClicked} className=\"edit-btn\" style={{backgroundColor: \"orange\"}}>Manual Order</button>\n            </div>\n      \n            {isOrdering \n            ?\n            <div>\n                <div hidden={isOrderItemsHidden}>\n                    {nextPage \n                    ?\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Product</th>\n                                <th>Variant</th>\n                                <th>Current Quantity</th>\n                                <th>Recent Purchases</th>\n                                <th>Stock Level</th>\n                                <th>Cost/unit</th>\n                                <th>Recent Order</th>\n                                <th>Order Quantity</th>\n                                \n                                <th>Remove</th>\n                                \n                            </tr>\n                        </thead>\n                        <tbody>\n                            {variantData.map((variant, index) => {\n                                var orderQuantity = 0\n                                dataToUpdate.forEach(item => {\n                                    if (item.variantId === variant.variant_id) {\n                                        orderQuantity = item.quantity\n                                    }\n                                })\n                                return (\n                                    <tr key={index}>\n                                        <td>{variant.title}</td>\n                                        <td>{variant.variant}</td>\n                                        <td>{variant.quantity}</td>\n                                        <td>{variant.purchases}</td>\n                                        <td>{variant.stockLevel}</td>\n                                        <td>{formatter.format(variant.cost)}</td>\n                                        <td>{variant.recentOrder}</td>\n                                        <td ><input type=\"text\" placeholder=\"0\" style={{fontSize: \"16px\"}}value={orderQuantity} onChange={(e) => {\n                                            addOrderItem(variant, e.target.value) \n                                        }}/></td>\n                                        <td><span className=\"close\" style={{color: \"red\"}} onClick={() =>  remove(variantData, variant)}>&times;</span></td>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                    :\n                    reviewOrder \n                    ?\n                    <table>\n                    <thead>\n                        <tr>\n                            <th>Product</th>\n                            <th>Variant</th>\n                            <th>Quantity</th>\n                            <th>Cost/unit</th>\n                            <th>Subtotal</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {dataToUpdate.map((order_item, index) => {\n                            return (\n                                <tr key={index}>\n                                    <td>{order_item.productTitle}</td>\n                                    <td>{order_item.variantTitle}</td>\n                                    <td>{order_item.quantity}</td>\n                                    <td>{formatter.format(order_item.cost)}</td>\n                                    <td>{formatter.format(order_item.subtotal)}</td>\n                                </tr>\n                            )  \n                        })}\n                    </tbody>\n                </table>\n                    :\n                <Table columns={columns} data={data} search={false} type=\"order\" checkbox={true} popupEnabled={false} perPage={5} update={(data, isAllSelected) => rowSelected(data, isAllSelected)}/>\n                }     \n                </div>\n            </div>\n            :\n            <Table columns={columns} data={data} type=\"order\" search={false} popupEnabled={false} perPage={5}/>\n}       \n  </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}