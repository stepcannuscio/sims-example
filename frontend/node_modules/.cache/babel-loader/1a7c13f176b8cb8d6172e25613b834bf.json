{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/Vendors/VendorPopup.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/Popup.css\";\nimport { useState, useEffect, useRef, useMemo } from \"react\";\nimport MessageOption from \"./MessageOption\";\nimport Table from \"../components/Table\";\nimport * as router from \"./vendorAPI\";\nexport default function VendorPopup(props) {\n  _s();\n\n  console.log(props);\n  const variantSelect = useRef();\n  const productSelect = useRef();\n  const quantityInput = useRef();\n  const [btnText, setBtnText] = useState(\"Order\");\n  const [isOrdering, setOrdering] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [editColor, setEditColor] = useState(\"#76c32d\");\n  const [isOrderItemsHidden, setOrderItemsHidden] = useState(true);\n  const [isOrderOptionsHidden, setOrderOptionsHidden] = useState(true);\n  const [dataToUpdate, setDataToUpdate] = useState([]);\n  const [data, setData] = useState([]);\n  const [variantData, setVariantData] = useState([]);\n  const [isAddBtnHidden, setAddBtnHidden] = useState(true);\n  const [isQuantityHidden, setQuantityHidden] = useState(true);\n  const [quantity, setQuantity] = useState(0);\n  const [isProductSelectHidden, setProductSelectHidden] = useState(true);\n  const [isVariantSelectHidden, setVariantSelectHidden] = useState(true);\n  const [productSelected, setProductSelected] = useState({\n    title: \"\",\n    id: \"\"\n  });\n  const [variantSelected, setVariantSelected] = useState({\n    title: \"\",\n    id: \"\",\n    cost: 0\n  });\n  const [nextPage, setNextPage] = useState(false);\n  const comm_method = props.data.row.values.comm_method;\n  console.log(dataToUpdate);\n  console.log(data);\n  const orderItemsStyle = {\n    color: \"black\",\n    margin: \"20px 0\",\n    padding: \"10px 20px\",\n    backgroundColor: \"#efefef\",\n    textAlign: \"center\"\n  };\n  const columns = useMemo(() => [{\n    Header: 'ID',\n    accessor: 'id',\n    // Product ID\n    sortDescFirst: true\n  }, {\n    Header: 'Product',\n    accessor: 'title',\n    sortDescFirst: true\n  }, //   {\n  //     Header: 'Variant',\n  //     accessor: 'variant',\n  //     sortDescFirst: true\n  //   },\n  {\n    Header: 'Quantity',\n    accessor: 'quantity',\n    sortDescFirst: true\n  }, {\n    Header: 'Recent Purchases',\n    accessor: 'purchases',\n    sortDescFirst: true\n  }, {\n    Header: 'Stock Level',\n    accessor: 'stockLevel',\n    sortDescFirst: true\n  }, {\n    Header: 'Recent Order',\n    accessor: 'recentOrder',\n    sortDescFirst: true\n  }], []);\n\n  function getVendor() {\n    setLoading(true);\n    router.loadVendor(props.values.id).then(data => {\n      if (data) {\n        console.log(data);\n        setData(data);\n        setLoading(false);\n      } else {\n        console.log(\"Error getting product data\");\n      }\n    });\n  }\n\n  useEffect(() => {\n    getVendor();\n  }, []);\n\n  function getVariants(e, hasVariants) {\n    router.loadVariants(e.target.value).then(data => {\n      console.log('result of getProduct');\n\n      if (data) {\n        //   console.log(res.data)\n        if (hasVariants) {\n          setVariantData(data);\n          setVariantSelectHidden(false);\n        } else {\n          setVariantSelected({\n            id: data[0].id,\n            title: data[0].text,\n            cost: data[0].cost\n          });\n          setQuantityHidden(false); //   console.log(res.data)\n        } //   setLoading(false)      \n\n      } else {\n        console.log(\"Error getting product data\");\n      }\n    });\n  }\n\n  function orderClicked() {\n    if (btnText === \"Order\") {\n      // Start Order - add products\n      setOrdering(true);\n      setBtnText(\"Next\");\n      setOrderItemsHidden(false);\n    } else if (btnText === \"Next\") {\n      // Going to next page of ordering after added products\n      setNextPage(true);\n      router.loadOrderProducts(dataToUpdate).then(data => {\n        console.log('result of getProduct');\n\n        if (data) {\n          console.log('yuheee');\n          console.log(data);\n          setVariantData(data);\n        }\n      }); // setOrderOptionsHidden(false)\n      // setEditColor(\"#26B1FF\")\n      // setBtnText(\"Submit\")\n    } else {\n      // Submit - save order\n      save();\n    }\n  }\n\n  function selectChanged(e) {\n    // Get the text and remove the stockLevel at the end\n    // console.log(text.slice(0,-1).join(\" \"))\n    // console.log(e.target.label)\n    // console.log(e.target.text)\n    if (e.target.id === \"productFilter\") {\n      const text = e.target[e.target.selectedIndex].label.split(\" \").slice(0, -1).join(\" \");\n      setProductSelected({\n        id: e.target.value,\n        title: text\n      }); // Check to see if has variants\n\n      var hasVariants = false;\n\n      if (e.target[e.target.selectedIndex].text != 1) {\n        hasVariants = true;\n      }\n\n      getVariants(e, hasVariants);\n    } else {\n      const text = e.target[e.target.selectedIndex].text;\n      setVariantSelected({\n        id: e.target.value.split(',')[0],\n        title: text,\n        cost: e.target.value.split(',')[1]\n      });\n      setQuantityHidden(false);\n    }\n  }\n\n  function save() {\n    const order = {\n      vendor: props.data.row.values.id,\n      subtotal: 0,\n      status: \"submitted\"\n    };\n    const orderItems = [];\n    dataToUpdate.forEach(item => {\n      console.log(item.subtotal);\n      order.subtotal += item.subtotal;\n      orderItems.push({\n        variant: item.variantId,\n        subtotal: item.subtotal,\n        // this is the subtotal including multiple qtys\n        quantity: item.quantity\n      });\n    });\n\n    if (dataToUpdate.length > 0) {\n      router.saveOrder(order, orderItems, props.user.id).then(data => {\n        console.log(data);\n\n        if (data === \"Success\") {\n          props.toggle();\n        } else {\n          console.log('error saving');\n        }\n      });\n    }\n  }\n\n  function handleChange(e) {\n    setQuantity(e.target.value);\n    setAddBtnHidden(false);\n  }\n\n  function addVariant() {\n    const newData = {\n      productTitle: productSelected.title,\n      productId: productSelected.id,\n      variantTitle: variantSelected.title,\n      variantId: variantSelected.id,\n      cost: variantSelected.cost,\n      quantity: quantity,\n      subtotal: Math.round(variantSelected.cost * quantity * 100, 2) / 100\n    };\n    setDataToUpdate(oldArray => [...oldArray, newData]);\n    resetOrderItem();\n  }\n\n  function resetOrderItem() {\n    setProductSelected(\"\");\n    setVariantSelected(\"\");\n    setQuantity(0);\n    setProductSelectHidden(true);\n    setVariantSelectHidden(true);\n    setQuantityHidden(true);\n    setAddBtnHidden(true);\n    console.log(variantSelect.current.value);\n    variantSelect.current.value = \"none\";\n    productSelect.current.value = \"none\";\n    quantityInput.current.value = \"\";\n    quantityInput.current.placeholder = \"0\";\n  }\n\n  function rowSelected(data) {\n    // console.log(data)\n    // console.log(!data.isSelected)\n    if (!data.isSelected) {\n      // I don't know why but this is reversed when receiving the data\n      setDataToUpdate(oldArray => [...oldArray, data.values.id]);\n    } else {\n      var array = [...dataToUpdate]; // make a separate copy of the array\n\n      var index = array.indexOf(data.values.id);\n\n      if (index !== -1) {\n        array.splice(index, 1);\n        setDataToUpdate(array);\n      }\n    }\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => props.toggle(),\n        children: \"\\xD7    \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data[0] ? data[0].name : \"Default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Products: \", props.values.products]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Low Products: \", props.values.low_products]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: orderClicked,\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: editColor\n        },\n        children: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this), isOrdering ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        hidden: isOrderItemsHidden,\n        children: nextPage ? /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Variant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Current Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Recent Purchases\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Stock Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Recent Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Cost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Order Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: vaiantData.map((variant, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.product\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.variant\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.purchases\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.stockLevel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.recentOrder\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.cost\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data,\n          search: false,\n          checkbox: true,\n          popupEnabled: false,\n          perPage: 5,\n          update: data => rowSelected(data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        hidden: isOrderOptionsHidden,\n        children: comm_method === \"email\" ? /*#__PURE__*/_jsxDEV(MessageOption, {\n          type: \"Email\",\n          contact_name: props.values.contact_name,\n          to: \"stepan.cannuscio@gmail.com\",\n          dataToUpdate: dataToUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 21\n        }, this) : comm_method === \"call\" ? /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"tel:4848885912\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Call: 484-888-5912\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }, this) : comm_method === \"text\" ? /*#__PURE__*/_jsxDEV(MessageOption, {\n          type: \"Text\",\n          contact_name: props.values.contact_name,\n          to: \"4848885912\",\n          dataToUpdate: dataToUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }, this) : comm_method === \"website\" ? /*#__PURE__*/_jsxDEV(MessageOption, {\n          type: \"Website\",\n          contact_name: props.values.contact_name,\n          to: \"https://amazon.com\",\n          dataToUpdate: dataToUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Not sure about this one!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data,\n      search: false,\n      popupEnabled: false,\n      perPage: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 13\n    }, this) // <table style={{textAlign: \"center\"}}>\n    //     <thead >\n    //         <tr>\n    //             <th className=\"table-header\">Product</th>\n    //             <th className=\"table-header\">Quantity</th>\n    //             <th className=\"table-header\">Purchases (last 30 days)</th>\n    //             <th className=\"table-header\">Stock Level</th>\n    //             <th className=\"table-header\">Last Order</th>\n    //         </tr>\n    //     </thead>\n    //     <tbody>\n    //     {data.map((item, index) => {\n    //         var recentOrder = \"\"\n    //         if (item.status && item.status.split(',')[0] === \"completed\") {\n    //             recentOrder = `${item.quantity_ordered.split(',')[0]} units received on ${new Date(item.completed_date.split(',')[0]).toDateString()}`\n    //         } else if (item.status && item.status.split(',')[0] === \"fulfilled\") {\n    //             recentOrder = `Fulfilled on ${new Date(item.fulfilled_date.split(',')[0]).toDateString()} - ${item.tracking.split(',')[0]}`\n    //         } else if (item.status && item.status.split(',')[0] === \"submitted\") {\n    //             recentOrder = `Submitted order for ${item.quantity_ordered.split(',')[0]} units on ${new Date(item.submitted_date.split(',')[0]).toDateString()}`\n    //         }\n    //         return (\n    //             <tr key={index}>\n    //                 <td className=\"table-cell\">{item.title}</td>\n    //                 <td className=\"table-cell\">{item.quantity}</td>\n    //                 <td className=\"table-cell\">{item.purchases}</td>\n    //                 <td className=\"table-cell\">{item.stockLevel}</td>\n    //                 <td className=\"table-cell\">{recentOrder}</td>\n    //             </tr>\n    //             ) \n    //         })\n    //     }\n    //     </tbody>\n    // </table>\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VendorPopup, \"pvQOstuv1g6pOXZOItot5U2NT3s=\");\n\n_c = VendorPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"VendorPopup\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/Vendors/VendorPopup.js"],"names":["useState","useEffect","useRef","useMemo","MessageOption","Table","router","VendorPopup","props","console","log","variantSelect","productSelect","quantityInput","btnText","setBtnText","isOrdering","setOrdering","isLoading","setLoading","editColor","setEditColor","isOrderItemsHidden","setOrderItemsHidden","isOrderOptionsHidden","setOrderOptionsHidden","dataToUpdate","setDataToUpdate","data","setData","variantData","setVariantData","isAddBtnHidden","setAddBtnHidden","isQuantityHidden","setQuantityHidden","quantity","setQuantity","isProductSelectHidden","setProductSelectHidden","isVariantSelectHidden","setVariantSelectHidden","productSelected","setProductSelected","title","id","variantSelected","setVariantSelected","cost","nextPage","setNextPage","comm_method","row","values","orderItemsStyle","color","margin","padding","backgroundColor","textAlign","columns","Header","accessor","sortDescFirst","getVendor","loadVendor","then","getVariants","e","hasVariants","loadVariants","target","value","text","orderClicked","loadOrderProducts","save","selectChanged","selectedIndex","label","split","slice","join","order","vendor","subtotal","status","orderItems","forEach","item","push","variant","variantId","length","saveOrder","user","toggle","handleChange","addVariant","newData","productTitle","productId","variantTitle","Math","round","oldArray","resetOrderItem","current","placeholder","rowSelected","isSelected","array","index","indexOf","splice","name","products","low_products","vaiantData","map","product","purchases","stockLevel","recentOrder","contact_name"],"mappings":"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","sourcesContent":["import \"../styles/Popup.css\"\nimport {useState, useEffect, useRef, useMemo} from \"react\"\nimport MessageOption from \"./MessageOption\"\nimport Table from \"../components/Table\"\nimport * as router from \"./vendorAPI\"\n\n\nexport default function VendorPopup(props) {\n\n    console.log(props)\n\n    const variantSelect = useRef()\n    const productSelect = useRef()\n    const quantityInput = useRef()\n\n    const [btnText, setBtnText] = useState(\"Order\")\n    const [isOrdering, setOrdering] = useState(false)\n    const [isLoading, setLoading] = useState(true)\n    const [editColor, setEditColor] = useState(\"#76c32d\")\n    const [isOrderItemsHidden, setOrderItemsHidden] = useState(true)\n    const [isOrderOptionsHidden, setOrderOptionsHidden] = useState(true)\n    const [dataToUpdate, setDataToUpdate] = useState([])\n    const [data, setData] = useState([])\n\n    const [variantData, setVariantData] = useState([])\n    const [isAddBtnHidden, setAddBtnHidden] = useState(true)\n    const [isQuantityHidden, setQuantityHidden] = useState(true)\n    const [quantity, setQuantity] = useState(0)\n    const [isProductSelectHidden, setProductSelectHidden] = useState(true)\n    const [isVariantSelectHidden, setVariantSelectHidden] = useState(true)\n    const [productSelected, setProductSelected] = useState({title: \"\", id: \"\"})\n    const [variantSelected, setVariantSelected] = useState({title: \"\", id: \"\", cost: 0})\n    const [nextPage, setNextPage] = useState(false)\n    const comm_method = props.data.row.values.comm_method\n\n    console.log(dataToUpdate)\n    console.log(data)\n\n    const orderItemsStyle = {\n        color: \"black\", \n        margin: \"20px 0\", \n        padding: \"10px 20px\", \n        backgroundColor: \"#efefef\", \n        textAlign: \"center\"\n    }\n\n\n    const columns = useMemo(\n        () => [\n        {\n            Header: 'ID',\n            accessor: 'id', // Product ID\n            sortDescFirst: true\n            },\n          {\n            Header: 'Product',\n            accessor: 'title',\n            sortDescFirst: true\n          },\n        //   {\n        //     Header: 'Variant',\n        //     accessor: 'variant',\n        //     sortDescFirst: true\n        //   },\n          {\n            Header: 'Quantity',\n            accessor: 'quantity',\n            sortDescFirst: true,\n          },\n          {\n            Header: 'Recent Purchases',\n            accessor: 'purchases',\n            sortDescFirst: true,\n          },\n          {\n            Header: 'Stock Level',\n            accessor: 'stockLevel',\n            sortDescFirst: true,\n          },\n          {\n            Header: 'Recent Order',\n            accessor: 'recentOrder',\n            sortDescFirst: true,\n          },\n        ],\n        []\n      )\n\n\n    function getVendor() {\n        setLoading(true)\n        router.loadVendor(props.values.id).then(data => {\n            if (data) {\n                console.log(data)\n                setData(data)\n                setLoading(false)\n            } else {\n                console.log(\"Error getting product data\")\n            }\n        });\n      }\n\n      useEffect(() => {\n        getVendor()\n    }, []);\n\n    function getVariants(e, hasVariants) {\n        router.loadVariants(e.target.value).then(data => {\n          console.log('result of getProduct')\n          if (data) {\n            //   console.log(res.data)\n\n              if (hasVariants) {\n                setVariantData(data)\n                setVariantSelectHidden(false)\n              } else {\n                setVariantSelected({\n                    id: data[0].id,\n                    title: data[0].text,\n                    cost: data[0].cost\n                })\n                setQuantityHidden(false)\n                //   console.log(res.data)\n              }\n              \n            //   setLoading(false)      \n          } else {\n              console.log(\"Error getting product data\")\n          }\n      });\n    }\n\n    function orderClicked() {\n        if (btnText === \"Order\") {\n            // Start Order - add products\n            setOrdering(true)\n            setBtnText(\"Next\")\n            setOrderItemsHidden(false)\n\n        } else if (btnText === \"Next\") {\n            // Going to next page of ordering after added products\n\n            setNextPage(true)\n\n            router.loadOrderProducts(dataToUpdate).then(data => {\n                  console.log('result of getProduct')\n                  if (data) {\n                    console.log('yuheee')\n                    console.log(data)\n                    setVariantData(data)\n                  }\n            })\n            \n            // setOrderOptionsHidden(false)\n            // setEditColor(\"#26B1FF\")\n            // setBtnText(\"Submit\")\n\n        } else {\n            // Submit - save order\n            save()\n        }\n    }\n\n    function selectChanged(e) {\n\n        // Get the text and remove the stockLevel at the end\n        \n        // console.log(text.slice(0,-1).join(\" \"))\n        // console.log(e.target.label)\n        // console.log(e.target.text)\n        if (e.target.id === \"productFilter\") {\n\n            const text = e.target[e.target.selectedIndex].label.split(\" \").slice(0,-1).join(\" \")\n\n            setProductSelected({\n                id: e.target.value,\n                title: text\n            })\n            // Check to see if has variants\n            var hasVariants = false\n            if (e.target[e.target.selectedIndex].text != 1) {\n                hasVariants = true\n            } \n\n            getVariants(e, hasVariants)\n            \n          \n            \n        } else {\n\n            const text = e.target[e.target.selectedIndex].text\n            setVariantSelected({\n                id: e.target.value.split(',')[0],\n                title: text,\n                cost: e.target.value.split(',')[1]\n            })\n            setQuantityHidden(false)\n        }\n    }\n\n    function save() {\n        const order = {\n            vendor: props.data.row.values.id,\n            subtotal: 0,\n            status: \"submitted\"\n        }\n\n        const orderItems = []\n        dataToUpdate.forEach(item => {\n            console.log(item.subtotal)\n       \n                order.subtotal += item.subtotal\n                orderItems.push({\n                    variant: item.variantId,\n                    subtotal: item.subtotal, // this is the subtotal including multiple qtys\n                    quantity: item.quantity\n                })\n        \n        })\n     \n        if (dataToUpdate.length > 0) {\n            router.saveOrder(order, orderItems, props.user.id).then(data => {\n                console.log(data)\n            if (data === \"Success\") {\n                props.toggle()\n            } else {\n                console.log('error saving')\n            }\n         })\n        } \n    }\n    \n\n    function handleChange(e) {\n        setQuantity(e.target.value)\n        setAddBtnHidden(false)\n    }\n\n    function addVariant() {\n        const newData = {\n            productTitle: productSelected.title,\n            productId: productSelected.id,\n            variantTitle: variantSelected.title,\n            variantId: variantSelected.id,\n            cost: variantSelected.cost,\n            quantity: quantity,\n            subtotal: Math.round(variantSelected.cost * quantity * 100, 2) / 100\n        }\n        setDataToUpdate(oldArray => [...oldArray, newData])\n\n        resetOrderItem()\n    }\n\n    function resetOrderItem() {\n        setProductSelected(\"\")\n        setVariantSelected(\"\")\n        setQuantity(0)\n        setProductSelectHidden(true)\n        setVariantSelectHidden(true)\n        setQuantityHidden(true)\n        setAddBtnHidden(true)\n        console.log(variantSelect.current.value)\n        variantSelect.current.value = \"none\"\n        productSelect.current.value = \"none\"\n        quantityInput.current.value = \"\"\n        quantityInput.current.placeholder = \"0\"\n    }\n\n    function rowSelected(data) {\n        // console.log(data)\n        // console.log(!data.isSelected)\n        if (!data.isSelected) { // I don't know why but this is reversed when receiving the data\n            setDataToUpdate(oldArray => [...oldArray, data.values.id])\n        } else {\n            var array = [...dataToUpdate]; // make a separate copy of the array\n            var index = array.indexOf(data.values.id)\n            if (index !== -1) {\n                array.splice(index, 1);\n                setDataToUpdate(array);\n            }        \n     }\n\n        \n    }\n\n    if (isLoading) {\n        return <div className=\"loader\"></div>;\n    }\n\n    return (\n        <div>\n            <div className=\"top-content\">\n                <span className=\"close\" onClick={() =>  props.toggle()}>&times;    </span>\n                <h2 >{data[0] ? data[0].name : \"Default\"}</h2>\n                <p>Products: {props.values.products}</p>\n                <p>Low Products: {props.values.low_products}</p>\n                <button onClick={orderClicked} className=\"edit-btn\" style={{backgroundColor: editColor}}>{btnText}</button>\n\n                \n            </div>\n      \n            {isOrdering \n\n            ?\n            <div>\n                <div hidden={isOrderItemsHidden}>\n                    {/* <button style={{display: \"block\"}} onClick={() => setProductSelectHidden(false)}>New Product</button> */}\n                    {/* <select ref={productSelect} hidden={isProductSelectHidden} onChange={selectChanged} defaultValue=\"none\" id=\"productFilter\" name=\"productFilter\">\n                        <option value=\"none\">Choose Product:</option>\n                        {data.map((product, index) => {\n                            return (\n                                <option key={index} label={`${product.title} (${product.stockLevel})`} value={product.id}>{product.variants}</option>\n                            )\n                        })}\n                    </select> */}\n                    \n                    \n\n                    {nextPage \n                    ?\n\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Product</th>\n                                <th>Variant</th>\n                                <th>Current Quantity</th>\n                                <th>Recent Purchases</th>\n                                <th>Stock Level</th>\n                                <th>Recent Order</th>\n                                <th>Cost</th>\n                                <th>Order Quantity</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {vaiantData.map((variant, index) => {\n                           \n                                    return (\n                                        <tr key={index}>\n                                            <td>{variant.product}</td>\n                                            <td>{variant.variant}</td>\n                                            <td>{variant.quantity}</td>\n                                            <td>{variant.purchases}</td>\n                                            <td>{variant.stockLevel}</td>\n                                            <td>{variant.recentOrder}</td>\n                                            <td>{variant.cost}</td>\n                                            <input type=\"text\" placeholder=\"0\"/>\n                                        </tr>\n                                    )\n                                \n                            })}\n                        </tbody>\n                    </table>\n\n                    :\n                    <Table columns={columns} data={data} search={false} checkbox={true} popupEnabled={false} perPage={5} update={(data) => rowSelected(data)}/>\n                        }\n              \n                    {/* <select ref={variantSelect} hidden={isVariantSelectHidden} onChange={selectChanged} defaultValue=\"none\" id=\"variantFilter\" name=\"variantFilter\">\n                    <option value=\"none\">Choose Variant:</option>\n                        {variantData.map((variant, index) => {\n                            return (\n                                <option key={index} value={[variant.id, variant.cost]}>{variant.title}</option>\n                            )\n                        })}\n                    </select> */}\n                    {/* <input ref={quantityInput} hidden={isQuantityHidden} placeholder={quantity} onChange={handleChange} />\n                    <button hidden={isAddBtnHidden} onClick={addVariant}>Add</button>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Product</th>\n                                <th>Variant</th>\n                                <th>Quantity</th>\n                                <th>Cost/unit</th>\n                                <th>Subtotal</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {dataToUpdate.map((order_item, index) => {\n                           \n                                    return (\n                                        <tr key={index}>\n                                            <td>{order_item.productTitle}</td>\n                                            <td>{order_item.variantTitle}</td>\n                                            <td>{order_item.quantity}</td>\n                                            <td>${order_item.cost}</td>\n                                            <td>${order_item.subtotal}</td>\n                                        </tr>\n                                    )\n                                \n                            })}\n                        </tbody>\n                    </table> */}\n                    \n            \n                    \n                </div>\n                <div hidden={isOrderOptionsHidden}>\n                    {comm_method === \"email\" \n                    ?\n                    <MessageOption type=\"Email\" contact_name={props.values.contact_name} to=\"stepan.cannuscio@gmail.com\" dataToUpdate={dataToUpdate} />\n                    :\n                                \n                    comm_method === \"call\" \n                    ?\n                    <a href=\"tel:4848885912\"><button>Call: 484-888-5912</button></a>\n\n                    :\n                    comm_method === \"text\" \n                    ?\n                    <MessageOption type=\"Text\" contact_name={props.values.contact_name} to=\"4848885912\" dataToUpdate={dataToUpdate} />\n                    :\n                    comm_method === \"website\"\n                    ?\n                    <MessageOption type=\"Website\" contact_name={props.values.contact_name} to=\"https://amazon.com\" dataToUpdate={dataToUpdate} />\n                    :\n                    <p>Not sure about this one!</p>\n                    }           \n                        \n                       \n                        \n                </div>\n       \n        \n            {/* <table style={{textAlign: \"center\"}}>\n            <thead >\n                <tr>\n                    <th className=\"table-header\">Product</th>\n                    <th className=\"table-header\">Quantity</th>\n                    <th className=\"table-header\">Purchases (last 30 days)</th>\n                    <th className=\"table-header\">Stock Level</th>\n                    <th className=\"table-header\">Last Order</th>\n                </tr>\n            </thead>\n\n            <tbody>\n            {data.map((item, index) => {\n                var recentOrder = \"\"\n                if (item.status && item.status.split(',')[0] === \"completed\") {\n                    recentOrder = `${item.quantity_ordered.split(',')[0]} units received on ${new Date(item.completed_date.split(',')[0]).toDateString()}`\n                } else if (item.status && item.status.split(',')[0] === \"fulfilled\") {\n                    recentOrder = `Fulfilled on ${new Date(item.fulfilled_date.split(',')[0]).toDateString()} - ${item.tracking.split(',')[0]}`\n                } else if (item.status && item.status.split(',')[0] === \"submitted\") {\n                    recentOrder = `Submitted order for ${item.quantity_ordered.split(',')[0]} units on ${new Date(item.submitted_date.split(',')[0]).toDateString()}`\n                }\n                \n                return (\n                    <tr key={index}>\n                        <td className=\"table-cell\">{item.title}</td>\n                        <td className=\"table-cell\">{item.quantity}</td>\n                        <td className=\"table-cell\">{item.purchases}</td>\n                        <td className=\"table-cell\">{item.stockLevel}</td>\n                        <td className=\"table-cell\">{recentOrder}</td>\n                        \n                    </tr>\n                    ) \n                })\n            }\n            </tbody>\n        </table>\n        </div> */}\n        </div>\n    \n            :\n\n            <Table columns={columns} data={data} search={false} popupEnabled={false} perPage={5}/>\n    \n            // <table style={{textAlign: \"center\"}}>\n            //     <thead >\n            //         <tr>\n            //             <th className=\"table-header\">Product</th>\n            //             <th className=\"table-header\">Quantity</th>\n            //             <th className=\"table-header\">Purchases (last 30 days)</th>\n            //             <th className=\"table-header\">Stock Level</th>\n            //             <th className=\"table-header\">Last Order</th>\n            //         </tr>\n            //     </thead>\n\n            //     <tbody>\n            //     {data.map((item, index) => {\n            //         var recentOrder = \"\"\n            //         if (item.status && item.status.split(',')[0] === \"completed\") {\n            //             recentOrder = `${item.quantity_ordered.split(',')[0]} units received on ${new Date(item.completed_date.split(',')[0]).toDateString()}`\n            //         } else if (item.status && item.status.split(',')[0] === \"fulfilled\") {\n            //             recentOrder = `Fulfilled on ${new Date(item.fulfilled_date.split(',')[0]).toDateString()} - ${item.tracking.split(',')[0]}`\n            //         } else if (item.status && item.status.split(',')[0] === \"submitted\") {\n            //             recentOrder = `Submitted order for ${item.quantity_ordered.split(',')[0]} units on ${new Date(item.submitted_date.split(',')[0]).toDateString()}`\n            //         }\n                    \n            //         return (\n            //             <tr key={index}>\n            //                 <td className=\"table-cell\">{item.title}</td>\n            //                 <td className=\"table-cell\">{item.quantity}</td>\n            //                 <td className=\"table-cell\">{item.purchases}</td>\n            //                 <td className=\"table-cell\">{item.stockLevel}</td>\n            //                 <td className=\"table-cell\">{recentOrder}</td>\n                            \n            //             </tr>\n            //             ) \n            //         })\n            //     }\n            //     </tbody>\n            // </table>\n}       \n  </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}