{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Products/ProductPopup.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/Popup.css\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport * as router from \"./productAPI\";\nexport default function ProductPopup(props) {\n  _s();\n\n  const [btnText, setBtnText] = useState(\"Edit\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [editColor, setEditColor] = useState(\"#76c32d\");\n  const [dataToUpdate, setDataToUpdate] = useState([]);\n  const [data, setData] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const history = useHistory();\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  const imageStyle = {\n    width: \"15%\",\n    margin: \"20px 0\",\n    display: \"inline-block\",\n    float: \"left\"\n  };\n  const titleStyle = {\n    fontSize: \"30px\"\n  };\n\n  function getData() {\n    setLoading(true);\n    router.loadProduct(props.values.id).then(data => {\n      if (data) {\n        setData(data);\n        setLoading(false);\n      }\n    });\n  }\n\n  function editBtnClicked(e) {\n    if (btnText === \"Edit\") {\n      setBtnText(\"Save\");\n    } else {\n      // Save data\n      const updateDict = {};\n      dataToUpdate.forEach(item => {\n        updateDict[item.id] = item.quantity;\n      });\n\n      if (dataToUpdate.length > 0) {\n        router.updateProduct(props.values.id, updateDict).then(data => {\n          if (data === \"Success\") {\n            setBtnText(\"Edit\");\n            getData();\n          } else {\n            setBtnText(\"Edit\");\n          }\n        });\n      } else {\n        setBtnText(\"Edit\");\n      }\n    }\n\n    setIsEditing(!isEditing);\n    setEditColor(editColor === \"#26B1FF\" ? \"#76c32d\" : \"#26B1FF\");\n  }\n\n  function editInput(e) {\n    if (e.target.value !== e.target.placeholder) {\n      // Quantity value has changed for this variant\n      const newData = {\n        \"id\": e.target.id,\n        \"quantity\": e.target.value\n      };\n      setDataToUpdate(oldArray => [...oldArray, newData]);\n    }\n  }\n\n  useEffect(() => {\n    getData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => props.toggle(),\n        children: \"\\xD7    \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), data[0] ? /*#__PURE__*/_jsxDEV(\"img\", {\n        style: imageStyle,\n        src: data[0].image,\n        alt: \"product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 91\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: titleStyle,\n        children: data[0] ? data[0].product_title : \"Default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Shopify ID: \", data[0] ? data[0].shopify_id : \"Default\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: editBtnClicked,\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: editColor\n        },\n        children: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push(\"/vendors\", {\n          vendor: props.values.vendor\n        }),\n        className: \"edit-btn\",\n        style: {\n          color: \"#76c32d\"\n        },\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Variant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Recent Purchases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Stock Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Cost/unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Order Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.purchases\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.stockLevel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: formatter.format(item.cost)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"table-cell\",\n                type: \"text\",\n                onChange: editInput,\n                id: item.variant_id,\n                placeholder: item.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductPopup, \"buHx6gBXkIOXE9ceeZYBMUWlN5Y=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProductPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductPopup\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Products/ProductPopup.js"],"names":["useState","useEffect","useHistory","router","ProductPopup","props","btnText","setBtnText","isEditing","setIsEditing","editColor","setEditColor","dataToUpdate","setDataToUpdate","data","setData","isLoading","setLoading","history","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","imageStyle","width","margin","display","float","titleStyle","fontSize","getData","loadProduct","values","id","then","editBtnClicked","e","updateDict","forEach","item","quantity","length","updateProduct","editInput","target","value","placeholder","newData","oldArray","toggle","image","product_title","shopify_id","backgroundColor","push","vendor","color","textAlign","map","index","title","purchases","stockLevel","format","cost","variant_id"],"mappings":"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","sourcesContent":["import \"../styles/Popup.css\"\nimport {useState, useEffect} from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport * as router from \"./productAPI\"\n\nexport default function ProductPopup(props) {\n\n    const [btnText, setBtnText] = useState(\"Edit\")\n    const [isEditing, setIsEditing] = useState(false)\n    const [editColor, setEditColor] = useState(\"#76c32d\")\n    const [dataToUpdate, setDataToUpdate] = useState([])\n    const [data, setData] = useState([])\n    const [isLoading, setLoading] = useState(false)\n\n    const history = useHistory()\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0\n      })\n\n    const imageStyle = {\n        width: \"15%\",\n        margin: \"20px 0\",\n        display: \"inline-block\",\n        float: \"left\"\n    }\n\n    const titleStyle = {\n        fontSize: \"30px\"\n    }\n\n    function getData() {\n        setLoading(true)\n        router.loadProduct(props.values.id).then(data => {\n            if (data) {\n                setData(data)\n                setLoading(false)      \n            }\n        });\n      }\n\n    function editBtnClicked(e) {\n        if (btnText === \"Edit\") {\n            setBtnText(\"Save\")\n        } else {\n            // Save data\n            const updateDict = {}\n            dataToUpdate.forEach(item => {\n                updateDict[item.id] = item.quantity\n            })\n         \n            if (dataToUpdate.length > 0) {\n                router.updateProduct(props.values.id, updateDict).then(data => {\n                    if (data === \"Success\") {\n                        setBtnText(\"Edit\")\n                        getData()\n                    } else {\n                        setBtnText(\"Edit\")\n                    }\n                })\n            } else {\n                setBtnText(\"Edit\")\n            } \n        }\n        setIsEditing(!isEditing)\n        setEditColor(editColor === \"#26B1FF\" ? \"#76c32d\" : \"#26B1FF\")\n    }\n\n    function editInput(e) {\n        if (e.target.value !== e.target.placeholder) {\n            // Quantity value has changed for this variant\n            const newData = {\n                \"id\": e.target.id,\n                \"quantity\": e.target.value\n            }\n            setDataToUpdate(oldArray => [...oldArray, newData])\n        }\n    }\n\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (isLoading) {\n        return <div className=\"loader\"></div>;\n    }\n    \n    return (\n        <div>\n            <div className=\"top-content\">\n                <span className=\"close\" onClick={() => props.toggle()}>&times;    </span>\n                {data[0]  ? <img style={imageStyle} src={data[0].image} alt=\"product\"/> : <p></p>}\n                \n                <h2 style={titleStyle}>{data[0] ? data[0].product_title : \"Default\"}</h2>\n                \n                <p>Shopify ID: {data[0] ? data[0].shopify_id : \"Default\"}</p>\n                <button onClick={editBtnClicked} className=\"edit-btn\" style={{backgroundColor: editColor}}>{btnText}</button>\n                <button onClick={() => history.push(\"/vendors\", {vendor: props.values.vendor})}className=\"edit-btn\" style={{color: \"#76c32d\"}}>Order</button>\n            </div>\n            \n            <table style={{textAlign: \"center\"}}>\n                <thead >\n                    <tr>\n\n                        <th className=\"table-header\">Variant</th>\n                        <th className=\"table-header\">Quantity</th>\n                        <th className=\"table-header\">Recent Purchases</th>\n                        <th className=\"table-header\">Stock Level</th>\n                        <th className=\"table-header\">Cost/unit</th>\n                        <th className=\"table-header\">Order Quantity</th>\n\n                        {/* <th className=\"table-header\">Variant</th>\n                        <th className=\"table-header\">Price</th>\n                        <th className=\"table-header\">Quantity</th> */}\n                    </tr>\n                </thead>\n                <tbody>\n                {data.map((item, index) => {\n                    return (  \n                        <tr key={index}>\n                            <td className=\"table-cell\">{item.title}</td>\n                            <td className=\"table-cell\">{item.quantity}</td>\n                            <td className=\"table-cell\">{item.purchases}</td>\n                            <td className=\"table-cell\">{item.stockLevel}</td>\n                            <td className=\"table-cell\">{formatter.format(item.cost)}</td>\n                            {isEditing \n                                ? \n                                <td className=\"table-cell\">\n                                    <input className=\"table-cell\" type=\"text\" onChange={editInput} id={item.variant_id} placeholder={item.quantity} />\n                                </td>\n                                :\n                                <td className=\"table-cell\">\n                                    {item.quantity}\n                                </td>\n                                }\n                        </tr>\n                    ) \n                })}   \n                </tbody>\n            </table>            \n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}