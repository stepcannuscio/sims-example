{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Vendors/VendorPopup.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef, useMemo } from \"react\";\nimport \"../styles/Popup.css\";\nimport Table from \"../components/Table\";\nimport ProgressBar from \"./ProgressBar\";\nimport * as router from \"./vendorAPI\";\nexport default function VendorPopup(props) {\n  _s();\n\n  const variantSelect = useRef();\n  const productSelect = useRef();\n  const quantityInput = useRef();\n  const [percentage, setPercentage] = useState(0);\n  const [quantity, setQuantity] = useState(0);\n  const [btnText, setBtnText] = useState(\"Order\");\n  const [extraOptionText, setExtraOptionText] = useState(\"\");\n  const [isLoading, setLoading] = useState(true);\n  const [dataToUpdate, setDataToUpdate] = useState([]);\n  const [variantsToUpdate, setVariantsToUpdate] = useState([]);\n  const [data, setData] = useState([]);\n  const [variantData, setVariantData] = useState([]);\n  const [productSelected, setProductSelected] = useState({\n    title: \"\",\n    id: \"\"\n  });\n  const [variantSelected, setVariantSelected] = useState({\n    title: \"\",\n    id: \"\",\n    cost: 0\n  });\n  const [isOrdering, setOrdering] = useState(false);\n  const [nextPage, setNextPage] = useState(false);\n  const [reviewOrder, setReviewOrder] = useState(false);\n  const [orderState, setOrderState] = useState(null);\n  const [isOrderItemsHidden, setOrderItemsHidden] = useState(true);\n  const [isExtraOptionHidden, setExtraOptionHidden] = useState(true);\n  const commMethodPlain = props.data.row.values.comm_method;\n  var commMethod = commMethodPlain.includes(',') ? commMethodPlain.split(',')[0] : commMethodPlain;\n  const orderSteps = commMethodPlain.includes(\"call\") || commMethodPlain.includes(\"website\") || commMethodPlain.includes(',') ? 4 : 3;\n  const phone = props.values.phone ? `${props.values.phone.slice(0, 3)}-${props.values.phone.slice(3, 6)}-${props.values.phone.slice(6)}` : \"\";\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  const columns = useMemo(() => [{\n    Header: 'ID',\n    accessor: 'id',\n    // Product ID\n    sortDescFirst: true\n  }, {\n    Header: 'Product',\n    accessor: 'title',\n    sortDescFirst: true\n  }, {\n    Header: 'Variant',\n    accessor: 'variant',\n    sortDescFirst: true,\n    show: true\n  }, {\n    Header: 'Quantity',\n    accessor: 'quantity',\n    sortDescFirst: true\n  }, {\n    Header: 'Recent Purchases',\n    accessor: 'purchases',\n    sortDescFirst: true\n  }, {\n    Header: 'Stock Level',\n    accessor: 'stockLevel',\n    disableSortBy: true\n  }, {\n    Header: 'Recent Order',\n    accessor: 'recentOrder',\n    disableSortBy: true\n  }], []);\n\n  function getData() {\n    setLoading(true);\n    router.loadVendor(props.values.id).then(data => {\n      if (data) {\n        setData(data);\n        setLoading(false);\n      }\n    });\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function orderBtnClicked(btnIndex, phone, orderSteps) {\n    if (!isOrdering) {\n      // Start Order - change to add products\n      setOrdering(true);\n      setBtnText(\"Next\");\n      setOrderItemsHidden(false);\n      setOrderState(\"Choose Products\");\n      setPercentage(100 / orderSteps);\n    } else if (orderState === \"Choose Products\") {\n      // Going to next page of ordering after added products - choose variants and quantities\n      setPercentage(100 / orderSteps * 2); // update progress bar\n\n      setNextPage(true);\n      setOrderState(\"Choose Variants/Qty\");\n      router.loadOrderProducts(dataToUpdate).then(data => {\n        if (data) {\n          setVariantData(data);\n          setDataToUpdate([]); // empty dataToUpdate from any previous orders\n\n          setBtnText(\"Review\");\n        }\n      });\n    } else if (orderState === \"Choose Variants/Qty\") {\n      // Going to next page to review order and submit or use communication method\n      setNextPage(false);\n      setReviewOrder(true);\n      setPercentage(100 / orderSteps * 3); // update progress bar\n\n      if (commMethodPlain.includes(',')) {\n        // Multiple vendors\n        setExtraOptionHidden(false);\n        setExtraOptionText(`${capitalizeFirstLetter(commMethodPlain.split(',')[1])} ${commMethodPlain.split(',')[1] === 'call' ? phone : \"\"}`);\n        setBtnText(`${capitalizeFirstLetter(commMethod)} ${commMethod === 'call' ? phone : \"\"}`);\n        setOrderState(\"Multiple Vendors\");\n      } else {\n        // Only 1 vendor (as it is for the vast majority)\n        if (commMethodPlain.includes(\"website\")) {\n          setBtnText(\"Order on website\");\n          setOrderState(\"Website Order\");\n        } else if (commMethodPlain.includes('call')) {\n          setBtnText(`Call ${phone}`);\n          setOrderState(\"Calling Order\");\n        } else {\n          console.log('dis where we should be');\n          setBtnText(\"Submit\");\n          setOrderState(\"Review Order\");\n        }\n      }\n    } else if (orderState === \"Website Order\") {\n      window.open(\"https://amazon.com\", '_blank'); // NEED TO CHANGE\n\n      setBtnText(\"Submit\");\n      setOrderState(\"Review Order\");\n      setPercentage(100 / orderSteps * 4);\n    } else if (orderState === \"Calling Order\") {\n      setPercentage(100 / orderSteps * 4);\n      setBtnText(\"Submit\");\n      setOrderState(\"Review Order\");\n    } else if (orderState === \"Multiple Vendors\") {\n      // One of the 2 buttons was clicked\n      const method = commMethodPlain.split(',')[btnIndex];\n\n      if (method === \"call\") {\n        // Clicked on the Call button so now need to submit the order\n        setPercentage(100 / orderSteps * 4);\n        setBtnText(\"Submit\");\n        setOrderState(\"Review Order\");\n        setExtraOptionHidden(true);\n      } else if (method === \"website\") {\n        // Clicked on Website so now need to submit the order\n        window.open(\"https://amazon.com\", '_blank'); // NEED TO CHANGE\n\n        setBtnText(\"Submit\");\n        setOrderState(\"Review Order\");\n        setExtraOptionHidden(true);\n        setPercentage(100 / orderSteps * 4);\n      } else {\n        // Clicked on Email or Text so need to send the message which will then save the order\n        sendMessage(btnIndex);\n        setPercentage(100 / orderSteps * 4);\n        setOrderState(null);\n        setOrdering(false);\n      }\n    } else if (orderState === \"Review Order\") {\n      // Submit - save order\n      commMethodPlain.includes(',') ? save() : sendMessage();\n      setOrderState(null);\n      setOrdering(false);\n    }\n  }\n\n  function backBtnClicked() {\n    const phone = `${props.values.phone.slice(0, 3)}-${props.values.phone.slice(3, 6)}-${props.values.phone.slice(6)}`;\n    const orderSteps = commMethod === \"text\" || commMethod === \"email\" ? 4 : 5;\n\n    if (orderState === \"Choose Products\") {\n      setOrdering(false);\n      setBtnText(\"Order\");\n      setOrderItemsHidden(true);\n      setOrderState(null);\n      setPercentage(0);\n    } else if (orderState === \"Choose Variants/Qty\") {\n      setNextPage(false);\n      setOrderState(\"Choose Products\");\n      setBtnText(\"Next\");\n      setPercentage(100 / orderSteps);\n      setVariantData([]);\n      setDataToUpdate([]);\n      setVariantsToUpdate([]);\n    } else if (orderState === \"Website Order\" || orderState === \"Calling Order\" || orderState === \"Multiple Vendors\") {\n      setNextPage(true);\n      setReviewOrder(false);\n      setBtnText(\"Review\");\n      setOrderState(\"Choose Variants/Qty\");\n      setExtraOptionHidden(true);\n      setPercentage(100 / orderSteps * 2); // update progress bar\n    } else if (orderState === \"Review Order\") {\n      setPercentage(100 / orderSteps * 3); // update progress bar\n\n      if (commMethodPlain.includes(',')) {\n        // Multiple vendors\n        setExtraOptionHidden(false);\n        setExtraOptionText(`${capitalizeFirstLetter(commMethodPlain.split(',')[1])} ${commMethodPlain.split(',')[1] === 'call' ? phone : \"\"}`);\n        setBtnText(`${capitalizeFirstLetter(commMethod)} ${commMethod === 'call' ? phone : \"\"}`);\n        setOrderState(\"Multiple Vendors\");\n      } else {\n        // Only 1 vendor (as it is for the vast majority)\n        if (commMethodPlain.includes(\"website\")) {\n          setBtnText(\"Order on website\");\n          setOrderState(\"Website Order\");\n        } else if (commMethodPlain.includes('call')) {\n          setBtnText(`Call ${phone}`);\n          setOrderState(\"Calling Order\");\n        } else {\n          setBtnText(\"Review\");\n          setReviewOrder(false);\n          setOrderState(\"Choose Variants/Qty\");\n          setPercentage(100 / orderSteps * 2); // update progress bar\n\n          setNextPage(true);\n        }\n      }\n    }\n  }\n\n  function sendMessage(btnIndex) {\n    if (btnIndex) {\n      commMethod = commMethodPlain.split(',')[btnIndex];\n    }\n\n    if (commMethod === \"text\") {\n      router.sendText(props.values.contact_name, dataToUpdate, \"4848885912\").then(data => {\n        // NEED TO CHANGE\n        save();\n      });\n    } else if (commMethod === \"email\") {\n      router.sendEmail(props.values.contact_name, dataToUpdate, \"stepan.cannuscio@gmail.com\").then(data => {\n        // NEED TO CHANGE\n        save();\n      });\n    } else if (commMethod === \"website\" || commMethod === \"call\") {\n      save();\n    } else {\n      alert(\"No communication method for this vendor! Contact Step for help\");\n    }\n  }\n\n  function save() {\n    const order = {\n      vendor: props.data.row.values.id,\n      subtotal: 0,\n      status: \"submitted\"\n    };\n    const orderItems = [];\n    dataToUpdate.forEach(item => {\n      console.log(item);\n\n      if (item.quantity != 0 || item.quantity != \"\") {\n        order.subtotal += item.subtotal;\n        orderItems.push({\n          variant: item.variantId,\n          subtotal: item.subtotal,\n          // this is the subtotal including multiple qtys\n          quantity: item.quantity\n        });\n      }\n    });\n\n    if (dataToUpdate.length > 0) {\n      router.saveOrder(order, orderItems, props.user.id).then(data => {\n        if (data === \"Success\") {\n          props.toggle();\n        } else {}\n      });\n    }\n  }\n\n  function rowSelected(data) {\n    if (!data.isSelected) {\n      // I don't know why but this is reversed when receiving the data\n      setDataToUpdate(oldArray => [...oldArray, data.values.id]);\n    } else {\n      var array = [...dataToUpdate]; // make a separate copy of the array\n\n      var index = array.indexOf(data.values.id);\n\n      if (index !== -1) {\n        array.splice(index, 1);\n        setDataToUpdate(array);\n      }\n    }\n  }\n\n  function remove(data, element) {\n    variantData.forEach((item, index) => {\n      if (item.variant_id === element.variant_id) {\n        var array = [...data]; // make a separate copy of the array\n\n        if (index !== -1) {\n          array.splice(index, 1);\n          setVariantData(array);\n        }\n      }\n    });\n\n    if (dataToUpdate.length > 0) {\n      dataToUpdate.forEach((item, index) => {\n        if (item.variantId === element.variant_id) {\n          var array = [...dataToUpdate]; // make a separate copy of the array\n\n          if (index !== -1) {\n            array.splice(index, 1);\n            setDataToUpdate(array);\n          }\n        }\n      });\n    }\n  }\n\n  function addOrderItem(data, orderQuantity, index) {\n    const newData = {\n      productTitle: data.title,\n      productId: data.id,\n      variantTitle: data.variant,\n      variantId: data.variant_id,\n      cost: data.cost,\n      quantity: orderQuantity,\n      subtotal: Math.round(data.cost * orderQuantity * 100, 2) / 100\n    };\n\n    if (variantsToUpdate.includes(data.variant_id)) {\n      dataToUpdate.forEach((item, i) => {\n        if (item.variantId === data.variant_id) {\n          var array = [...dataToUpdate]; // make a separate copy of the array\n\n          if (index !== -1) {\n            array.splice(index, 1);\n            setDataToUpdate(array);\n          }\n\n          setDataToUpdate(oldArray => [...oldArray, newData]);\n        }\n      });\n    } else {\n      if (newData.quantity != 0 || newData.quantity != \"\") {\n        setVariantsToUpdate(oldArray => [...oldArray, data.variant_id]);\n        setDataToUpdate(oldArray => [...oldArray, newData]);\n      }\n    }\n  }\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-content\",\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        percentage: percentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => props.toggle(),\n        children: \"\\xD7    \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data[0] ? data[0].name : \"Default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Products: \", props.values.products]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Low Products: \", props.values.low_products]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this), isOrdering ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backBtnClicked,\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: \"grey\"\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 31\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => orderBtnClicked(0),\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: \"#76c32d\"\n        },\n        children: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        hidden: isExtraOptionHidden,\n        onClick: () => orderBtnClicked(1),\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: \"#76c32d\"\n        },\n        children: extraOptionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }, this), isOrdering ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        hidden: isOrderItemsHidden,\n        children: nextPage ? /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Variant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Current Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Recent Purchases\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Stock Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Cost/unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Order Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: variantData.map((variant, index) => {\n              var orderQuantity = 0;\n              var background = \"\";\n              dataToUpdate.forEach(item => {\n                if (item.variantId === variant.variant_id) {\n                  // console.log('ywehasflj')\n                  orderQuantity = item.quantity;\n                }\n              }); // if (variant.stockLevel === \"Low\") {\n              //     background = \"red\"\n              // } else if (variant.stockLevel === \"Medium\") {\n              //     background = \"#FFD300\"\n              // } else {\n              //     background = \"#4CAF50\"\n              // }\n              // className=\"stock-level\" style={{backgroundColor: background}}\n\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.variant\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.purchases\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.stockLevel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatter.format(variant.cost)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"0\",\n                    style: {\n                      fontSize: \"16px\"\n                    },\n                    value: orderQuantity,\n                    onChange: e => {\n                      addOrderItem(variant, e.target.value, index);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"close\",\n                    style: {\n                      color: \"red\"\n                    },\n                    onClick: () => remove(variantData, variant),\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }, this) // <Table columns={ columns.concat(\n        // {\n        //     Header: 'Variant ID',\n        //     accessor: 'variant_id',\n        //     show: false\n        // },\n        // {\n        //     Header: 'Cost',\n        //     accessor: 'cost',\n        //     sortDescFirst: true\n        // },\n        // {\n        //     Header: 'Order Quantity',\n        //     accessor: 'orderQuantity',\n        // },\n        // {\n        //     Header: 'Remove',\n        //     accessor: 'remove',\n        // },\n        // )} data={variantData} search={false} type=\"order-variant\" popupEnabled={false} perPage={5} update={(data, orderQuantity) => addOrderItem(data, orderQuantity)} removeItem={(item) =>remove(variantData, item)}/>\n        // <table>\n        //     <thead>\n        //         <tr>\n        //             <th>Product</th>\n        //             <th>Variant</th>\n        //             <th>Current Quantity</th>\n        //             <th>Recent Purchases</th>\n        //             <th>Stock Level</th>\n        //             <th>Recent Order</th>\n        //             <th>Cost</th>\n        //             <th>Order Quantity</th>\n        //         </tr>\n        //     </thead>\n        //     <tbody>\n        //         {variantData.map((variant, index) => {\n        //                 return (\n        //                     <tr key={index}>\n        //                         <td>{variant.product}</td>\n        //                         <td>{variant.variant}</td>\n        //                         <td>{variant.quantity}</td>\n        //                         <td>{variant.purchases}</td>\n        //                         <td>{variant.stockLevel}</td>\n        //                         <td>{variant.recentOrder}</td>\n        //                         <td>{variant.cost}</td>\n        //                         <input type=\"text\" placeholder=\"0\"/>\n        //                     </tr>\n        //                 )\n        //         })}\n        //     </tbody>\n        // </table>\n        : reviewOrder ? /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Variant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Cost/unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Subtotal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: dataToUpdate.map((order_item, index) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order_item.productTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order_item.variantTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order_item.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatter.format(order_item.cost)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatter.format(order_item.subtotal)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data,\n          search: false,\n          type: \"order\",\n          checkbox: true,\n          popupEnabled: false,\n          perPage: 5,\n          update: data => rowSelected(data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data,\n      type: \"order\",\n      search: false,\n      popupEnabled: false,\n      perPage: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 13\n    }, this) // <table style={{textAlign: \"center\"}}>\n    //     <thead >\n    //         <tr>\n    //             <th className=\"table-header\">Product</th>\n    //             <th className=\"table-header\">Quantity</th>\n    //             <th className=\"table-header\">Purchases (last 30 days)</th>\n    //             <th className=\"table-header\">Stock Level</th>\n    //             <th className=\"table-header\">Last Order</th>\n    //         </tr>\n    //     </thead>\n    //     <tbody>\n    //     {data.map((item, index) => {\n    //         var recentOrder = \"\"\n    //         if (item.status && item.status.split(',')[0] === \"completed\") {\n    //             recentOrder = `${item.quantity_ordered.split(',')[0]} units received on ${new Date(item.completed_date.split(',')[0]).toDateString()}`\n    //         } else if (item.status && item.status.split(',')[0] === \"fulfilled\") {\n    //             recentOrder = `Fulfilled on ${new Date(item.fulfilled_date.split(',')[0]).toDateString()} - ${item.tracking.split(',')[0]}`\n    //         } else if (item.status && item.status.split(',')[0] === \"submitted\") {\n    //             recentOrder = `Submitted order for ${item.quantity_ordered.split(',')[0]} units on ${new Date(item.submitted_date.split(',')[0]).toDateString()}`\n    //         }\n    //         return (\n    //             <tr key={index}>\n    //                 <td className=\"table-cell\">{item.title}</td>\n    //                 <td className=\"table-cell\">{item.quantity}</td>\n    //                 <td className=\"table-cell\">{item.purchases}</td>\n    //                 <td className=\"table-cell\">{item.stockLevel}</td>\n    //                 <td className=\"table-cell\">{recentOrder}</td>\n    //             </tr>\n    //             ) \n    //         })\n    //     }\n    //     </tbody>\n    // </table>\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VendorPopup, \"SVHV7dnu9kHVVQtMzC1HTUss/u8=\");\n\n_c = VendorPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"VendorPopup\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Vendors/VendorPopup.js"],"names":["useState","useEffect","useRef","useMemo","Table","ProgressBar","router","VendorPopup","props","variantSelect","productSelect","quantityInput","percentage","setPercentage","quantity","setQuantity","btnText","setBtnText","extraOptionText","setExtraOptionText","isLoading","setLoading","dataToUpdate","setDataToUpdate","variantsToUpdate","setVariantsToUpdate","data","setData","variantData","setVariantData","productSelected","setProductSelected","title","id","variantSelected","setVariantSelected","cost","isOrdering","setOrdering","nextPage","setNextPage","reviewOrder","setReviewOrder","orderState","setOrderState","isOrderItemsHidden","setOrderItemsHidden","isExtraOptionHidden","setExtraOptionHidden","commMethodPlain","row","values","comm_method","commMethod","includes","split","orderSteps","phone","slice","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","columns","Header","accessor","sortDescFirst","show","disableSortBy","getData","loadVendor","then","orderBtnClicked","btnIndex","loadOrderProducts","capitalizeFirstLetter","console","log","window","open","method","sendMessage","save","backBtnClicked","sendText","contact_name","sendEmail","alert","order","vendor","subtotal","status","orderItems","forEach","item","push","variant","variantId","length","saveOrder","user","toggle","rowSelected","isSelected","oldArray","array","index","indexOf","splice","remove","element","variant_id","addOrderItem","orderQuantity","newData","productTitle","productId","variantTitle","Math","round","i","string","charAt","toUpperCase","name","products","low_products","backgroundColor","map","background","purchases","stockLevel","format","fontSize","e","target","value","color","order_item"],"mappings":"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","sourcesContent":["import {useState, useEffect, useRef, useMemo} from \"react\"\nimport \"../styles/Popup.css\"\nimport Table from \"../components/Table\"\nimport ProgressBar from \"./ProgressBar\"\nimport * as router from \"./vendorAPI\"\n\nexport default function VendorPopup(props) {\n\n    const variantSelect = useRef()\n    const productSelect = useRef()\n    const quantityInput = useRef()\n\n    const [percentage, setPercentage] = useState(0)\n    const [quantity, setQuantity] = useState(0)\n    const [btnText, setBtnText] = useState(\"Order\")\n    const [extraOptionText, setExtraOptionText] = useState(\"\")\n    const [isLoading, setLoading] = useState(true)\n\n    const [dataToUpdate, setDataToUpdate] = useState([])\n    const [variantsToUpdate, setVariantsToUpdate] = useState([])\n    const [data, setData] = useState([])\n    const [variantData, setVariantData] = useState([])\n    \n    const [productSelected, setProductSelected] = useState({title: \"\", id: \"\"})\n    const [variantSelected, setVariantSelected] = useState({title: \"\", id: \"\", cost: 0})\n\n    const [isOrdering, setOrdering] = useState(false)\n    const [nextPage, setNextPage] = useState(false)\n    const [reviewOrder, setReviewOrder] = useState(false)\n    const [orderState, setOrderState] = useState(null)\n    const [isOrderItemsHidden, setOrderItemsHidden] = useState(true)\n    const [isExtraOptionHidden, setExtraOptionHidden] = useState(true)\n\n    const commMethodPlain = props.data.row.values.comm_method\n    var commMethod = commMethodPlain.includes(',') ? commMethodPlain.split(',')[0] : commMethodPlain\n    const orderSteps = commMethodPlain.includes(\"call\") || commMethodPlain.includes(\"website\") || commMethodPlain.includes(',') ? 4 : 3\n\n    const phone = props.values.phone ? `${props.values.phone.slice(0,3)}-${props.values.phone.slice(3,6)}-${props.values.phone.slice(6,)}` : \"\"\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0\n      })\n\n    const columns = useMemo(\n        () => [\n        {\n            Header: 'ID',\n            accessor: 'id', // Product ID\n            sortDescFirst: true\n            },\n          {\n            Header: 'Product',\n            accessor: 'title',\n            sortDescFirst: true\n          },\n          {\n            Header: 'Variant',\n            accessor: 'variant',\n            sortDescFirst: true,\n            show: true\n          },\n          {\n            Header: 'Quantity',\n            accessor: 'quantity',\n            sortDescFirst: true,\n          },\n          {\n            Header: 'Recent Purchases',\n            accessor: 'purchases',\n            sortDescFirst: true,\n          },\n          {\n            Header: 'Stock Level',\n            accessor: 'stockLevel',\n            disableSortBy: true\n          },\n          {\n            Header: 'Recent Order',\n            accessor: 'recentOrder',\n            disableSortBy: true\n          },\n        ],\n        []\n    )\n\n    function getData() {\n        setLoading(true)\n        router.loadVendor(props.values.id).then(data => {\n            if (data) {\n                setData(data)\n                setLoading(false)\n            }\n        })\n    }\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    function orderBtnClicked(btnIndex, phone, orderSteps) {\n        \n        if (!isOrdering) {\n            // Start Order - change to add products\n            setOrdering(true)\n            setBtnText(\"Next\")\n            setOrderItemsHidden(false)\n            setOrderState(\"Choose Products\")\n            setPercentage(100/orderSteps)\n\n        } else if (orderState === \"Choose Products\") {\n            // Going to next page of ordering after added products - choose variants and quantities\n            setPercentage(100/orderSteps * 2) // update progress bar\n            setNextPage(true)\n            setOrderState(\"Choose Variants/Qty\")\n\n            router.loadOrderProducts(dataToUpdate).then(data => {\n                  if (data) {\n                    setVariantData(data)\n                    setDataToUpdate([]) // empty dataToUpdate from any previous orders\n                    setBtnText(\"Review\")\n                  }\n            })\n            \n        } else if (orderState === \"Choose Variants/Qty\") {\n            // Going to next page to review order and submit or use communication method\n            setNextPage(false)\n            setReviewOrder(true)\n            setPercentage(100/orderSteps * 3) // update progress bar\n    \n            if (commMethodPlain.includes(',')) {\n                // Multiple vendors\n                setExtraOptionHidden(false)\n                setExtraOptionText(`${capitalizeFirstLetter(commMethodPlain.split(',')[1])} ${commMethodPlain.split(',')[1] === 'call' ? phone : \"\"}`)\n                setBtnText(`${capitalizeFirstLetter(commMethod)} ${commMethod === 'call' ? phone : \"\"}`)\n                setOrderState(\"Multiple Vendors\")   \n            } else {\n                // Only 1 vendor (as it is for the vast majority)\n                if (commMethodPlain.includes(\"website\")) {        \n                    setBtnText(\"Order on website\")\n                    setOrderState(\"Website Order\")\n                } else if (commMethodPlain.includes('call')) {\n                    setBtnText(`Call ${phone}`)\n                    setOrderState(\"Calling Order\")         \n                } else {\n                    console.log('dis where we should be')\n                    setBtnText(\"Submit\")\n                    setOrderState(\"Review Order\")\n                }\n            }\n        } else if (orderState === \"Website Order\") {\n           window.open(\"https://amazon.com\",'_blank') // NEED TO CHANGE\n           setBtnText(\"Submit\")\n           setOrderState(\"Review Order\")\n           setPercentage(100/orderSteps * 4)\n        } else if (orderState === \"Calling Order\") {\n            setPercentage(100/orderSteps * 4)\n            setBtnText(\"Submit\")\n            setOrderState(\"Review Order\")\n        } else if (orderState === \"Multiple Vendors\") {\n            // One of the 2 buttons was clicked\n            const method = commMethodPlain.split(',')[btnIndex]\n\n            if (method === \"call\") {\n                // Clicked on the Call button so now need to submit the order\n                setPercentage(100/orderSteps * 4)\n                setBtnText(\"Submit\")\n                setOrderState(\"Review Order\")\n                setExtraOptionHidden(true)\n            } else if (method === \"website\") {\n                // Clicked on Website so now need to submit the order\n                window.open(\"https://amazon.com\",'_blank') // NEED TO CHANGE\n                setBtnText(\"Submit\")\n                setOrderState(\"Review Order\")\n                setExtraOptionHidden(true)\n                setPercentage(100/orderSteps * 4)\n            } else {\n                // Clicked on Email or Text so need to send the message which will then save the order\n                sendMessage(btnIndex)\n                setPercentage(100/orderSteps * 4)\n                setOrderState(null)\n                setOrdering(false)\n            }\n        }  else if (orderState === \"Review Order\") {\n            // Submit - save order\n            commMethodPlain.includes(',') ? save() : sendMessage() \n            setOrderState(null)\n            setOrdering(false)\n        } \n    }\n    \n    function backBtnClicked() {\n        const phone = `${props.values.phone.slice(0,3)}-${props.values.phone.slice(3,6)}-${props.values.phone.slice(6,)}`\n        const orderSteps = commMethod === \"text\" || commMethod === \"email\" ? 4 : 5\n        if (orderState === \"Choose Products\") {\n            setOrdering(false)\n            setBtnText(\"Order\")\n            setOrderItemsHidden(true)\n            setOrderState(null)\n            setPercentage(0)\n        } else if (orderState === \"Choose Variants/Qty\") {\n            setNextPage(false)\n            setOrderState(\"Choose Products\")\n            setBtnText(\"Next\")\n            setPercentage(100/orderSteps)\n            setVariantData([])\n            setDataToUpdate([])\n            setVariantsToUpdate([])\n        } else if (orderState === \"Website Order\" || orderState === \"Calling Order\" || orderState === \"Multiple Vendors\") {\n            setNextPage(true)\n            setReviewOrder(false)\n            setBtnText(\"Review\")\n            setOrderState(\"Choose Variants/Qty\")\n            setExtraOptionHidden(true)\n            setPercentage(100/orderSteps * 2) // update progress bar\n        } else if (orderState === \"Review Order\") {\n            setPercentage(100/orderSteps * 3) // update progress bar\n            if (commMethodPlain.includes(',')) {\n                // Multiple vendors\n                setExtraOptionHidden(false)\n                setExtraOptionText(`${capitalizeFirstLetter(commMethodPlain.split(',')[1])} ${commMethodPlain.split(',')[1] === 'call' ? phone : \"\"}`)\n                setBtnText(`${capitalizeFirstLetter(commMethod)} ${commMethod === 'call' ? phone : \"\"}`)\n                setOrderState(\"Multiple Vendors\")\n            } else {\n                // Only 1 vendor (as it is for the vast majority)\n                if (commMethodPlain.includes(\"website\")) {        \n                    setBtnText(\"Order on website\")\n                    setOrderState(\"Website Order\")\n                } else if (commMethodPlain.includes('call')) {\n                    setBtnText(`Call ${phone}`)\n                    setOrderState(\"Calling Order\")         \n                } else {\n                    setBtnText(\"Review\")\n                    setReviewOrder(false)\n                    setOrderState(\"Choose Variants/Qty\")\n                    setPercentage(100/orderSteps * 2) // update progress bar\n                    setNextPage(true)\n                }\n            }\n        } \n    }\n\n    function sendMessage(btnIndex) {\n\n        if (btnIndex) {\n            commMethod = commMethodPlain.split(',')[btnIndex]\n        }\n\n        if (commMethod === \"text\") {\n            router.sendText(props.values.contact_name, dataToUpdate, \"4848885912\").then(data => { // NEED TO CHANGE\n                save()\n            })\n        }\n        else if (commMethod === \"email\") {\n            router.sendEmail(props.values.contact_name, dataToUpdate, \"stepan.cannuscio@gmail.com\").then(data => { // NEED TO CHANGE\n                save()\n            })\n        } else if (commMethod === \"website\" || commMethod === \"call\") {\n            save()\n        } else {\n            alert(\"No communication method for this vendor! Contact Step for help\")\n        }\n    }\n\n    function save() {\n            \n        const order = {\n            vendor: props.data.row.values.id,\n            subtotal: 0,\n            status: \"submitted\"\n        }\n\n        const orderItems = []\n        dataToUpdate.forEach(item => {\n            console.log(item)\n            if (item.quantity != 0 || item.quantity != \"\") {\n       \n                order.subtotal += item.subtotal\n                orderItems.push({\n                    variant: item.variantId,\n                    subtotal: item.subtotal, // this is the subtotal including multiple qtys\n                    quantity: item.quantity\n                })\n            }\n        \n        })\n     \n        if (dataToUpdate.length > 0) {\n            router.saveOrder(order, orderItems, props.user.id).then(data => {\n            if (data === \"Success\") {\n                props.toggle()\n            } else {\n            }\n         })\n        } \n    }\n\n    function rowSelected(data) {\n        if (!data.isSelected) { // I don't know why but this is reversed when receiving the data\n            setDataToUpdate(oldArray => [...oldArray, data.values.id])\n        } else {\n            var array = [...dataToUpdate]; // make a separate copy of the array\n            var index = array.indexOf(data.values.id)\n            if (index !== -1) {\n                array.splice(index, 1);\n                setDataToUpdate(array);\n            }        \n        } \n    }\n\n    function remove(data, element) {\n        variantData.forEach((item, index) => {\n            if (item.variant_id === element.variant_id) {\n                var array = [...data]; // make a separate copy of the array\n                if (index !== -1) {\n                    array.splice(index, 1);\n                    setVariantData(array);\n                }             \n            }\n        })\n\n        if (dataToUpdate.length > 0) {\n            dataToUpdate.forEach((item, index) => {   \n                if (item.variantId === element.variant_id) {\n                    var array = [...dataToUpdate]; // make a separate copy of the array\n                    if (index !== -1) {\n                        array.splice(index, 1);\n                        setDataToUpdate(array);\n                    } \n                }\n            })\n        }\n    }\n\n    function addOrderItem(data, orderQuantity, index) {\n        const newData = {\n            productTitle: data.title,\n            productId: data.id,\n            variantTitle: data.variant,\n            variantId: data.variant_id,\n            cost: data.cost,\n            quantity: orderQuantity,\n            subtotal: Math.round(data.cost * orderQuantity * 100, 2) / 100\n        }\n\n        if (variantsToUpdate.includes(data.variant_id)) {\n    \n            dataToUpdate.forEach((item, i) => {\n                \n                if (item.variantId === data.variant_id) {\n                    var array = [...dataToUpdate]; // make a separate copy of the array\n                    if (index !== -1) {\n                        array.splice(index, 1);\n                        setDataToUpdate(array);\n                    } \n                    setDataToUpdate(oldArray => [...oldArray, newData])       \n                }\n            })\n        } else {\n            if (newData.quantity != 0 || newData.quantity != \"\") {\n                setVariantsToUpdate(oldArray => [...oldArray, data.variant_id])\n                setDataToUpdate(oldArray => [...oldArray, newData])\n            }\n        }\n    }\n\n    function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n        }\n\n  \n\n    if (isLoading) {\n        return <div className=\"loader\"></div>;\n    }\n\n    return (\n        <div>\n            \n            <div className=\"top-content\">\n            <ProgressBar percentage={percentage}/>\n                <span className=\"close\" onClick={() =>  props.toggle()}>&times;    </span>\n                <h2 >{data[0] ? data[0].name : \"Default\"}</h2>\n                <p>Products: {props.values.products}</p>\n                <p>Low Products: {props.values.low_products}</p>\n                {isOrdering ? <button onClick={backBtnClicked} className=\"edit-btn\" style={{backgroundColor: \"grey\"}}>Back</button> : null }\n                <button onClick={() => orderBtnClicked(0)} className=\"edit-btn\" style={{backgroundColor: \"#76c32d\"}}>{btnText}</button>\n                <button hidden={isExtraOptionHidden} onClick={() => orderBtnClicked(1)} className=\"edit-btn\" style={{backgroundColor: \"#76c32d\"}}>{extraOptionText}</button>\n                \n            </div>\n      \n            {isOrdering \n\n            ?\n            <div>\n                <div hidden={isOrderItemsHidden}>\n                    {/* <button style={{display: \"block\"}} onClick={() => setProductSelectHidden(false)}>New Product</button> */}\n                    {/* <select ref={productSelect} hidden={isProductSelectHidden} onChange={selectChanged} defaultValue=\"none\" id=\"productFilter\" name=\"productFilter\">\n                        <option value=\"none\">Choose Product:</option>\n                        {data.map((product, index) => {\n                            return (\n                                <option key={index} label={`${product.title} (${product.stockLevel})`} value={product.id}>{product.variants}</option>\n                            )\n                        })}\n                    </select> */}\n                    \n                    \n\n                    {nextPage \n                    ?\n                    <table>\n                    <thead>\n                        <tr>\n                            <th>Product</th>\n                            <th>Variant</th>\n                            <th>Current Quantity</th>\n                            <th>Recent Purchases</th>\n                            <th>Stock Level</th>\n                            <th>Cost/unit</th>\n                            <th>Order Quantity</th>\n                            <th>Remove</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {variantData.map((variant, index) => {\n\n                            var orderQuantity = 0\n                            var background = \"\"\n                            dataToUpdate.forEach(item => {\n                                if (item.variantId === variant.variant_id) {\n                                    // console.log('ywehasflj')\n                                    orderQuantity = item.quantity\n                                }\n                            })\n\n                            // if (variant.stockLevel === \"Low\") {\n                            //     background = \"red\"\n                            // } else if (variant.stockLevel === \"Medium\") {\n                            //     background = \"#FFD300\"\n                            // } else {\n                            //     background = \"#4CAF50\"\n                            // }\n\n                            // className=\"stock-level\" style={{backgroundColor: background}}\n                    \n                       \n                                return (\n                                    <tr key={index}>\n                                        <td>{variant.title}</td>\n                                        <td>{variant.variant}</td>\n                                        <td>{variant.quantity}</td>\n                                        <td>{variant.purchases}</td>\n                                        <td>{variant.stockLevel}</td>\n                                        <td>{formatter.format(variant.cost)}</td>\n                                        <td ><input type=\"text\" placeholder=\"0\" style={{fontSize: \"16px\"}}value={orderQuantity} onChange={(e) => {\n                                            addOrderItem(variant, e.target.value, index) \n                                       \n                                           \n                                        }}/></td>\n                                        <td><span className=\"close\" style={{color: \"red\"}} onClick={() =>  remove(variantData, variant)}>&times;</span></td>\n                                    </tr>\n                                )\n                            \n                        })}\n                    </tbody>\n                </table>\n                    // <Table columns={ columns.concat(\n                    // {\n                    //     Header: 'Variant ID',\n                    //     accessor: 'variant_id',\n                    //     show: false\n                    // },\n                    // {\n                    //     Header: 'Cost',\n                    //     accessor: 'cost',\n                    //     sortDescFirst: true\n                    // },\n                    // {\n                    //     Header: 'Order Quantity',\n                    //     accessor: 'orderQuantity',\n                    // },\n                    // {\n                    //     Header: 'Remove',\n                    //     accessor: 'remove',\n                    // },\n                    // )} data={variantData} search={false} type=\"order-variant\" popupEnabled={false} perPage={5} update={(data, orderQuantity) => addOrderItem(data, orderQuantity)} removeItem={(item) =>remove(variantData, item)}/>\n\n                    // <table>\n                    //     <thead>\n                    //         <tr>\n                    //             <th>Product</th>\n                    //             <th>Variant</th>\n                    //             <th>Current Quantity</th>\n                    //             <th>Recent Purchases</th>\n                    //             <th>Stock Level</th>\n                    //             <th>Recent Order</th>\n                    //             <th>Cost</th>\n                    //             <th>Order Quantity</th>\n                    //         </tr>\n                    //     </thead>\n                    //     <tbody>\n                    //         {variantData.map((variant, index) => {\n                           \n                    //                 return (\n                    //                     <tr key={index}>\n                    //                         <td>{variant.product}</td>\n                    //                         <td>{variant.variant}</td>\n                    //                         <td>{variant.quantity}</td>\n                    //                         <td>{variant.purchases}</td>\n                    //                         <td>{variant.stockLevel}</td>\n                    //                         <td>{variant.recentOrder}</td>\n                    //                         <td>{variant.cost}</td>\n                    //                         <input type=\"text\" placeholder=\"0\"/>\n                    //                     </tr>\n                    //                 )\n                                \n                    //         })}\n                    //     </tbody>\n                    // </table>\n\n                    :\n                    reviewOrder \n                    ?\n                    <table>\n                    <thead>\n                        <tr>\n                            <th>Product</th>\n                            <th>Variant</th>\n                            <th>Quantity</th>\n                            <th>Cost/unit</th>\n                            <th>Subtotal</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {dataToUpdate.map((order_item, index) => {\n                       \n                                return (\n                                    <tr key={index}>\n                                        <td>{order_item.productTitle}</td>\n                                        <td>{order_item.variantTitle}</td>\n                                        <td>{order_item.quantity}</td>\n                                        <td>{formatter.format(order_item.cost)}</td>\n                                        <td>{formatter.format(order_item.subtotal)}</td>\n                                    </tr>\n                                )\n                            \n                        })}\n                    </tbody>\n                </table>\n                    :\n                    <Table columns={columns} data={data} search={false} type=\"order\" checkbox={true} popupEnabled={false} perPage={5} update={(data) => rowSelected(data)}/>\n                        }\n              \n                    {/* <select ref={variantSelect} hidden={isVariantSelectHidden} onChange={selectChanged} defaultValue=\"none\" id=\"variantFilter\" name=\"variantFilter\">\n                    <option value=\"none\">Choose Variant:</option>\n                        {variantData.map((variant, index) => {\n                            return (\n                                <option key={index} value={[variant.id, variant.cost]}>{variant.title}</option>\n                            )\n                        })}\n                    </select> */}\n                    {/* <input ref={quantityInput} hidden={isQuantityHidden} placeholder={quantity} onChange={handleChange} />\n                    <button hidden={isAddBtnHidden} onClick={addVariant}>Add</button> */}\n                   \n                    \n            \n                    \n                </div>\n                {/* <div hidden={isOrderOptionsHidden}>\n                    {comm_method === \"email\" \n                    ?\n                    <MessageOption type=\"Email\" contact_name={props.values.contact_name} to=\"stepan.cannuscio@gmail.com\" dataToUpdate={dataToUpdate} />\n                    :\n                                \n                    comm_method === \"call\" \n                    ?\n                    <a href=\"tel:4848885912\"><button>Call: 484-888-5912</button></a>\n\n                    :\n                    comm_method === \"text\" \n                    ?\n                    <MessageOption type=\"Text\" contact_name={props.values.contact_name} to=\"4848885912\" dataToUpdate={dataToUpdate} />\n                    :\n                    comm_method === \"website\"\n                    ?\n                    <MessageOption type=\"Website\" contact_name={props.values.contact_name} to=\"https://amazon.com\" dataToUpdate={dataToUpdate} />\n                    :\n                    <p>Not sure about this one!</p>\n                    }           \n                        \n                       \n                        \n                </div> */}\n       \n        \n            {/* <table style={{textAlign: \"center\"}}>\n            <thead >\n                <tr>\n                    <th className=\"table-header\">Product</th>\n                    <th className=\"table-header\">Quantity</th>\n                    <th className=\"table-header\">Purchases (last 30 days)</th>\n                    <th className=\"table-header\">Stock Level</th>\n                    <th className=\"table-header\">Last Order</th>\n                </tr>\n            </thead>\n\n            <tbody>\n            {data.map((item, index) => {\n                var recentOrder = \"\"\n                if (item.status && item.status.split(',')[0] === \"completed\") {\n                    recentOrder = `${item.quantity_ordered.split(',')[0]} units received on ${new Date(item.completed_date.split(',')[0]).toDateString()}`\n                } else if (item.status && item.status.split(',')[0] === \"fulfilled\") {\n                    recentOrder = `Fulfilled on ${new Date(item.fulfilled_date.split(',')[0]).toDateString()} - ${item.tracking.split(',')[0]}`\n                } else if (item.status && item.status.split(',')[0] === \"submitted\") {\n                    recentOrder = `Submitted order for ${item.quantity_ordered.split(',')[0]} units on ${new Date(item.submitted_date.split(',')[0]).toDateString()}`\n                }\n                \n                return (\n                    <tr key={index}>\n                        <td className=\"table-cell\">{item.title}</td>\n                        <td className=\"table-cell\">{item.quantity}</td>\n                        <td className=\"table-cell\">{item.purchases}</td>\n                        <td className=\"table-cell\">{item.stockLevel}</td>\n                        <td className=\"table-cell\">{recentOrder}</td>\n                        \n                    </tr>\n                    ) \n                })\n            }\n            </tbody>\n        </table>\n        </div> */}\n        </div>\n    \n            :\n\n            <Table columns={columns} data={data} type=\"order\" search={false} popupEnabled={false} perPage={5}/>\n    \n            // <table style={{textAlign: \"center\"}}>\n            //     <thead >\n            //         <tr>\n            //             <th className=\"table-header\">Product</th>\n            //             <th className=\"table-header\">Quantity</th>\n            //             <th className=\"table-header\">Purchases (last 30 days)</th>\n            //             <th className=\"table-header\">Stock Level</th>\n            //             <th className=\"table-header\">Last Order</th>\n            //         </tr>\n            //     </thead>\n\n            //     <tbody>\n            //     {data.map((item, index) => {\n            //         var recentOrder = \"\"\n            //         if (item.status && item.status.split(',')[0] === \"completed\") {\n            //             recentOrder = `${item.quantity_ordered.split(',')[0]} units received on ${new Date(item.completed_date.split(',')[0]).toDateString()}`\n            //         } else if (item.status && item.status.split(',')[0] === \"fulfilled\") {\n            //             recentOrder = `Fulfilled on ${new Date(item.fulfilled_date.split(',')[0]).toDateString()} - ${item.tracking.split(',')[0]}`\n            //         } else if (item.status && item.status.split(',')[0] === \"submitted\") {\n            //             recentOrder = `Submitted order for ${item.quantity_ordered.split(',')[0]} units on ${new Date(item.submitted_date.split(',')[0]).toDateString()}`\n            //         }\n                    \n            //         return (\n            //             <tr key={index}>\n            //                 <td className=\"table-cell\">{item.title}</td>\n            //                 <td className=\"table-cell\">{item.quantity}</td>\n            //                 <td className=\"table-cell\">{item.purchases}</td>\n            //                 <td className=\"table-cell\">{item.stockLevel}</td>\n            //                 <td className=\"table-cell\">{recentOrder}</td>\n                            \n            //             </tr>\n            //             ) \n            //         })\n            //     }\n            //     </tbody>\n            // </table>\n}       \n  </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}