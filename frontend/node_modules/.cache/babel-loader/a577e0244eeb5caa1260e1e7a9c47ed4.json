{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/App.js\";\nimport './App.css';\nimport { BrowserRouter, Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport React, { Component } from 'react';\nimport { useState } from \"react\";\nimport axios from \"axios\"; // import PrivateRoute from \"./PrivateRoute\"\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loggedIn: false,\n      username: null\n    };\n    const history = useHistory();\n    this.getUser = this.getUser.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this); // this.updateUser = this.updateUser.bind(this)\n  }\n\n  componentDidMount() {\n    this.getUser();\n  } // updateUser (userObject) {\n  //   this.setState(userObject)\n  // }\n\n\n  getUser() {\n    axios.get('http://localhost:5000/user/', {\n      withCredentials: true\n    }).then(response => {\n      console.log('Get user response: ');\n      console.log(response.data);\n\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ');\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username\n        });\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null\n        });\n        history.push(\"/\");\n      }\n    });\n  } // const [color, setColor] = useState(\"#1E384D\")\n  // const [auth, setAuth] = useState(false)\n  // const [authenticated, setAuthenticated] = useState({loggedIn: false, username: null})\n  // // const [isAuthenticated, setIsAuthenticated]\n  // // state = { message: \"\" }\n  // function authCallback(isAuthenticated) {\n  //   console.log('function authCallback')\n  //   setAuth(true)\n  //   // axios.get(\"http://localhost:5000/user\", { withCredentials: true })\n  //   // .then(req => console.log(req))\n  //   // .catch(console.error);\n  // }\n  // function getUser() {\n  //   axios.get('/user/').then(response => {\n  //     console.log('Get user response: ')\n  //     console.log(response.data)\n  //     if (response.data.user) {\n  //       console.log('Get User: There is a user saved in the server session: ')\n  //       setAuthenticated({\n  //         loggedIn: true,\n  //         username: response.data.user.username\n  //       })\n  //     } else {\n  //       console.log('Get user: no user');\n  //       setAuthenticated({\n  //         loggedIn: false,\n  //         username: null\n  //       })\n  //     }\n  //   })\n  // }\n  //   componentDidMount() {\n  //     getUser()\n  //   }\n  // axios.get(\"http://localhost:5000/user\", { withCredentials: true })\n  // .then(req => console.log(req.user))\n  // .catch(console.error);\n\n\n  render() {\n    const PrivateRoute = ({\n      component: Component,\n      authed,\n      ...rest\n    }) => {\n      console.log(\"Private route\");\n      console.log(authed);\n      return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n        render: props => authed === true ? /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/login',\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#1E384D\",\n        height: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              parentCallback: this.getUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            path: \"/\",\n            authed: this.state.loggedIn,\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/App.js"],"names":["BrowserRouter","Switch","Route","Redirect","useHistory","Login","Home","React","Component","useState","axios","App","constructor","state","loggedIn","username","history","getUser","bind","componentDidMount","get","withCredentials","then","response","console","log","data","user","setState","push","render","PrivateRoute","component","authed","rest","props","pathname","from","location","backgroundColor","height"],"mappings":"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","sourcesContent":["import './App.css';\nimport {BrowserRouter, Switch, Route, Redirect, useHistory} from 'react-router-dom'\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport React, { Component } from 'react';\nimport {useState} from \"react\"\nimport axios from \"axios\"\n// import PrivateRoute from \"./PrivateRoute\"\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      loggedIn: false,\n      username: null\n    }\n\n    const history = useHistory();\n\n    this.getUser = this.getUser.bind(this)\n    this.componentDidMount = this.componentDidMount.bind(this)\n    // this.updateUser = this.updateUser.bind(this)\n    \n  }\n\n  componentDidMount() {\n    this.getUser()\n  }\n\n  // updateUser (userObject) {\n  //   this.setState(userObject)\n  // }\n\n  getUser() {\n    axios.get('http://localhost:5000/user/', {withCredentials: true}).then(response => {\n      console.log('Get user response: ')\n      console.log(response.data)\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ')\n\n        this.setState({\n          loggedIn: true,\n          username: response.data.user.username\n        })\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null\n        })\n        history.push(\"/\")\n      }\n    }\n    )\n  }\n\n\n\n  \n  // const [color, setColor] = useState(\"#1E384D\")\n  // const [auth, setAuth] = useState(false)\n  // const [authenticated, setAuthenticated] = useState({loggedIn: false, username: null})\n  // // const [isAuthenticated, setIsAuthenticated]\n\n  // // state = { message: \"\" }\n  // function authCallback(isAuthenticated) {\n  //   console.log('function authCallback')\n  //   setAuth(true)\n  //   // axios.get(\"http://localhost:5000/user\", { withCredentials: true })\n  //   // .then(req => console.log(req))\n  //   // .catch(console.error);\n  \n    \n  // }\n\n  // function getUser() {\n  //   axios.get('/user/').then(response => {\n  //     console.log('Get user response: ')\n  //     console.log(response.data)\n  //     if (response.data.user) {\n  //       console.log('Get User: There is a user saved in the server session: ')\n\n  //       setAuthenticated({\n  //         loggedIn: true,\n  //         username: response.data.user.username\n  //       })\n  //     } else {\n  //       console.log('Get user: no user');\n  //       setAuthenticated({\n  //         loggedIn: false,\n  //         username: null\n  //       })\n  //     }\n  //   })\n  // }\n\n  //   componentDidMount() {\n  //     getUser()\n  //   }\n\n\n\n    // axios.get(\"http://localhost:5000/user\", { withCredentials: true })\n    // .then(req => console.log(req.user))\n    // .catch(console.error);\n  \n\n \n\n  render() {\n\n  const PrivateRoute = ({component: Component, authed, ...rest}) => {\n    console.log(\"Private route\")\n    console.log(authed)\n    return (\n      <Route\n        {...rest}\n        render={(props) => authed === true\n          ? <Component {...props} />\n          : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n      />\n    )\n  }\n\n    return (\n      <div style={{backgroundColor: \"#1E384D\", height: \"100vh\"}}>\n        \n        <BrowserRouter>\n        <Switch>\n          <Route path=\"/login\">\n            {/* parentCallback = {authCallback} */}\n            <Login parentCallback = {this.getUser}/>\n          </Route>\n          <PrivateRoute path='/' authed={this.state.loggedIn} component={Home} />\n          {/* <PrivateRoute authed={false} path='/'>\n            <Home />\n          </PrivateRoute> */}\n          {/* <Route path=\"/\">\n            <Home />\n          </Route> */}\n        </Switch>\n        </BrowserRouter>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}