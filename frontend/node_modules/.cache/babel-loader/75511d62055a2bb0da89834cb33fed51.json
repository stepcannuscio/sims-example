{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/components/Table.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTable, useAsyncDebounce, useGlobalFilter, usePagination, useSortBy } from \"react-table\";\nimport searchIcon from \"../images/search.png\";\nimport Popup from \"./Popup\"; // Define a default UI for filtering\n\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter\n}) {\n  _s();\n\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  const searchStyle = {\n    border: '1px solid rgba(30,56,77, 50%)',\n    borderRadius: '5px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: searchStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        margin: \"0 10px\",\n        width: \"12px\"\n      },\n      src: searchIcon,\n      alt: \"search icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: value || \"\",\n      onChange: e => {\n        setValue(e.target.value);\n        onChange(e.target.value);\n      },\n      placeholder: `Search products...`,\n      style: {\n        fontSize: '1.1rem',\n        border: '0',\n        width: '80%',\n        padding: \"10px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GlobalFilter, \"u76gItWTPW4jhTYSCcNG7/LfbyA=\", false, function () {\n  return [useAsyncDebounce];\n});\n\n_c = GlobalFilter;\nexport default function Table({\n  columns,\n  initialSearch,\n  data,\n  type,\n  reloadData,\n  search,\n  perPage,\n  popupEnabled,\n  user,\n  checkbox\n}) {\n  _s2();\n\n  // console.log(props)\\\n  console.log(type);\n  console.log(user);\n  const [isPopup, setIsPopup] = useState(false);\n  const [popupData, setPopupData] = useState({});\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    state,\n    page,\n    canPreviousPage,\n    canNextPage,\n    nextPage,\n    previousPage,\n    state: {\n      pageIndex,\n      pageSize\n    },\n    prepareRow,\n    preGlobalFilteredRows,\n    setGlobalFilter\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 0,\n      pageSize: perPage,\n      hiddenColumns: [\"id\", \"comm_method\", \"email\", \"phone\", \"Vendor_ID\", \"contact_name\", \"subtotal\", \"discount\"],\n      globalFilter: initialSearch\n    }\n  }, useGlobalFilter, useSortBy, usePagination);\n\n  function togglePopup(cell) {\n    console.log('toggling');\n    console.log(isPopup);\n    setIsPopup(!isPopup);\n\n    if (cell) {\n      setPopupData(cell);\n    } else {\n      console.log('hereee'); // console.log(props)\n\n      reloadData(); // if (type === \"products\") {\n      //   reloadData()\n      // } \n    }\n\n    console.log(isPopup);\n    console.log(cell);\n  }\n\n  const results = page.length > 10 ? 10 : page.length;\n  const pageBtnStyle = {\n    backgroundColor: \"#EFEFEF\",\n    border: \"none\",\n    padding: \"5px 15px\",\n    margin: \"0 5px\",\n    borderRadius: \"5px\",\n    color: \"#1E384D\"\n  };\n  return (\n    /*#__PURE__*/\n    // apply the table props\n    _jsxDEV(\"div\", {\n      class: \"inventory-table\",\n      children: [search ? /*#__PURE__*/_jsxDEV(GlobalFilter, {\n        preGlobalFilteredRows: preGlobalFilteredRows,\n        globalFilter: state.globalFilter,\n        setGlobalFilter: setGlobalFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 14\n      }, this) : null, search ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"25px 0\",\n          color: 'rgba(0,0,0, 57%)'\n        },\n        children: [\"Showing the first \", results, \" results of \", rows.length, \" rows\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: // Loop over the header rows\n          headerGroups.map(headerGroup =>\n          /*#__PURE__*/\n          // Apply the header row props\n          _jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: [checkbox ? headerGroup.headers.push(\"\") : null, // Loop over the headers in each row\n            headerGroup.headers.map(column =>\n            /*#__PURE__*/\n            // Apply the header cell props\n            _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: [// Render the header\n              column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"#76c32d\",\n                  fontSize: \"14px\"\n                },\n                children: column.isSorted ? column.isSortedDesc ? ' (high-low)' : ' (low-high)' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: page.map((row, i) => {\n            // Prepare the row for display\n            prepareRow(row);\n            return (\n              /*#__PURE__*/\n              // Apply the row props\n              _jsxDEV(\"tr\", { ...row.getRowProps(),\n                children: [checkbox ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 33\n                }, this) : null, // Loop over the rows cells\n                row.cells.map(cell => {\n                  const stockStyle = {\n                    color: \"#1E384D\"\n                  };\n\n                  if (cell.column.id === \"stockLevel\") {\n                    stockStyle.padding = \"5px\";\n                    stockStyle.borderRadius = \"5px\";\n                    stockStyle.color = \"white\";\n                    stockStyle.textAlign = \"center\";\n\n                    if (cell.value === \"Low\") {\n                      stockStyle.backgroundColor = \"red\";\n                    } else if (cell.value === \"Medium\") {\n                      stockStyle.backgroundColor = \"#FFD300\";\n                    } else {\n                      stockStyle.backgroundColor = \"#4CAF50\";\n                    }\n                  } // Apply the cell props\n\n\n                  return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                    onClick: () => popupEnabled ? togglePopup(cell) : null,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: stockStyle,\n                      children: // Render the cell contents\n                      cell.render('Cell')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this)\n            );\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"right\",\n          margin: \"20px 10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: pageBtnStyle,\n          onClick: () => previousPage(),\n          disabled: !canPreviousPage,\n          children: 'Previous'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          style: pageBtnStyle,\n          id: \"next-btn\",\n          onClick: () => nextPage(),\n          disabled: !canNextPage,\n          children: 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), isPopup ? /*#__PURE__*/_jsxDEV(Popup, {\n        type: type,\n        user: user,\n        data: popupData,\n        toggle: () => togglePopup()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 20\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s2(Table, \"3mJ+1tkt2TMeGa1xUvRhYDp4wcw=\", false, function () {\n  return [useTable];\n});\n\n_c2 = Table;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalFilter\");\n$RefreshReg$(_c2, \"Table\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/components/Table.js"],"names":["React","useState","useTable","useAsyncDebounce","useGlobalFilter","usePagination","useSortBy","searchIcon","Popup","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","value","setValue","onChange","undefined","searchStyle","border","borderRadius","margin","width","e","target","fontSize","padding","Table","columns","initialSearch","data","type","reloadData","search","perPage","popupEnabled","user","checkbox","console","log","isPopup","setIsPopup","popupData","setPopupData","getTableProps","getTableBodyProps","headerGroups","rows","state","page","canPreviousPage","canNextPage","nextPage","previousPage","pageIndex","pageSize","prepareRow","initialState","hiddenColumns","togglePopup","cell","results","pageBtnStyle","backgroundColor","color","map","headerGroup","getHeaderGroupProps","headers","push","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","stockStyle","id","textAlign","getCellProps"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\"\nimport { useTable, useAsyncDebounce, useGlobalFilter, usePagination, useSortBy } from \"react-table\"\nimport searchIcon from \"../images/search.png\"\nimport Popup from \"./Popup\"\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n    }) {\n    const count = preGlobalFilteredRows.length\n    const [value, setValue] = React.useState(globalFilter)\n    const onChange = useAsyncDebounce(value => {\n        setGlobalFilter(value || undefined)\n    }, 200)\n\n    const searchStyle = {\n        border: '1px solid rgba(30,56,77, 50%)',\n        borderRadius: '5px',\n\n    }\n    \n    return (\n    <div style={searchStyle}>\n        <img style={{margin: \"0 10px\", width: \"12px\"}} src={searchIcon} alt=\"search icon\" />\n        <input\n            value={value || \"\"}\n            onChange={e => {\n            setValue(e.target.value);\n            onChange(e.target.value);\n            }}\n            placeholder={`Search products...`}\n            style={{\n            fontSize: '1.1rem',\n            border: '0',\n            width: '80%',\n            padding: \"10px 0\"\n            }}\n        />\n        \n        </div>\n    )\n    }\n\nexport default function Table({columns, initialSearch, data, type, reloadData, search, perPage, popupEnabled, user, checkbox}) {\n  // console.log(props)\\\n  console.log(type)\n  console.log(user)\n\n    const [isPopup, setIsPopup] = useState(false)\n    const [popupData, setPopupData] = useState({})\n    \n    \n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        state,\n        page,\n        canPreviousPage,\n        canNextPage,\n        nextPage,\n        previousPage,\n        state: { pageIndex, pageSize },\n        prepareRow,\n        preGlobalFilteredRows,\n        setGlobalFilter,\n      } = useTable(\n          {\n              columns,\n              data,\n              initialState: {\n                pageIndex: 0, \n                pageSize: perPage,\n                hiddenColumns: [\"id\", \"comm_method\", \"email\", \"phone\", \"Vendor_ID\", \"contact_name\",\n                                \"subtotal\", \"discount\"],\n                globalFilter: initialSearch\n              }\n          },\n          useGlobalFilter,\n          useSortBy,\n          usePagination,\n      )\n      \n      function togglePopup(cell) {\n        console.log('toggling')\n        console.log(isPopup)\n        setIsPopup(!isPopup)\n        if (cell) {\n            setPopupData(cell)\n        } else {\n          console.log('hereee')\n          // console.log(props)\n          reloadData()\n          // if (type === \"products\") {\n          //   reloadData()\n          // } \n          \n\n        }   \n        console.log(isPopup)\n        console.log(cell)\n      }\n\n      const results = page.length > 10 ? 10 : page.length\n\n      const pageBtnStyle = {\n        backgroundColor: \"#EFEFEF\", \n        border: \"none\", \n        padding: \"5px 15px\", \n        margin: \"0 5px\", \n        borderRadius: \"5px\", \n        color: \"#1E384D\"\n      }\n\n      return (\n    \n          // apply the table props\n        <div class=\"inventory-table\">\n          {search ? \n             <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={state.globalFilter}\n                setGlobalFilter={setGlobalFilter}\n              />\n              : null}\n       {search ?  <div style={{margin: \"25px 0\", color: 'rgba(0,0,0, 57%)'}}>\n            Showing the first {results} results of {rows.length} rows\n        </div> : null}\n      \n        <table {...getTableProps()}>\n          <thead>\n            \n            {// Loop over the header rows\n            headerGroups.map(headerGroup => (\n              \n              // Apply the header row props\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {checkbox ? headerGroup.headers.push(\"\") : null}\n                \n                {// Loop over the headers in each row\n                headerGroup.headers.map(column => (\n                  \n                  // Apply the header cell props\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    {// Render the header\n                    column.render('Header')}\n                    {/* Add a sort direction indicator */}\n                  <span style={{color: \"#76c32d\", fontSize: \"14px\"}}>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? ' (high-low)'\n                        : ' (low-high)'\n                      : ''}\n                  </span>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          {/* Apply the table body props */}\n          <tbody {...getTableBodyProps()}>\n            {page.map((row, i) => {\n                // Prepare the row for display\n                prepareRow(row)\n                return (\n                    // Apply the row props\n                    <tr {...row.getRowProps()}>\n                    {checkbox ? <input type=\"checkbox\" /> : null}\n                    {// Loop over the rows cells\n                    \n                    row.cells.map(cell => {\n                        const stockStyle = {\n                            color: \"#1E384D\"\n                        } \n                        if (cell.column.id === \"stockLevel\") {\n                            stockStyle.padding = \"5px\"\n                            stockStyle.borderRadius = \"5px\"\n                            stockStyle.color = \"white\"\n                            stockStyle.textAlign = \"center\"\n\n                            if (cell.value === \"Low\") {\n                                stockStyle.backgroundColor = \"red\"\n                            } else if (cell.value === \"Medium\") {\n                                stockStyle.backgroundColor = \"#FFD300\"\n                            } else {\n                                stockStyle.backgroundColor = \"#4CAF50\"\n                            }\n                        }\n                        // Apply the cell props\n                        return (\n                        <td {...cell.getCellProps()} onClick={() => popupEnabled ? togglePopup(cell) : null}>\n                            <div style={stockStyle}>\n                            {// Render the cell contents\n                            cell.render('Cell')}\n                            </div>\n                        </td>\n                        )\n                    })}\n                    </tr>\n                )\n                })}           \n          </tbody>\n        </table>\n        <div style={{textAlign: \"right\", margin: \"20px 10px\"}}>\n            <button style={pageBtnStyle} onClick={() => previousPage()} disabled={!canPreviousPage}>\n            {'Previous'}\n            </button>{' '}\n            <button style={pageBtnStyle} id=\"next-btn\" onClick={() => nextPage()} disabled={!canNextPage}>\n            {'Next'}\n            </button>{' '}\n        </div>\n        {isPopup ? <Popup type={type} user={user} data={popupData} toggle={() => togglePopup()} /> : null}\n        </div> \n      )\n}\n\n"]},"metadata":{},"sourceType":"module"}