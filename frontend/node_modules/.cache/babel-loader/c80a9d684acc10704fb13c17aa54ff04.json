{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport React, { Component, useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Inventory from './components/Inventory'; // class App extends Component {\n//   constructor() {\n//     super()\n//     this.state = {\n//       loggedIn: false,\n//       user: null\n//     }\n//     this.getUser = this.getUser.bind(this)\n//     this.componentDidMount = this.componentWillMount.bind(this)\n//   }\n//   componentWillMount() {\n//     this.getUser()\n//   }\n//   getUser() {\n//     return new Promise(function (resolve, reject) {\n//       axios.get('http://localhost:5000/user/', {withCredentials: true}).then(response => {\n//         console.log('Get user response: ')\n//         console.log(response.data)\n//         if (response.data.user) {\n//           console.log('Get User: There is a user saved in the server session: ')\n//           console.log(response.data.user)\n//           resolve(this.setState({\n//             loggedIn: true,\n//             user: response.data.user\n//           }))\n//         } else {\n//           reject(console.log('Get user: no user'))\n//           this.setState({\n//             loggedIn: false,\n//             username: null\n//           })\n//         }\n//       }\n//       )})}\n// render() {\n// const PrivateRoute = ({ component: Component, user, ...rest }) => {\n//   const isLoggedIn = this.state.loggedIn\n//   console.log(isLoggedIn)\n//   return (\n//     <Route\n//       {...rest}\n//       render={props =>\n//         isLoggedIn ? (\n//           <Component {...props} user={user}/>\n//         ) : (\n//           <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n//         )\n//       }\n//     />\n//   )\n// }\n\nexport default function App() {\n  _s();\n\n  const [isLoading, setLoading] = useState(true);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n\n  function getUser() {\n    axios.get('http://localhost:5000/user/', {\n      withCredentials: true\n    }).then(response => {\n      console.log('Get user response: ');\n      console.log(response.data);\n\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ');\n        console.log(response.data.user);\n        setUser(response.data.user);\n        setLoggedIn(true);\n      } else {\n        console.log('Get user: no user');\n        setUser(response.data.user);\n        setLoggedIn(false);\n      }\n\n      setLoading(false);\n    });\n  }\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 14\n    }, this);\n  }\n\n  const PrivateRoute = ({\n    component: Component,\n    user,\n    ...rest\n  }) => {\n    const isLoggedIn = loggedIn;\n    console.log(user);\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => user ? /*#__PURE__*/_jsxDEV(Component, { ...props,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#1E384D\",\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          isLoggedIn: loggedIn,\n          parentCallback: getUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/inventory\",\n        component: Inventory,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/\",\n        component: Home,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 7\n  }, this);\n} // }\n// export default App;\n\n_s(App, \"mrKMWs0kouxu39zxoQ/L5S2PzgE=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/burm-inventory/frontend/src/App.js"],"names":["Switch","Route","Redirect","Login","Home","React","Component","useState","useEffect","axios","Inventory","App","isLoading","setLoading","loggedIn","setLoggedIn","user","setUser","getUser","get","withCredentials","then","response","console","log","data","PrivateRoute","component","rest","isLoggedIn","props","pathname","state","from","location","backgroundColor","height"],"mappings":"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","sourcesContent":["import './App.css';\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport React, { Component, useState, useEffect } from 'react';\nimport axios from \"axios\"\nimport Inventory from './components/Inventory';\n\n// class App extends Component {\n  \n//   constructor() {\n//     super()\n//     this.state = {\n//       loggedIn: false,\n//       user: null\n//     }\n\n//     this.getUser = this.getUser.bind(this)\n//     this.componentDidMount = this.componentWillMount.bind(this)\n    \n//   }\n\n//   componentWillMount() {\n//     this.getUser()\n//   }\n\n//   getUser() {\n//     return new Promise(function (resolve, reject) {\n//       axios.get('http://localhost:5000/user/', {withCredentials: true}).then(response => {\n//         console.log('Get user response: ')\n//         console.log(response.data)\n//         if (response.data.user) {\n//           console.log('Get User: There is a user saved in the server session: ')\n//           console.log(response.data.user)\n//           resolve(this.setState({\n//             loggedIn: true,\n//             user: response.data.user\n//           }))\n      \n//         } else {\n//           reject(console.log('Get user: no user'))\n//           this.setState({\n//             loggedIn: false,\n//             username: null\n//           })\n//         }\n//       }\n      \n//       )})}\n \n \n\n  // render() {\n\n    // const PrivateRoute = ({ component: Component, user, ...rest }) => {\n\n    //   const isLoggedIn = this.state.loggedIn\n    //   console.log(isLoggedIn)\n\n    //   return (\n    //     <Route\n    //       {...rest}\n    //       render={props =>\n    //         isLoggedIn ? (\n    //           <Component {...props} user={user}/>\n    //         ) : (\n    //           <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n    //         )\n    //       }\n    //     />\n    //   )\n    // }\n\n  export default function App() {\n\n    const [isLoading, setLoading] = useState(true);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [user, setUser] = useState(null);\n\n\n    function getUser() {\n      axios.get('http://localhost:5000/user/', {withCredentials: true}).then(response => {\n        console.log('Get user response: ')\n        console.log(response.data)\n        \n        if (response.data.user) {\n          console.log('Get User: There is a user saved in the server session: ')\n          console.log(response.data.user)\n          \n          setUser(response.data.user)\n          setLoggedIn(true)\n        } else {\n          console.log('Get user: no user')\n          \n          setUser(response.data.user)\n          setLoggedIn(false)\n        }\n        setLoading(false)\n      });\n    }\n\n    useEffect(() => {\n      getUser()\n    }, []);\n  \n    if (isLoading) {\n      return <div className=\"loader\"></div>;\n    }\n\n    const PrivateRoute = ({ component: Component, user, ...rest }) => {\n\n      const isLoggedIn = loggedIn\n      console.log(user)\n\n      return (\n        <Route\n          {...rest}\n          render={props =>\n            user ? (\n              <Component {...props} user={user}/>\n            ) : (\n              <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n            )\n          }\n        />\n      )\n    }\n\n    return (\n      <div style={{backgroundColor: \"#1E384D\", height: \"100vh\"}}>\n        <Switch>\n          <Route path=\"/login\">\n            <Login isLoggedIn={loggedIn} parentCallback = {getUser}/>\n          </Route>\n          <PrivateRoute path='/inventory' component={Inventory} user={user}/>\n          <PrivateRoute path='/' component={Home} user={user}/>\n        </Switch>\n      </div>\n    );\n  }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}