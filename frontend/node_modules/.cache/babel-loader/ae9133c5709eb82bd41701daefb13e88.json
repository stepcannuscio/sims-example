{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/components/SalesChart.js\";\nimport { ResponsiveContainer, Legend, LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nexport default function SalesChart(props) {\n  console.log(props);\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  const maxShopify = Math.max.apply(Math, props.data.map(function (o) {\n    return o.shopify;\n  }));\n  const maxWoo = Math.max.apply(Math, props.data.map(function (o) {\n    return o.woo;\n  }));\n  const maxPurchase = Math.round(Math.max(maxShopify, maxWoo) / 1000) * 1000;\n\n  const CustomTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (active) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-tooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"label\",\n            children: payload[0] ? payload[0].payload.date : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"label\",\n          style: {\n            color: \"#8884d8\"\n          },\n          children: payload[0] && payload[0].payload.shopify ? `Shopify: ${formatter.format(payload[0].payload.shopify)}` : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"label\",\n          style: {\n            color: \"red\"\n          },\n          children: payload[0] && payload[0].payload.woo ? `Woo: ${formatter.format(payload[0].payload.woo)}` : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: props.data,\n      children: [/*#__PURE__*/_jsxDEV(Legend, {\n        verticalAlign: \"top\",\n        height: 36\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"shopify\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"woo\",\n        stroke: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n        stroke: \"#ccc\",\n        strokeDasharray: \"5 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        ticks: [Math.round(maxPurchase / 4), Math.round(maxPurchase / 2), Math.round(maxPurchase / 4 * 3), Math.round(maxPurchase)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_c = SalesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalesChart\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/components/SalesChart.js"],"names":["ResponsiveContainer","Legend","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","SalesChart","props","console","log","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maxShopify","Math","max","apply","data","map","o","shopify","maxWoo","woo","maxPurchase","round","CustomTooltip","active","payload","label","date","color","format"],"mappings":"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","sourcesContent":["import { ResponsiveContainer, Legend, LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\n\nexport default function SalesChart(props) {\n\n    console.log(props)\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0\n    })\n\n    const maxShopify = Math.max.apply(Math, props.data.map(function(o) { return o.shopify; }))\n    const maxWoo = Math.max.apply(Math, props.data.map(function(o) { return o.woo; }))\n    const maxPurchase = Math.round(Math.max(maxShopify, maxWoo) / 1000) * 1000\n\n    const CustomTooltip = ({ active, payload, label }) => {        \n     \n        if (active) {\n            return (\n            <div className=\"custom-tooltip\">\n                <strong><p className=\"label\">{payload[0] ? payload[0].payload.date : null}</p></strong>\n                <p className=\"label\" style={{color: \"#8884d8\" }}>{payload[0] && payload[0].payload.shopify  ? `Shopify: ${formatter.format(payload[0].payload.shopify)}` : null}</p>\n                <p className=\"label\" style={{color: \"red\" }}>{payload[0] && payload[0].payload.woo ? `Woo: ${formatter.format(payload[0].payload.woo)}` : null}</p>\n            </div>\n            );\n        }\n        \n        return null;\n        };\n    \n\n    return (\n        <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart data={props.data} >\n                <Legend verticalAlign=\"top\" height={36}/>\n                <Line type=\"monotone\" dataKey=\"shopify\" stroke=\"#8884d8\" />\n                <Line type=\"monotone\" dataKey=\"woo\" stroke=\"red\" />\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis ticks={[Math.round(maxPurchase/4), Math.round(maxPurchase/2), Math.round((maxPurchase/4)*3), Math.round(maxPurchase)]} />\n                <Tooltip content={<CustomTooltip />}/>\n            </LineChart>\n        </ResponsiveContainer>\n    )\n}"]},"metadata":{},"sourceType":"module"}