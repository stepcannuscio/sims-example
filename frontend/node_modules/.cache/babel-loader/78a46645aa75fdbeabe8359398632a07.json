{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/Layout\";\nimport SalesChart from \"./SalesChart\";\nimport CogsChart from \"./CogsChart\";\nimport CallToAction from \"./CallToAction\";\nimport MiniTable from \"./MiniTable\";\nimport * as router from \"./homeAPI\";\nexport default function Home(props) {\n  _s();\n\n  const [dateFilter, setDateFilter] = useState(\"month\");\n  const [salesData, setSalesData] = useState([]);\n  const [cogsData, setCogsData] = useState([]);\n  const [topSellers, setTopSellers] = useState([]);\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [updateMiniTable, setMiniTable] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const style = {\n    display: `flex`,\n    justifyContent: `space-around`,\n    // margin: `0 20px`,\n    padding: `0 20px`,\n    // height: `100vh` /* Force our height since we don't have actual content yet */,\n    color: `#1E384D`,\n    gridArea: \"main\",\n    backgroundColor: \"rgb(246,246,247)\",\n    textAlign: \"center\",\n    flexWrap: \"wrap\"\n  };\n  const filterStyle = {\n    padding: \"10px 30px\",\n    borderRadius: \"5px\",\n    border: \"none\",\n    backgroundColor: \"rgb(45,142,255)\",\n    color: \"white\",\n    fontSize: \"16px\",\n    outline: \"none\",\n    display: \"inline-block\",\n    margin: \"10px\" // appearance: \"none\"\n\n  };\n  const datePickerStyle = {\n    padding: \"10px 30px\",\n    borderRadius: \"5px\",\n    border: \"none\",\n    backgroundColor: \"rgb(45,142,255)\",\n    color: \"white\",\n    margin: \"10px\",\n    fontSize: \"16px\",\n    display: \"inline-block\",\n    fontFamily: \"inherit\"\n  };\n\n  function getData(filter) {\n    router.loadPurchases(filter, startDate, endDate).then(data => {\n      if (data) {\n        setSalesData(data.salesData);\n        setCogsData(data.cogsData);\n        setTopSellers(data.topSellers);\n      }\n    });\n  }\n\n  useEffect(() => {\n    getData(dateFilter);\n  }, []);\n\n  function dateFilterChanged(e) {\n    setDateFilter(e.target.value);\n    getData(e.target.value);\n  }\n\n  function filterByDate() {\n    getData(dateFilter);\n    setMiniTable(!updateMiniTable);\n  } // const tableStyle = {\n  //   width: \"100%\", \n  //   textAlign: \"left\", \n  //   backgroundColor: \"#efefef\",\n  //   padding: \"30px\",\n  //   borderRadius: \"5px\"\n  // }\n  // const tableHeaderStyle = {\n  //     paddingBottom: \"10px\",\n  //   }\n  // const tableBodyStyle = {\n  //   paddingRight: \"20px\",\n  // }\n  // const topSellingProducts = {\n  //   \"Delta 8 THC Cart\": \"10\",\n  //   \"Disposable Vape Pen\": \"500\",\n  //   \"Endocure Pet Chews\": \"200\"\n  // }\n  // const productsRunningLow = {\n  //   \"3CHI Cart - Gorilla Glue\": \"55\",\n  //   \"Bath Salts\": \"2\",\n  //   \"White Whale 3.5g\": \"16\"\n  // }\n  // function sortProducts(array, type) {\n  //   // Create items array\n  //   var items = Object.keys(array).map(key => {\n  //     return [key, array[key]];\n  //   });\n  //   if (type === \"high\") {\n  //     // Sort the array based on the second element\n  //     items.sort(function(first, second) {\n  //       return second[1] - first[1];\n  //     });\n  //   } else if (type === \"low\") {\n  //     // Sort the array based on the first element\n  //     items.sort(function(first, second) {\n  //       return first[1] - second[1];\n  //     });\n  //   }\n  //   return items\n  // }\n  // const sortedTopSellingProducts = sortProducts(topSellingProducts, \"high\")\n  // const sortedProductsRunningLow = sortProducts(productsRunningLow, \"low\")\n  // const renderLineChart = (\n  //   <LineChart width={400} height={400} data={data}>\n  //     <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\n  //   </LineChart>\n  // );\n\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    user: props.user,\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(CallToAction, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          margin: \"20px\",\n          justifyContent: `flex-start`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          style: filterStyle,\n          defaultValue: \"month\",\n          value: dateFilter,\n          onChange: dateFilterChanged,\n          id: \"dateFilter\",\n          name: \"dateFilter\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"day\",\n            children: \"Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"month\",\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"week\",\n            children: \"Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year\",\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: datePickerStyle,\n          onChange: e => setStartDate(e.target.value),\n          type: \"date\",\n          id: \"start\",\n          name: \"start\",\n          value: startDate,\n          min: \"2018-01-01\",\n          max: new Date().toISOString().slice(0, 10)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: datePickerStyle,\n          onChange: e => setEndDate(e.target.value),\n          type: \"date\",\n          id: \"end\",\n          name: \"end\",\n          value: endDate,\n          min: \"2018-01-01\",\n          max: new Date().toISOString().slice(0, 10)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          style: {\n            display: \"inline-block\",\n            margin: \"0\",\n            padding: \"11px 30px\",\n            backgroundColor: \"rgb(45,142,255)\",\n            color: \"white\",\n            fontSize: \"16px\",\n            cursor: \"pointer\"\n          },\n          onClick: filterByDate,\n          children: \"Filter by Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Total Sales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(SalesChart, {\n          data: salesData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Cost of Goods Sold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(CogsChart, {\n          data: cogsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mini-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Top Sellers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(MiniTable, {\n          data: topSellers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"1pz74C0nAvL8I8Ni5LMkjxJdQlQ=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Home/Home.js"],"names":["React","useState","useEffect","Layout","SalesChart","CogsChart","CallToAction","MiniTable","router","Home","props","dateFilter","setDateFilter","salesData","setSalesData","cogsData","setCogsData","topSellers","setTopSellers","startDate","setStartDate","endDate","setEndDate","updateMiniTable","setMiniTable","isLoading","setLoading","style","display","justifyContent","padding","color","gridArea","backgroundColor","textAlign","flexWrap","filterStyle","borderRadius","border","fontSize","outline","margin","datePickerStyle","fontFamily","getData","filter","loadPurchases","then","data","dateFilterChanged","e","target","value","filterByDate","user","width","Date","toISOString","slice","cursor"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\n\nimport Layout from \"../components/Layout\"\nimport SalesChart from \"./SalesChart\"\nimport CogsChart from \"./CogsChart\"\nimport CallToAction from \"./CallToAction\"\nimport MiniTable from \"./MiniTable\"\n\nimport * as router from \"./homeAPI\";\n\n\nexport default function Home(props) {\n\n  const [dateFilter, setDateFilter] = useState(\"month\")\n  const [salesData, setSalesData] = useState([])\n  const [cogsData, setCogsData] = useState([])\n  const [topSellers, setTopSellers] = useState([])\n  const [startDate, setStartDate] = useState(\"\")\n  const [endDate, setEndDate] = useState(\"\")\n  const [updateMiniTable, setMiniTable] = useState(false)\n  const [isLoading, setLoading] = useState(true);\n\n  const style = {\n    display: `flex`,\n    justifyContent: `space-around`,\n    // margin: `0 20px`,\n    padding: `0 20px`,\n    // height: `100vh` /* Force our height since we don't have actual content yet */,\n    color: `#1E384D`,\n    gridArea: \"main\",\n    backgroundColor: \"rgb(246,246,247)\",\n    textAlign: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const filterStyle = {\n    padding: \"10px 30px\",\n    borderRadius: \"5px\",\n    border: \"none\",\n    backgroundColor: \"rgb(45,142,255)\",\n    color: \"white\",\n    fontSize: \"16px\",\n    outline: \"none\",\n    display: \"inline-block\",\n    margin: \"10px\"\n    \n    // appearance: \"none\"\n\n  }\n\n  const datePickerStyle = {\n    padding: \"10px 30px\",\n    borderRadius: \"5px\",\n    border: \"none\",\n    backgroundColor: \"rgb(45,142,255)\",\n    color: \"white\",\n    margin: \"10px\",\n    fontSize: \"16px\",\n    display: \"inline-block\",\n    fontFamily: \"inherit\"\n    \n  }\n\n  function getData(filter) {\n    router.loadPurchases(filter, startDate, endDate).then(data => {\n      if (data) {\n        setSalesData(data.salesData)\n        setCogsData(data.cogsData)\n        setTopSellers(data.topSellers)\n      }\n    });\n}\n\n  useEffect(() => {\n    \n    getData(dateFilter)\n  }, []);\n\n \n\n\n\n  function dateFilterChanged(e) {\n    setDateFilter(e.target.value)\n    getData(e.target.value)\n  }\n\n  function filterByDate() {\n    getData(dateFilter)\n    setMiniTable(!updateMiniTable)\n\n  }\n\n\n  // const tableStyle = {\n  //   width: \"100%\", \n  //   textAlign: \"left\", \n  //   backgroundColor: \"#efefef\",\n  //   padding: \"30px\",\n  //   borderRadius: \"5px\"\n  // }\n\n  // const tableHeaderStyle = {\n  //     paddingBottom: \"10px\",\n  //   }\n  // const tableBodyStyle = {\n  //   paddingRight: \"20px\",\n  // }\n\n  // const topSellingProducts = {\n  //   \"Delta 8 THC Cart\": \"10\",\n  //   \"Disposable Vape Pen\": \"500\",\n  //   \"Endocure Pet Chews\": \"200\"\n  // }\n\n  // const productsRunningLow = {\n  //   \"3CHI Cart - Gorilla Glue\": \"55\",\n  //   \"Bath Salts\": \"2\",\n  //   \"White Whale 3.5g\": \"16\"\n  // }\n\n  // function sortProducts(array, type) {\n\n  //   // Create items array\n  //   var items = Object.keys(array).map(key => {\n  //     return [key, array[key]];\n  //   });\n\n  //   if (type === \"high\") {\n  //     // Sort the array based on the second element\n  //     items.sort(function(first, second) {\n  //       return second[1] - first[1];\n  //     });\n  //   } else if (type === \"low\") {\n  //     // Sort the array based on the first element\n  //     items.sort(function(first, second) {\n  //       return first[1] - second[1];\n  //     });\n  //   }\n  \n  //   return items\n  // }\n\n  // const sortedTopSellingProducts = sortProducts(topSellingProducts, \"high\")\n  // const sortedProductsRunningLow = sortProducts(productsRunningLow, \"low\")\n\n\n// const renderLineChart = (\n//   <LineChart width={400} height={400} data={data}>\n//     <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\n//   </LineChart>\n// );\nif (isLoading) {\n  return <div className=\"loader\"></div>;\n}\n\n\n   \n    return (\n        <Layout user={props.user}>\n          \n              <main style={style}>\n                <CallToAction />\n              \n                {/* <button class=\"edit-btn\" style={{margin: \"20px\", backgroundColor: \"#76c32d\",boxShadow:\n        `0 1px 4px rgba(0, 0, 0, 0.2), 0 0 10px rgba(10, 0, 0, 0.1)`,\n        borderRadius: \"5px\", }} onClick={() => history.push(\"/vendors\")}>Order</button> */}\n                \n                <div style={{width: \"100%\", margin: \"20px\", justifyContent: `flex-start`,}}>\n                <select style={filterStyle} defaultValue=\"month\" value={dateFilter} onChange={dateFilterChanged} id=\"dateFilter\" name=\"dateFilter\">\n                  <option value=\"day\">Day</option>\n                  <option value=\"month\">Month</option>\n                  <option value=\"week\">Week</option>\n                  <option value=\"year\">Year</option>\n                </select>\n\n                {/* <label for=\"start\">Start date:</label> */}\n\n                <input style={datePickerStyle} onChange={e => setStartDate(e.target.value)} type=\"date\" id=\"start\" name=\"start\"\n                      value={startDate}\n                      min=\"2018-01-01\" max={new Date().toISOString().slice(0,10)} />\n\n                {/* <label for=\"end\">End date:</label> */}\n\n                <input style={datePickerStyle} onChange={e => setEndDate(e.target.value)} type=\"date\" id=\"end\" name=\"end\"\n                      value={endDate}\n                    min=\"2018-01-01\" max={new Date().toISOString().slice(0,10)} />    \n                <button className=\"btn\" style={{display: \"inline-block\", margin: \"0\", padding: \"11px 30px\", backgroundColor: \"rgb(45,142,255)\", color: \"white\", fontSize: \"16px\", cursor: \"pointer\"}} onClick={filterByDate}>Filter by Date</button>\n                </div>\n                \n                <div className=\"chart\">\n             \n              \n                  <h2>Total Sales</h2>\n                  <SalesChart data={salesData}/>\n                </div>\n                <div className=\"chart\">\n                {/* <select id=\"itemFilter\" name=\"itemFilter\">\n                  <option value=\"product\">Product</option>\n                  <option value=\"category\">Category</option>\n                </select> */}\n                  <h2>Cost of Goods Sold</h2>\n                  <CogsChart data={cogsData}/>\n                </div>\n                <div className=\"mini-table\">\n                  <h2>Top Sellers</h2>\n                  {/* <MiniTable changed={updateMiniTable} startDate={startDate} endDate={endDate}/> */}\n                  <MiniTable data={topSellers}/>\n                </div>\n                {/* <div>\n                  <h2>Top Selling Products</h2>\n                  <table style={tableStyle}>\n                    <thead >\n                      <tr>\n                        <th style={tableHeaderStyle}>Product</th>\n                        <th style={tableHeaderStyle}>Units Sold</th>\n                      </tr>\n                    </thead>\n\n                    <tbody>\n                    {sortedTopSellingProducts.map((item, index) => {\n                      return (\n                      <tr key={index} >\n                        <td style={tableBodyStyle}>{item[0]}</td>\n                        <td style={tableBodyStyle}>{item[1]}</td>\n                      </tr>\n                      )\n                    })\n                    }\n                    </tbody>\n                  </table>\n                  <button className=\"btn-2\">View All</button>\n                </div> */}\n             \n                {/* <div>\n                  <h2>Products Running Low</h2>\n                  <table style={tableStyle}>\n                    <thead >\n                      <tr>\n                        <th style={tableHeaderStyle}>Product</th>\n                        <th style={tableHeaderStyle}>Units Sold</th>\n                      </tr>\n                    </thead>\n\n                    <tbody>\n                    {sortedProductsRunningLow.map((item, index) => {\n                      return (\n                      <tr key={index} >\n                        <td style={tableBodyStyle}>{item[0]}</td>\n                        <td style={tableBodyStyle}>{item[1]}</td>\n                      </tr>\n                      )\n                    })\n                    }\n                    </tbody>\n                  </table>\n                  <button className=\"btn-2\">View All</button>\n                </div> */}\n              </main>\n        </Layout>\n       \n    )\n  }"]},"metadata":{},"sourceType":"module"}