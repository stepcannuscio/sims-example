{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Orders/OrderPopup.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport * as router from \"./orderAPI\";\nexport default function OrderPopup(props) {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [productData, setProductData] = useState([]);\n  const [variantData, setVariantData] = useState([]);\n  const [quantity, setQuantity] = useState(0); // const [variant, setVariant] = useState(null)\n  // const [ogData, setOGData] = useState([])\n\n  const [isLoading, setLoading] = useState(false);\n  const [orderBtnText, setOrderBtnText] = useState(\"Edit Order\");\n  const [orderItemBtnText, setOrderItemBtnText] = useState(\"Edit Order Item\");\n  const [isEditingOrder, setEditingOrder] = useState(false);\n  const [isEditingOrderItem, setEditingOrderItem] = useState(false);\n  const [editColor, setEditColor] = useState(\"#76c32d\");\n  const [isTrackingHidden, setTrackingHidden] = useState(true);\n  const [idsToUpdate, setIdsToUpdate] = useState([]);\n  const [dataToUpdate, setDataToUpdate] = useState([]);\n  const [itemsToDelete, setItemsToDelete] = useState([]);\n  const [itemsToAdd, setItemsToAdd] = useState([]);\n  const [isProductSelectHidden, setProductSelectHidden] = useState(true);\n  const [isVariantSelectHidden, setVariantSelectHidden] = useState(true);\n  const [isQuantityHidden, setQuantityHidden] = useState(true);\n  const [isAddBtnHidden, setAddBtnHidden] = useState(true); // const [status, setStatus] = useState(\"\")\n  // const [tracking, setTracking] = useState(\"\")\n  // const [orderDiscount, setOrderDiscount] = useState(\"\")\n  // const [orderTotal, setOrderTotal] = useState(\"\")\n  // const [orderSubtotal, setOrderSubtotal] = useState(0)\n\n  const orderSubtotal = useRef();\n  const orderDiscount = useRef();\n  const orderTotal = useRef();\n  const tracking = useRef();\n  const status = useRef();\n  const product = useRef();\n  const variant = useRef();\n  console.log(dataToUpdate);\n  console.log(idsToUpdate);\n  console.log(productData); // console.log(isTrackingHidden)\n  // console.log(status)\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  const inputStyle = {\n    margin: \"20px auto\",\n    padding: \"10px 20px\",\n    fontSize: \"16px\",\n    border: \"none\",\n    borderBottom: \"1px solid #76c32d\"\n  };\n\n  function getData() {\n    setLoading(true);\n    router.loadOrder(props.values.id).then(data => {\n      if (data) {\n        console.log(data);\n        setData(data); // const newData = data.slice()\n\n        const newData = data.map(a => ({ ...a\n        })); // make copy to compare dataToUpdate with to look for changes\n\n        console.log(newData);\n        setOriginalData(newData);\n        setLoading(false);\n      }\n    });\n  }\n\n  useEffect(() => {\n    getData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 16\n    }, this);\n  }\n\n  function editBtnClicked(e) {\n    if (e.target.id === \"order-btn\") {\n      if (!isEditingOrder) {\n        setOrderBtnText(\"Save Order\");\n        setEditingOrder(true);\n      } else {\n        saveOrder();\n      }\n    } else if (e.target.id === \"order-item-btn\") {\n      if (!isEditingOrderItem) {\n        setOrderItemBtnText(\"Save Order Item\");\n        setEditingOrderItem(true);\n      } else {\n        saveOrderItem();\n      }\n    }\n\n    setEditColor(editColor === \"#26B1FF\" ? \"#76c32d\" : \"#26B1FF\");\n  }\n\n  function saveOrder() {\n    const orderData = {\n      subtotal: orderSubtotal.current.value ? orderSubtotal.current.value : data[0].order_subtotal,\n      discount: orderDiscount.current.value ? orderDiscount.current.value : data[0].order_discount,\n      // total: orderTotal.current.value ? orderTotal.current.value : data[0].order_total,\n      status: status.current.value ? status.current.value : data[0].status,\n      tracking: tracking.current.value ? tracking.current.value : data[0].tracking\n    };\n    const discountsToUpdate = [];\n    data.forEach(item => {\n      if (item.discount === \"0\" || item.discount === 0 || item.discount === \"\") {\n        discountsToUpdate.push(item);\n      }\n    });\n    const isItemDiscount = data ? true : false;\n    router.updateOrder(orderData, props.values.id, data, discountsToUpdate).then(data => {\n      if (data === \"Success\") {\n        setEditingOrder(false);\n        setOrderBtnText(\"Edit Order\");\n        getData(); // reload order item data if the status is completed b/c then would have updated the discount and cost of the items\n        // setTrackingHidden(true)\n      } else {\n        alert(\"Failed to save order. Please try again.\");\n        setOrderBtnText(\"Edit Order\");\n      }\n    });\n  }\n\n  function saveOrderItem() {\n    console.log('Saving order item'); // make sure to only pass in data with changes\n\n    const updatedData = [];\n    console.log(data);\n    console.log(originalData);\n    console.log(dataToUpdate);\n    dataToUpdate.forEach(newItem => {\n      originalData.forEach(ogItem => {\n        if (ogItem.order_item_id === newItem.order_item_id) {\n          console.log(ogItem);\n          console.log(newItem); // Same item\n\n          if (newItem.quantity !== ogItem.quantity && newItem.quantity || newItem.cost !== ogItem.cost && newItem.cost || // (newItem.subtotal !== ogItem.subtotal) && newItem.subtotal || \n          newItem.discount !== ogItem.discount && newItem.discount) // (newItem.total !== ogItem.total) && newItem.total ) \n            {\n              // data has changed, so should save this item\n              newItem.quantity = newItem.quantity ? newItem.quantity : ogItem.quantity;\n              newItem.cost = newItem.cost ? newItem.cost : ogItem.cost; // newItem.subtotal = newItem.subtotal ? newItem.subtotal : ogItem.subtotal\n\n              newItem.discount = newItem.discount ? newItem.discount : ogItem.discount; // newItem.total = newItem.total ? newItem.total : ogItem.total\n\n              updatedData.push(newItem);\n            }\n        }\n      });\n    }); // const itemsToDelete = []\n    // console.log(data)\n    // originalData.forEach(item => {\n    //     console.log(item)\n    //     if (!data.includes(item)) {\n    //         itemsToDelete.push(item)\n    //     }\n    // })\n\n    console.log(itemsToDelete); // const found = originalData.some(item=> data.includes(item))\n\n    console.log(updatedData);\n    router.updateOrderItem(updatedData, props.values.id, itemsToDelete, itemsToAdd).then(data => {\n      if (data === \"Success\") {\n        setEditingOrderItem(false);\n        setOrderItemBtnText(\"Edit Order Items\");\n        getData();\n      } else {\n        alert(\"Failed to save order items. Please try again.\");\n        setOrderItemBtnText(\"Edit Order Items\");\n      }\n    });\n  } // function statusChanged(e) {\n  //     console.log(e.target.value)\n  //     setStatus(e.target.value)\n  //     if (e.target.value === \"fulfilled\") {\n  //         setTrackingHidden(false)\n  //     } else {\n  //         setTrackingHidden(true)\n  //     }\n  // }\n  // function selectChanged(e) {\n  //     console.log(e.target.id)\n  // }\n\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  } //     function editInput(e) {\n  //         // e.preventDefault()\n  //         // console.log(orderSubtotal)\n  //         // console.log(e.target.value)\n  //         // console.log(e.target.id)\n  //         switch(e.target.id) {\n  //             case \"order-subtotal\":\n  //                 // setOrderSubtotal(e.target.value)\n  //                 console.log(e.target.value)\n  //                 console.log(orderSubtotal.current.value)\n  //                 break;\n  //             case \"order-total\":\n  //                 setOrderTotal(e.target.value)\n  //                 // break;\n  //             case \"order-discount\":\n  //                 setOrderDiscount(e.target.value)\n  //                 break\n  //             case \"tracking\":\n  //                 setTracking(e.target.value)\n  //                 break\n  //             case \"status\":\n  //                 setStatus(e.target.value)\n  //                 break\n  //             default:\n  //               break\n  //     }\n  // }\n\n\n  function editInput(data, value, type) {\n    data[type] = value; // update the value to be what was entered in the inputs\n\n    console.log(data);\n\n    if (value !== \"0\" && value !== 0 && value !== \"\") {\n      if (idsToUpdate.includes(data.order_item_id)) {\n        // Item is in array so let's update it\n        dataToUpdate.forEach((item, index) => {\n          if (item.order_item_id === data.order_item_id) {\n            var array = [...dataToUpdate]; // make a separate copy of the array\n\n            if (index !== -1) {\n              array.splice(index, 1);\n              setDataToUpdate(array);\n            }\n\n            setDataToUpdate(oldArray => [...oldArray, data]); // console.log(newData.quantity)\n            // if (newData.quantity !== \"0\" && newData.quantity !== 0 && newData.quantity !== \"\") {\n            //     console.log('are we calling here')\n          }\n        });\n      } else {\n        setIdsToUpdate(oldArray => [...oldArray, data.order_item_id]);\n        setDataToUpdate(oldArray => [...oldArray, data]);\n      }\n    } // console.log(data)\n    // var newData = item\n    // newData[type] = value\n    // console.log(newData)\n    // const newData = {\n    //     item_id: id,\n    //     quantity: \n    //     variantTitle: data.variant,\n    //     variantId: data.variant_id,\n    //     cost: data.cost,\n    //     quantity: orderQuantity,\n    //     subtotal: Math.round(data.cost * orderQuantity * 100, 2) / 100\n    // }\n    // if (variantsToUpdate.includes(data.variant_id)) {\n    //     // Item is in array so let's update it\n    //     dataToUpdate.forEach((item, index) => {\n\n  }\n\n  function remove(itemToRemove) {\n    console.log(itemToRemove);\n    data.forEach((item, index) => {\n      if (item.order_item_id === itemToRemove.order_item_id) {\n        var array = [...data]; // make a separate copy of the array\n\n        setItemsToDelete(oldArray => [...oldArray, item.order_item_id]);\n\n        if (index !== -1) {\n          array.splice(index, 1);\n          console.log(data);\n          setData(array);\n        }\n      }\n    }); // if (dataToUpdate.length > 0) {\n    //     dataToUpdate.forEach((item, index) => {   \n    //         if (item.order_item_id === itemToRemove.order_item_id) {\n    //             var array = [...dataToUpdate]; // make a separate copy of the array\n    //             if (index !== -1) {\n    //                 array.splice(index, 1);\n    //                 setDataToUpdate(array);\n    //             } \n    //         }\n    //     })\n    // }\n  }\n\n  function addItem() {\n    // event.nativeEvent.target[index].text\n    const index = variant.current.selectedIndex;\n    console.log(variant.current[index].text);\n    console.log(product.current.value);\n    const newData = {\n      product: product.current[index].text,\n      variant: variant.current[index].text,\n      variant_id: variant.current.value.split('-')[0],\n      cost: variant.current.value.split('-')[1],\n      quantity: quantity,\n      discount: 0\n    };\n    setData(oldArray => [...oldArray, newData]);\n    setItemsToAdd(oldArray => [...oldArray, newData]);\n  } // function remove(data, element) {\n  //     variantData.forEach((item, index) => {\n  //         if (item.variant_id === element.variant_id) {\n  //             var array = [...data]; // make a separate copy of the array\n  //             if (index !== -1) {\n  //                 array.splice(index, 1);\n  //                 setVariantData(array);\n  //             }             \n  //         }\n  //     })\n  //     if (dataToUpdate.length > 0) {\n  //         dataToUpdate.forEach((item, index) => {   \n  //             if (item.variantId === element.variant_id) {\n  //                 var array = [...dataToUpdate]; // make a separate copy of the array\n  //                 if (index !== -1) {\n  //                     array.splice(index, 1);\n  //                     setDataToUpdate(array);\n  //                 } \n  //             }\n  //         })\n  //     }\n  // }\n\n\n  function startAddFlow() {\n    router.loadProducts(data[0].vendor_id).then(data => {\n      if (data) {\n        setProductData(data);\n        setProductSelectHidden(false); // setEditingOrderItem(false)\n        // setOrderItemBtnText(\"Edit Order Items\")\n        // getData()\n      } else {\n        alert(\"Failed to load products. Please try again.\");\n      }\n    });\n  }\n\n  function loadVariants(productId) {\n    console.log(productId);\n    router.loadVariants(productId).then(data => {\n      if (data) {\n        setVariantData(data);\n        setVariantSelectHidden(false); // setEditingOrderItem(false)\n        // setOrderItemBtnText(\"Edit Order Items\")\n        // getData()\n      } else {\n        alert(\"Failed to load variants. Please try again.\");\n      }\n    });\n  }\n\n  const EditItem = props => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"inline-block\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          display: \"inline-block\",\n          margin: \"10px\",\n          fontSize: \"1.1rem\"\n        },\n        children: `${props.title}: `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"table-cell\",\n        type: \"text\",\n        id: props.id,\n        ref: props.refName,\n        placeholder: props.placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => props.toggle(),\n        children: \"\\xD7    \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: \"2rem\"\n        },\n        children: [\"Order #\", data.length > 0 ? data[0].order_id : \"Error loading data\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"1.4rem\"\n        },\n        children: [\"Vendor: \", data.length > 0 ? data[0].name : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isEditingOrder ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(EditItem, {\n            title: \"Subtotal\",\n            id: \"order-subtotal\",\n            placeholder: data.length > 0 ? formatter.format(data[0].order_subtotal) : \"\",\n            refName: orderSubtotal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(EditItem, {\n            title: \"Discount\",\n            id: \"order-discount\",\n            placeholder: data.length > 0 ? formatter.format(data[0].order_discount) : \"\",\n            refName: orderDiscount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: \"inline-block\",\n              margin: \"10px\",\n              fontSize: \"1.1rem\"\n            },\n            children: [\"Total: \", data.length > 0 ? formatter.format(data[0].order_total) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: \"inline-block\",\n              margin: \"10px\",\n              fontSize: \"1.1rem\"\n            },\n            children: [\"Subtotal: \", data.length > 0 ? formatter.format(data[0].order_subtotal) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: \"inline-block\",\n              margin: \"10px\",\n              fontSize: \"1.1rem\"\n            },\n            children: [\"Discount: \", data.length > 0 ? formatter.format(data[0].order_discount) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: \"inline-block\",\n              margin: \"10px\",\n              fontSize: \"1.1rem\"\n            },\n            children: [\"Total: \", data.length > 0 ? formatter.format(data[0].order_total) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 17\n      }, this), isEditingOrder ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          style: inputStyle,\n          defaultValue: data.length > 0 ? data[0].status : \"submitted\",\n          ref: status,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"submitted\",\n            children: \"Submitted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fulfilled\",\n            children: \"Fulfilled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditItem, {\n          title: \"Tracking\",\n          id: \"tracking\",\n          placeholder: data.length > 0 && data[0].tracking ? data[0].tracking : \"Enter tracking...\",\n          refName: tracking\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"1.1rem\",\n            color: data.length > 0 && data[0].status === \"submitted\" ? \"red\" : data.length > 0 && data[0].status === \"fulfilled\" ? \"orange\" : \"green\"\n          },\n          children: [\"Status: \", data.length > 0 ? capitalizeFirstLetter(data[0].status) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: \"10px\",\n            fontSize: \"1.1rem\"\n          },\n          children: [\"Tracking: \", data.length > 0 && data[0].tracking ? data[0].tracking : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            display: \"inline-block\",\n            margin: \"10px\",\n            fontSize: \"1.1rem\"\n          },\n          children: [\"Submitted: \", data.length > 0 ? data[0].submitted_date : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            display: \"inline-block\",\n            margin: \"10px\",\n            fontSize: \"1.1rem\"\n          },\n          children: [\"Fulfilled: \", data.length > 0 ? data[0].fulfilled_date : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            display: \"inline-block\",\n            margin: \"10px\",\n            fontSize: \"1.1rem\"\n          },\n          children: [\"Completed: \", data.length > 0 ? data[0].completed_date : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        hidden: isEditingOrderItem || data.length > 0 && data[0].status === \"completed\",\n        onClick: editBtnClicked,\n        className: \"edit-btn\",\n        id: \"order-btn\",\n        style: {\n          backgroundColor: editColor\n        },\n        children: orderBtnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        hidden: isEditingOrder || data.length > 0 && data[0].status === \"completed\",\n        onClick: editBtnClicked,\n        className: \"edit-btn\",\n        id: \"order-item-btn\",\n        style: {\n          backgroundColor: editColor\n        },\n        children: orderItemBtnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Variant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Cost/unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Subtotal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Discount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((item, index) => {\n          return isEditingOrderItem ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.product\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.variant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"table-cell\",\n                type: \"text\",\n                onChange: e => editInput(item, e.target.value, \"cost\"),\n                placeholder: formatter.format(item.cost)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"table-cell\",\n                type: \"text\",\n                onChange: e => editInput(item, e.target.value, \"quantity\"),\n                placeholder: item.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: formatter.format(item.cost * item.quantity)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"table-cell\",\n                type: \"text\",\n                onChange: e => editInput(item, e.target.value, \"discount\"),\n                placeholder: formatter.format(item.discount)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: formatter.format(item.cost * item.quantity - item.discount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"close\",\n                style: {\n                  color: \"red\"\n                },\n                onClick: () => remove(item),\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.product\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.variant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: formatter.format(item.cost)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: formatter.format(item.cost * item.quantity)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: formatter.format(item.discount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: formatter.format(item.cost * item.quantity - item.discount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 13\n    }, this), isEditingOrderItem ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startAddFlow,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: product,\n        hidden: isProductSelectHidden,\n        defaultValue: \"default\",\n        onChange: e => {\n          loadVariants(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"Choose Product:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 13\n        }, this), productData.map(product => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: product.id,\n            children: product.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ref: variant,\n        hidden: isVariantSelectHidden,\n        defaultValue: \"default\",\n        onChange: e => {\n          setQuantityHidden(false); // setVariant(e.target.value)\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"Choose Variant:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this), variantData.map(variant => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: `${variant.id}-${variant.cost}`,\n            children: variant.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 25\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        hidden: isQuantityHidden,\n        defaultValue: \"0\",\n        onChange: e => {\n          setQuantity(e.target.value);\n          setAddBtnHidden(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        hidden: isAddBtnHidden,\n        onClick: addItem,\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 460,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderPopup, \"ziys9k2OSj5Y7GNbyF8csxOb4vc=\");\n\n_c = OrderPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderPopup\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Orders/OrderPopup.js"],"names":["useState","useEffect","useRef","router","OrderPopup","props","data","setData","originalData","setOriginalData","productData","setProductData","variantData","setVariantData","quantity","setQuantity","isLoading","setLoading","orderBtnText","setOrderBtnText","orderItemBtnText","setOrderItemBtnText","isEditingOrder","setEditingOrder","isEditingOrderItem","setEditingOrderItem","editColor","setEditColor","isTrackingHidden","setTrackingHidden","idsToUpdate","setIdsToUpdate","dataToUpdate","setDataToUpdate","itemsToDelete","setItemsToDelete","itemsToAdd","setItemsToAdd","isProductSelectHidden","setProductSelectHidden","isVariantSelectHidden","setVariantSelectHidden","isQuantityHidden","setQuantityHidden","isAddBtnHidden","setAddBtnHidden","orderSubtotal","orderDiscount","orderTotal","tracking","status","product","variant","console","log","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","inputStyle","margin","padding","fontSize","border","borderBottom","getData","loadOrder","values","id","then","newData","map","a","editBtnClicked","e","target","saveOrder","saveOrderItem","orderData","subtotal","current","value","order_subtotal","discount","order_discount","discountsToUpdate","forEach","item","push","isItemDiscount","updateOrder","alert","updatedData","newItem","ogItem","order_item_id","cost","updateOrderItem","capitalizeFirstLetter","string","charAt","toUpperCase","slice","editInput","type","includes","index","array","splice","oldArray","remove","itemToRemove","addItem","selectedIndex","text","variant_id","split","startAddFlow","loadProducts","vendor_id","loadVariants","productId","EditItem","display","title","refName","placeholder","toggle","length","order_id","name","format","order_total","textAlign","color","submitted_date","fulfilled_date","completed_date","backgroundColor"],"mappings":"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","sourcesContent":["import {useState, useEffect, useRef} from \"react\"\nimport * as router from \"./orderAPI\"\n\nexport default function OrderPopup(props) {\n    \n    const [data, setData] = useState([])\n    const [originalData, setOriginalData] = useState([])\n    const [productData, setProductData] = useState([])\n    const [variantData, setVariantData] = useState([])\n    const [quantity, setQuantity] = useState(0)\n    // const [variant, setVariant] = useState(null)\n    // const [ogData, setOGData] = useState([])\n    const [isLoading, setLoading] = useState(false)\n    const [orderBtnText, setOrderBtnText] = useState(\"Edit Order\")\n    const [orderItemBtnText, setOrderItemBtnText] = useState(\"Edit Order Item\")\n    const [isEditingOrder, setEditingOrder] = useState(false)\n    const [isEditingOrderItem, setEditingOrderItem] = useState(false)\n    const [editColor, setEditColor] = useState(\"#76c32d\")\n    const [isTrackingHidden, setTrackingHidden] = useState(true)\n    const [idsToUpdate, setIdsToUpdate] = useState([])\n    const [dataToUpdate, setDataToUpdate] = useState([])\n    const [itemsToDelete, setItemsToDelete] = useState([])\n    const [itemsToAdd, setItemsToAdd] = useState([])\n\n    const [isProductSelectHidden, setProductSelectHidden] = useState(true)\n    const [isVariantSelectHidden, setVariantSelectHidden] = useState(true)\n    const [isQuantityHidden, setQuantityHidden] = useState(true)\n    const [isAddBtnHidden, setAddBtnHidden] = useState(true)\n\n    // const [status, setStatus] = useState(\"\")\n    // const [tracking, setTracking] = useState(\"\")\n    // const [orderDiscount, setOrderDiscount] = useState(\"\")\n    // const [orderTotal, setOrderTotal] = useState(\"\")\n    // const [orderSubtotal, setOrderSubtotal] = useState(0)\n\n    const orderSubtotal = useRef()\n    const orderDiscount = useRef()\n    const orderTotal = useRef()\n    const tracking = useRef()\n    const status = useRef()\n    const product = useRef()\n    const variant = useRef()\n\n\n    console.log(dataToUpdate)\n    console.log(idsToUpdate)\n    console.log(productData)\n\n    // console.log(isTrackingHidden)\n    // console.log(status)\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0\n        })\n\n    const inputStyle = {\n        margin: \"20px auto\",\n        padding: \"10px 20px\",\n        fontSize: \"16px\",\n        border: \"none\",\n        borderBottom: \"1px solid #76c32d\"\n    }\n\n\n\n    function getData() {\n        setLoading(true)\n        router.loadOrder(props.values.id).then(data => {\n            if (data) {\n                console.log(data)\n                setData(data)\n                // const newData = data.slice()\n                const newData = data.map(a => ({...a})) // make copy to compare dataToUpdate with to look for changes\n                console.log(newData)\n                setOriginalData(newData)\n    \n\n                setLoading(false)      \n            }\n        })\n    }\n\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (isLoading) {\n        return <div className=\"loader\"></div>;\n    }\n\n    function editBtnClicked(e) {\n        \n       \n        if (e.target.id === \"order-btn\") {\n            if (!isEditingOrder) {\n                setOrderBtnText(\"Save Order\")\n                setEditingOrder(true)\n            } else {\n                saveOrder()\n            }\n        } else if (e.target.id === \"order-item-btn\") {\n            if (!isEditingOrderItem) {\n                setOrderItemBtnText(\"Save Order Item\")\n                setEditingOrderItem(true)\n            } else {\n                saveOrderItem()\n            }\n        }\n        setEditColor(editColor === \"#26B1FF\" ? \"#76c32d\" : \"#26B1FF\")\n        \n        \n    }\n\n    function saveOrder() {\n        const orderData = {\n            subtotal: orderSubtotal.current.value ? orderSubtotal.current.value : data[0].order_subtotal,\n            discount: orderDiscount.current.value ? orderDiscount.current.value : data[0].order_discount,\n            // total: orderTotal.current.value ? orderTotal.current.value : data[0].order_total,\n            status: status.current.value ? status.current.value : data[0].status,\n            tracking: tracking.current.value ? tracking.current.value : data[0].tracking,\n        }\n\n        const discountsToUpdate = []\n\n        data.forEach(item => {\n            if (item.discount === \"0\" || item.discount === 0 || item.discount === \"\") {\n                discountsToUpdate.push(item)\n            }\n        })\n\n        const isItemDiscount = data ? true : false\n\n        router.updateOrder(orderData, props.values.id, data, discountsToUpdate).then(data => {\n            if (data === \"Success\") {\n                setEditingOrder(false)\n                setOrderBtnText(\"Edit Order\")\n                getData()\n\n                // reload order item data if the status is completed b/c then would have updated the discount and cost of the items\n\n                // setTrackingHidden(true)\n            } else {\n                alert(\"Failed to save order. Please try again.\")\n                setOrderBtnText(\"Edit Order\")\n            }\n        })      \n    }\n\n    function saveOrderItem() {\n        console.log('Saving order item')\n\n        // make sure to only pass in data with changes\n\n        const updatedData = []\n\n        console.log(data)\n        console.log(originalData)\n        console.log(dataToUpdate)\n\n        dataToUpdate.forEach(newItem => {\n            originalData.forEach(ogItem => {\n                if (ogItem.order_item_id === newItem.order_item_id) {\n\n                    console.log(ogItem)\n                    console.log(newItem)\n                    // Same item\n                    if ((newItem.quantity !== ogItem.quantity) && newItem.quantity || \n                        (newItem.cost !== ogItem.cost) && newItem.cost || \n                        // (newItem.subtotal !== ogItem.subtotal) && newItem.subtotal || \n                        (newItem.discount !== ogItem.discount) && newItem.discount)\n                        // (newItem.total !== ogItem.total) && newItem.total ) \n                        {\n                            // data has changed, so should save this item\n                            newItem.quantity = newItem.quantity ? newItem.quantity : ogItem.quantity\n                            newItem.cost = newItem.cost ? newItem.cost : ogItem.cost\n                            // newItem.subtotal = newItem.subtotal ? newItem.subtotal : ogItem.subtotal\n                            newItem.discount = newItem.discount ? newItem.discount : ogItem.discount\n                            // newItem.total = newItem.total ? newItem.total : ogItem.total\n\n                            updatedData.push(newItem)\n                        }\n                }\n            })\n        })\n\n        // const itemsToDelete = []\n\n        // console.log(data)\n\n        // originalData.forEach(item => {\n        //     console.log(item)\n        //     if (!data.includes(item)) {\n        //         itemsToDelete.push(item)\n        //     }\n        // })\n\n        console.log(itemsToDelete)\n\n        // const found = originalData.some(item=> data.includes(item))\n\n\n        \n\n        console.log(updatedData)\n        router.updateOrderItem(updatedData, props.values.id, itemsToDelete, itemsToAdd).then(data => {\n            if (data === \"Success\") {\n                setEditingOrderItem(false)\n                setOrderItemBtnText(\"Edit Order Items\")\n                getData()\n            } else {\n                alert(\"Failed to save order items. Please try again.\")\n                setOrderItemBtnText(\"Edit Order Items\")\n            }\n        })\n    }\n        \n        \n        \n\n    // function statusChanged(e) {\n\n    //     console.log(e.target.value)\n\n    //     setStatus(e.target.value)\n\n    //     if (e.target.value === \"fulfilled\") {\n    //         setTrackingHidden(false)\n    //     } else {\n    //         setTrackingHidden(true)\n    //     }\n    // }\n\n    // function selectChanged(e) {\n    //     console.log(e.target.id)\n    // }\n\n    function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n      }\n\n//     function editInput(e) {\n//         // e.preventDefault()\n//         // console.log(orderSubtotal)\n//         // console.log(e.target.value)\n//         // console.log(e.target.id)\n//         switch(e.target.id) {\n//             case \"order-subtotal\":\n//                 // setOrderSubtotal(e.target.value)\n//                 console.log(e.target.value)\n//                 console.log(orderSubtotal.current.value)\n//                 break;\n//             case \"order-total\":\n//                 setOrderTotal(e.target.value)\n//                 // break;\n//             case \"order-discount\":\n//                 setOrderDiscount(e.target.value)\n//                 break\n//             case \"tracking\":\n//                 setTracking(e.target.value)\n//                 break\n//             case \"status\":\n//                 setStatus(e.target.value)\n//                 break\n//             default:\n//               break\n//     }\n// }\n\n    function editInput(data, value, type) {\n        data[type] = value // update the value to be what was entered in the inputs\n        console.log(data)\n\n        if (value !== \"0\" && value !== 0 && value !== \"\") {\n            \n\n            if (idsToUpdate.includes(data.order_item_id)) {\n                // Item is in array so let's update it\n                dataToUpdate.forEach((item, index) => {\n                    \n                    if (item.order_item_id === data.order_item_id) {\n                        var array = [...dataToUpdate]; // make a separate copy of the array\n                        if (index !== -1) {\n                            array.splice(index, 1);\n                            setDataToUpdate(array);\n                        } \n       \n                            setDataToUpdate(oldArray => [...oldArray, data])   \n                       \n                  \n               \n                        // console.log(newData.quantity)\n                        // if (newData.quantity !== \"0\" && newData.quantity !== 0 && newData.quantity !== \"\") {\n                        //     console.log('are we calling here')\n                    }  \n                   \n                    \n                })\n            } else {\n\n                    setIdsToUpdate(oldArray => [...oldArray, data.order_item_id])\n                    setDataToUpdate(oldArray => [...oldArray, data])\n \n            }\n    \n        } \n\n        // console.log(data)\n\n      \n\n\n        // var newData = item\n        // newData[type] = value\n        // console.log(newData)\n        // const newData = {\n        //     item_id: id,\n        //     quantity: \n        //     variantTitle: data.variant,\n        //     variantId: data.variant_id,\n        //     cost: data.cost,\n        //     quantity: orderQuantity,\n        //     subtotal: Math.round(data.cost * orderQuantity * 100, 2) / 100\n        // }\n\n        // if (variantsToUpdate.includes(data.variant_id)) {\n        //     // Item is in array so let's update it\n        //     dataToUpdate.forEach((item, index) => {\n                \n    }\n\n    function remove(itemToRemove) {\n\n        console.log(itemToRemove)\n\n        data.forEach((item, index) => {\n            if (item.order_item_id === itemToRemove.order_item_id) {\n                var array = [...data]; // make a separate copy of the array\n                setItemsToDelete(oldArray => [...oldArray, item.order_item_id])   \n                if (index !== -1) {\n                    array.splice(index, 1);\n                    console.log(data)\n                    setData(array);\n                }             \n            }\n        })\n\n        // if (dataToUpdate.length > 0) {\n        //     dataToUpdate.forEach((item, index) => {   \n        //         if (item.order_item_id === itemToRemove.order_item_id) {\n        //             var array = [...dataToUpdate]; // make a separate copy of the array\n        //             if (index !== -1) {\n        //                 array.splice(index, 1);\n        //                 setDataToUpdate(array);\n        //             } \n        //         }\n        //     })\n        // }\n    }\n\n    function addItem() {\n\n        // event.nativeEvent.target[index].text\n\n        const index = variant.current.selectedIndex\n        console.log(variant.current[index].text)\n        console.log(product.current.value)\n\n        const newData = {\n            product: product.current[index].text,\n            variant: variant.current[index].text,\n            variant_id: variant.current.value.split('-')[0],\n            cost: variant.current.value.split('-')[1],\n            quantity: quantity,\n            discount: 0\n        }\n\n        setData(oldArray => [...oldArray, newData])  \n        setItemsToAdd(oldArray => [...oldArray, newData]) \n\n\n\n\n    }\n\n    // function remove(data, element) {\n    //     variantData.forEach((item, index) => {\n    //         if (item.variant_id === element.variant_id) {\n    //             var array = [...data]; // make a separate copy of the array\n    //             if (index !== -1) {\n    //                 array.splice(index, 1);\n    //                 setVariantData(array);\n    //             }             \n    //         }\n    //     })\n\n    //     if (dataToUpdate.length > 0) {\n    //         dataToUpdate.forEach((item, index) => {   \n    //             if (item.variantId === element.variant_id) {\n    //                 var array = [...dataToUpdate]; // make a separate copy of the array\n    //                 if (index !== -1) {\n    //                     array.splice(index, 1);\n    //                     setDataToUpdate(array);\n    //                 } \n    //             }\n    //         })\n    //     }\n    // }\n\n    function startAddFlow() {\n        \n\n        router.loadProducts(data[0].vendor_id).then(data => {\n            if (data) {\n                \n                setProductData(data)\n                setProductSelectHidden(false)\n                // setEditingOrderItem(false)\n                // setOrderItemBtnText(\"Edit Order Items\")\n                // getData()\n            } else {\n                alert(\"Failed to load products. Please try again.\")\n             \n            }\n        })\n        \n    }\n\n    function loadVariants(productId) {\n        console.log(productId)\n        router.loadVariants(productId).then(data => {\n            if (data) {\n                \n                setVariantData(data)\n                setVariantSelectHidden(false)\n                // setEditingOrderItem(false)\n                // setOrderItemBtnText(\"Edit Order Items\")\n                // getData()\n            } else {\n                alert(\"Failed to load variants. Please try again.\")\n             \n            }\n        })\n    }\n    \n\n    const EditItem = (props) => {\n        return (\n            <div style={{display: \"inline-block\"}}>\n            <p style={{display: \"inline-block\", margin: \"10px\",fontSize: \"1.1rem\"}}>{`${props.title}: `}</p>\n            <input className=\"table-cell\" type=\"text\" id={props.id} ref={props.refName} placeholder={props.placeholder}/>\n        </div>\n        )\n      \n    }\n\n    return (\n        <div>\n            <div className=\"top-content\">\n                <span className=\"close\" onClick={() =>  props.toggle()}>&times;    </span>\n                <h2 style={{fontSize: \"2rem\"}}>Order #{data.length > 0 ? data[0].order_id : \"Error loading data\"}</h2>\n                <p style={{fontSize: \"1.4rem\"}}>Vendor: {data.length > 0 ? data[0].name : \"\"}</p>\n                <div>\n                {isEditingOrder\n                ? \n                <div>\n                    <EditItem title=\"Subtotal\" id=\"order-subtotal\" placeholder={data.length > 0 ? formatter.format(data[0].order_subtotal) : \"\"} refName={orderSubtotal}/>\n                    <EditItem title=\"Discount\" id=\"order-discount\" placeholder={data.length > 0 ? formatter.format(data[0].order_discount) : \"\"} refName={orderDiscount}/>\n                    <p style={{display: \"inline-block\", margin: \"10px\", fontSize: \"1.1rem\"}}>Total: {data.length > 0 ? formatter.format(data[0].order_total) : \"\"}</p>\n                    {/* <EditItem title=\"Total\" id=\"order-total\" placeholder={data.length > 0 ? formatter.format(data[0].order_total) : \"\"} refName={orderTotal}/>  */}\n                </div>\n                :\n                <div>\n                    <p style={{display: \"inline-block\", margin: \"10px\",fontSize: \"1.1rem\"}}>Subtotal: {data.length > 0 ? formatter.format(data[0].order_subtotal) : \"\"}</p>\n                    <p style={{display: \"inline-block\", margin: \"10px\", fontSize: \"1.1rem\"}}>Discount: {data.length > 0 ? formatter.format(data[0].order_discount) : \"\"}</p>\n                    <p style={{display: \"inline-block\", margin: \"10px\", fontSize: \"1.1rem\"}}>Total: {data.length > 0 ? formatter.format(data[0].order_total) : \"\"}</p>\n                </div>\n                }\n                   \n\n                </div>\n\n                {isEditingOrder \n                ?\n                <div style={{textAlign: \"center\"}}>\n                    <select style={inputStyle} defaultValue={data.length > 0 ? data[0].status : \"submitted\"} ref={status}>\n                        <option value=\"submitted\">Submitted</option>\n                        <option value=\"fulfilled\">Fulfilled</option>\n                        <option value=\"completed\">Completed</option>\n                    </select>\n                    <br />\n                    {/* <input hidden={isTrackingHidden} style={inputStyle} placeholder=\"Tracking\" onChange={(e) => setTracking(e.target.value)}></input><br/>\n                    <input hidden={isTrackingHidden} style={inputStyle} placeholder=\"Discount (i.e. 180.02)\" onChange={(e) => setDiscount(e.target.value)}></input> */}\n                    <EditItem title=\"Tracking\" id=\"tracking\" placeholder={data.length > 0  && data[0].tracking ? data[0].tracking : \"Enter tracking...\"} refName={tracking}/>\n                    \n                </div>\n                :\n                <div>\n                    <p style={{fontSize: \"1.1rem\", color: data.length > 0 && data[0].status === \"submitted\" ? \"red\" : data.length > 0 && data[0].status===\"fulfilled\" ? \"orange\" : \"green\"}}>Status: {data.length > 0 ? capitalizeFirstLetter(data[0].status) : \"\"}</p>\n                    <p style={{margin: \"10px\",fontSize: \"1.1rem\"}}>Tracking: {data.length > 0 && data[0].tracking ? data[0].tracking : \"\"}</p>\n                </div>\n                }\n\n               \n                <div>\n                    <p style={{display: \"inline-block\", margin: \"10px\", fontSize: \"1.1rem\"}}>Submitted: {data.length > 0 ? data[0].submitted_date : \"\"}</p>\n                    <p style={{display: \"inline-block\", margin: \"10px\", fontSize: \"1.1rem\"}}>Fulfilled: {data.length > 0 ? data[0].fulfilled_date : \"\"}</p>\n                    <p style={{display: \"inline-block\", margin: \"10px\", fontSize: \"1.1rem\"}}>Completed: {data.length > 0 ? data[0].completed_date : \"\"}</p>\n                </div>\n                \n                \n                {/* <button hidden={isTrackingHidden ? data[0] && data[0].status === \"completed\" : false} onClick={editBtnClicked} className=\"edit-btn\" style={{backgroundColor: editColor}}>{btnText}</button>\n                 */}\n                 <button hidden={isEditingOrderItem || (data.length > 0 && data[0].status === \"completed\")} onClick={editBtnClicked} className=\"edit-btn\" id=\"order-btn\"style={{backgroundColor: editColor}}>{orderBtnText}</button>\n                 <button hidden={isEditingOrder || (data.length > 0 && data[0].status === \"completed\")} onClick={editBtnClicked} className=\"edit-btn\" id='order-item-btn' style={{backgroundColor: editColor}}>{orderItemBtnText}</button>\n            </div>\n\n            <table style={{textAlign: \"center\"}}>\n                <thead >\n                    <tr>\n                        <th className=\"table-header\">Product</th>\n                        <th className=\"table-header\">Variant</th>\n                        <th className=\"table-header\">Cost/unit</th>\n                        <th className=\"table-header\">Quantity</th>\n                        <th className=\"table-header\">Subtotal</th>\n                        <th className=\"table-header\">Discount</th>\n                        <th className=\"table-header\">Total</th>\n                        <th className=\"table-header\">Remove</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {data.map((item, index) => {\n                    return (\n                         isEditingOrderItem\n                            ? \n                            <tr key={index}>\n                                <td className=\"table-cell\">{item.product}</td>\n                                <td className=\"table-cell\">{item.variant}</td>\n                                {/* <td className=\"table-cell\">{formatter.format(item.subtotal / item.quantity)}</td> */}\n\n                                <td className=\"table-cell\">\n                                    <input className=\"table-cell\" type=\"text\" onChange={(e) => editInput(item, e.target.value, \"cost\")} placeholder={formatter.format(item.cost)} />\n                                </td>\n     \n                                <td className=\"table-cell\">\n                                    <input className=\"table-cell\" type=\"text\" onChange={(e) => editInput(item, e.target.value, \"quantity\")} placeholder={item.quantity} />\n                                </td>\n                                \n                               \n                                <td className=\"table-cell\">{formatter.format(item.cost * item.quantity)}</td>\n                                <td className=\"table-cell\">\n                                    <input className=\"table-cell\" type=\"text\" onChange={(e) => editInput(item, e.target.value, \"discount\")} placeholder={formatter.format(item.discount)} />\n                                </td>\n                                <td className=\"table-cell\">{formatter.format((item.cost * item.quantity) - item.discount)}</td>  \n                                <td><span className=\"close\" style={{color: \"red\"}} onClick={() =>  remove(item)}>&times;</span></td>\n                            </tr>\n          \n                            :\n                            <tr key={index}>\n                                <td className=\"table-cell\">{item.product}</td>\n                                <td className=\"table-cell\">{item.variant}</td>\n                                {/* <td className=\"table-cell\">{formatter.format(item.subtotal / item.quantity)}</td> */}\n                                <td className=\"table-cell\">{formatter.format(item.cost)}</td>\n                                <td className=\"table-cell\">{item.quantity}</td>\n                                \n                                <td className=\"table-cell\">{formatter.format(item.cost * item.quantity)}</td> \n                                <td className=\"table-cell\">{formatter.format(item.discount)}</td>\n                                <td className=\"table-cell\">{formatter.format((item.cost * item.quantity) - item.discount)}</td>    \n                            </tr>\n                            \n                    )\n                    })\n                }\n                </tbody>\n            </table>\n            {isEditingOrderItem\n            ?\n            <div>\n    \n            <button onClick={startAddFlow}>+</button>\n            <select ref={product} hidden={isProductSelectHidden} defaultValue=\"default\" onChange={(e) => {\n                loadVariants(e.target.value)\n            }}>\n            <option value=\"default\">Choose Product:</option>\n                {productData.map(product => {\n                    return (\n                        <option value={product.id}>{product.title}</option>         \n                    )\n                    \n                })}\n            </select>\n\n            <select ref={variant} hidden={isVariantSelectHidden} defaultValue=\"default\" onChange={(e) => {\n                setQuantityHidden(false)\n                // setVariant(e.target.value)\n            }}>\n            <option value=\"default\">Choose Variant:</option>\n                {variantData.map(variant => {\n                    \n                    return (\n                        <option value={`${variant.id}-${variant.cost}`}>{variant.title}</option>         \n                    )\n                    \n                })}\n            </select>\n            <input hidden={isQuantityHidden} defaultValue=\"0\" onChange={(e) => {\n                setQuantity(e.target.value)\n                setAddBtnHidden(false)\n            }}></input>\n            <button hidden={isAddBtnHidden} onClick={addItem}>Add Item</button>\n            </div>\n            :\n            <p></p>\n                }\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}