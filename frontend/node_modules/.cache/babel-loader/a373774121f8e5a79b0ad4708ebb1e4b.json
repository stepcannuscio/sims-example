{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Vendors/VendorPopup.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useMemo, useRef } from \"react\";\nimport \"../styles/Popup.css\";\nimport Table from \"../components/Table\";\nimport ProgressBar from \"./ProgressBar\";\nimport * as router from \"./vendorAPI\";\nimport * as helpers from \"../helpers\";\nexport default function VendorPopup(props) {\n  _s();\n\n  const [percentage, setPercentage] = useState(0);\n  const [btnText, setBtnText] = useState(\"Order\");\n  const [isLoading, setLoading] = useState(true);\n  const [editColor, setEditColor] = useState(\"#76c32d\");\n  const [dataToUpdate, setDataToUpdate] = useState([]);\n  const [variantsToUpdate, setVariantsToUpdate] = useState([]);\n  const [data, setData] = useState([]);\n  const [commMethods, setCommMethods] = useState([]);\n  const [commMethod, setCommMethod] = useState(null);\n  const [variantData, setVariantData] = useState([]);\n  const [isOrdering, setOrdering] = useState(false);\n  const [orderState, setOrderState] = useState(null);\n  const [isAddItemHidden, setAddItemHidden] = useState(true);\n  const addProductName = useRef();\n  const addVariantName = useRef();\n  const addQuantity = useRef();\n  const addCost = useRef();\n  const orderSteps = 4;\n  const columns = useMemo(() => [{\n    Header: 'ID',\n    accessor: 'id',\n    // Product ID\n    sortDescFirst: true\n  }, {\n    Header: 'Product',\n    accessor: 'title',\n    sortDescFirst: true\n  }, {\n    Header: 'Variant',\n    accessor: 'variant',\n    sortDescFirst: true,\n    show: true\n  }, {\n    Header: 'Quantity',\n    accessor: 'quantity',\n    sortDescFirst: true\n  }, {\n    Header: 'Purchases/day',\n    accessor: 'salesPerDay',\n    sortDescFirst: true\n  }, {\n    Header: 'Stock Level',\n    accessor: 'stockLevel',\n    disableSortBy: true\n  }, {\n    Header: 'Recent Order',\n    accessor: 'recentOrder',\n    disableSortBy: true\n  }], []);\n\n  function getData() {\n    setLoading(true);\n    router.loadVendor(props.values.id).then(data => {\n      if (data) {\n        setData(data.products); // sets the product data for the table\n\n        setCommMethods(data.commMethods);\n        setLoading(false);\n      }\n    });\n  }\n\n  useEffect(() => {\n    getData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function chooseProducts() {\n    // Start Order - change to page where we choose which products to order\n    setOrdering(true);\n    setBtnText(\"Next\");\n    setOrderState(\"Choose Products\");\n    setPercentage(100 / orderSteps);\n    setVariantData([]);\n    setDataToUpdate([]);\n    setVariantsToUpdate([]);\n  }\n\n  function chooseVariants() {\n    // Going to next page of ordering after chose products to choose variants and quantities\n    if (variantsToUpdate.length > 0) {\n      // Only load variant data if a product was selected\n      setLoading(true);\n      setPercentage(100 / orderSteps * 2); // update progress bar\n\n      setOrderState(\"Choose Variants/Qty\");\n      router.loadOrderProducts(variantsToUpdate).then(data => {\n        if (data !== \"Error\") {\n          setLoading(false);\n          setVariantData(data);\n          setBtnText(\"Review\");\n          setDataToUpdate([]);\n          setVariantsToUpdate([]);\n        } else {\n          alert(\"Error getting order products. Please try again or contact Step.\");\n        }\n      });\n    } else {\n      alert(\"No products selected\");\n    }\n  }\n\n  function chooseCommunication() {\n    // Going to next page to review order and submit or use communication method\n    setPercentage(100 / orderSteps * 3); // update progress bar\n\n    setOrderState(\"Choose Communication\");\n  }\n\n  function reviewOrder(value) {\n    setOrderState(\"Review Order\");\n    setBtnText(\"Submit\");\n    setEditColor(\"#26B1FF\");\n    setPercentage(100 / orderSteps * 4); // update progress bar\n\n    if (value === \"Website\") {\n      window.open(`https://${props.values.website}`, '_blank'); // NEED TO CHANGE\n    }\n  }\n\n  function submitOrder() {\n    // Send message and save order\n    const order = {\n      vendor: props.data.row.values.id,\n      subtotal: 0,\n      status: \"submitted\"\n    };\n    const orderItems = [];\n    dataToUpdate.forEach(item => {\n      if (item.quantity !== 0 || item.quantity !== \"\") {\n        order.subtotal += item.subtotal;\n        orderItems.push({\n          variant: item.variantId,\n          subtotal: item.subtotal,\n          // this is the subtotal including multiple qtys\n          quantity: item.quantity\n        });\n      }\n    });\n\n    if (dataToUpdate.length > 0) {\n      if (commMethod === \"Text\") {\n        router.sendText(props.values.contact_name, dataToUpdate, \"4848885912\").then(data => {\n          // NEED TO CHANGE\n          if (data === \"Success\") {\n            save(order, orderItems);\n          } else {\n            alert(\"Failed to send text. Please try again.\");\n          }\n        });\n      } else if (commMethod === \"Email\") {\n        router.sendEmail(props.values.contact_name, dataToUpdate, \"stepan.cannuscio@gmail.com\").then(data => {\n          // NEED TO CHANGE\n          if (data === \"Success\") {\n            save(order, orderItems);\n          } else {\n            alert(\"Failed to send email. Please try again.\");\n          }\n        });\n      } else if ([\"Website\", \"Call\", \"Manual Order\"].includes(commMethod)) {\n        save(order, orderItems);\n      } else {\n        alert(\"No communication method selected! Contact Step for help\");\n      }\n    }\n  }\n\n  function resetOrder() {\n    setOrderState(null);\n    setOrdering(false);\n    setDataToUpdate([]); // empty dataToUpdate from any previous orders\n\n    setVariantsToUpdate([]); // empty variantsToUpdate from any previous orders\n\n    setPercentage(0);\n    setEditColor(\"#76c32d\");\n    setBtnText(\"Order\");\n  }\n\n  function orderBtnClicked(e) {\n    if (!isOrdering) {\n      chooseProducts();\n    } else if (orderState === \"Choose Products\") {\n      chooseVariants();\n    } else if (orderState === \"Choose Variants/Qty\") {\n      if (dataToUpdate.length > 0) {\n        chooseCommunication();\n      } else {\n        alert(\"Please add a variant to this order.\");\n      }\n    } else if (orderState === \"Choose Communication\") {\n      setCommMethod(e.target.value);\n      reviewOrder(e.target.value);\n    } else if (orderState === \"Review Order\") {\n      submitOrder();\n    }\n  }\n\n  function backBtnClicked() {\n    if (orderState === \"Choose Products\") {\n      resetOrder();\n    } else if (orderState === \"Choose Variants/Qty\") {\n      chooseProducts();\n    } else if (orderState === \"Choose Communication\") {\n      setPercentage(100 / orderSteps * 2); // update progress bar\n\n      setOrderState(\"Choose Variants/Qty\");\n      setBtnText(\"Review\");\n    } else if (orderState === \"Review Order\") {\n      chooseCommunication();\n    }\n  }\n\n  function save(order, orderItems) {\n    router.saveOrder(order, orderItems, props.user.id).then(data => {\n      if (data === \"Success\") {\n        resetOrder();\n        props.toggle();\n      } else {\n        alert(\"Failed to save data. Please try again.\");\n      }\n    });\n  }\n\n  function rowSelected(rowData, isAllSelected) {\n    if (rowData === \"all\") {\n      setDataToUpdate([]); // clear before adding all rows to the array to update\n\n      setVariantsToUpdate([]);\n\n      if (!isAllSelected) {\n        // this means all are selected (it's opposite)\n        data.forEach(item => {\n          setDataToUpdate(oldArray => [...oldArray, item]);\n          setVariantsToUpdate(oldArray => [...oldArray, item.id]);\n        });\n      }\n    } else {\n      if (!rowData.isSelected) {\n        // this means the row is selected (it's opposite)\n        setDataToUpdate(oldArray => [...oldArray, rowData.values]);\n        setVariantsToUpdate(oldArray => [...oldArray, rowData.values.id]);\n      } else {\n        // remove from arrays if you unselect it\n        var array2 = [...variantsToUpdate]; // make a separate copy of the array\n\n        var index2 = array2.indexOf(rowData.values.id);\n\n        if (index2 !== -1) {\n          array2.splice(index2, 1);\n          setVariantsToUpdate(array2);\n        }\n      }\n    }\n  }\n\n  function remove(data, element) {\n    variantData.forEach((item, index) => {\n      if (item.variant_id === element.variant_id) {\n        var array = [...data]; // make a separate copy of the array\n\n        if (index !== -1) {\n          array.splice(index, 1);\n          setVariantData(array);\n        }\n      }\n    });\n\n    if (dataToUpdate.length > 0) {\n      dataToUpdate.forEach((item, index) => {\n        if (item.variantId === element.variant_id) {\n          var array = [...dataToUpdate]; // make a separate copy of the array\n\n          if (index !== -1) {\n            array.splice(index, 1);\n            setDataToUpdate(array);\n          }\n        }\n      });\n    }\n  }\n\n  function addOrderItem(data, orderQuantity) {\n    const newData = {\n      productTitle: data.title,\n      productId: data.id,\n      variantTitle: data.variant,\n      variantId: data.variant_id,\n      cost: data.cost,\n      quantity: orderQuantity,\n      subtotal: Math.round(data.cost * orderQuantity * 100, 2) / 100\n    };\n\n    if (variantsToUpdate.includes(data.variant_id)) {\n      // Item is in array so let's update it\n      dataToUpdate.forEach((item, index) => {\n        if (item.variantId === data.variant_id) {\n          var array = [...dataToUpdate]; // make a separate copy of the array\n\n          if (index !== -1) {\n            array.splice(index, 1);\n            setDataToUpdate(array);\n          }\n\n          if (newData.quantity !== \"0\" && newData.quantity !== 0 && newData.quantity !== \"\") {\n            setDataToUpdate(oldArray => [...oldArray, newData]);\n          } else {\n            var variantsArray = [...variantsToUpdate]; // make a separate copy of the array\n\n            if (index !== -1) {\n              variantsArray.splice(index, 1);\n              setVariantsToUpdate(variantsArray);\n            }\n          }\n        }\n      });\n    } else {\n      if (newData.quantity !== \"0\" || newData.quantity !== \"\") {\n        setVariantsToUpdate(oldArray => [...oldArray, data.variant_id]);\n        setDataToUpdate(oldArray => [...oldArray, newData]);\n      }\n    }\n  }\n\n  function addItem() {\n    if (addProductName.current.value === \"\" || addVariantName.current.value === \"\" || addQuantity.current.value === \"\" || addCost.current.value === \"\") {\n      alert(\"Please fill out all fields to manually add an item.\");\n    } else {\n      const newData = {\n        productTitle: addProductName.current.value,\n        variantTitle: addVariantName.current.value,\n        quantity: addQuantity.current.value,\n        cost: addCost.current.value,\n        subtotal: addQuantity.current.value * addCost.current.value\n      };\n      setDataToUpdate(oldArray => [...oldArray, newData]);\n    }\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-content\",\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        percentage: percentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => props.toggle(),\n        children: \"\\xD7    \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data && data[0] ? helpers.capitalizeFirstLetter(data[0].name) : \"No Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Products: \", props.values.products]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Low Products: \", props.values.low_products]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Deals: \", props.values.deals]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Order Minimum: \", props.values.order_minimum]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Contact Name: \", helpers.capitalizeFirstLetter(props.values.contact_name)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", props.values.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone: \", props.values.phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }, this), isOrdering ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: backBtnClicked,\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: \"grey\"\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 31\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        hidden: orderState === \"Choose Communication\",\n        onClick: e => orderBtnClicked(e),\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: editColor\n        },\n        children: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }, this), commMethods ? commMethods.map((method, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          hidden: orderState !== \"Choose Communication\",\n          onClick: e => orderBtnClicked(e),\n          value: helpers.capitalizeFirstLetter(method.method),\n          className: \"edit-btn\",\n          style: {\n            backgroundColor: \"#76c32d\"\n          },\n          children: helpers.capitalizeFirstLetter(method.method)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 25\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        hidden: orderState !== \"Choose Communication\",\n        onClick: e => orderBtnClicked(e),\n        className: \"edit-btn\",\n        value: \"Manual Order\",\n        style: {\n          backgroundColor: \"orange\"\n        },\n        children: \"Manual Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }, this), isOrdering ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: orderState === \"Choose Variants/Qty\" ? /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Variant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Current Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Purchases/day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Stock Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Cost/unit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Recent Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Order Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: variantData.map((variant, index) => {\n              const bgColor = variant.stockLevel === \"Low\" ? \"red\" : variant.stockLevel === \"Medium\" ? \"#FFD300\" : \"#4CAF50\";\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"table-cell\",\n                  children: variant.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"table-cell\",\n                  children: variant.variant\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"table-cell\",\n                  children: variant.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"table-cell\",\n                  children: variant.salesPerDay\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"table-cell stock-level\",\n                  style: {\n                    backgroundColor: bgColor\n                  },\n                  children: variant.stockLevel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: helpers.formatter.format(variant.cost)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: variant.recentOrder\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"0\",\n                    style: {\n                      fontSize: \"16px\"\n                    },\n                    placeholder: variant.orderQuantity || 0,\n                    onChange: e => {\n                      variant.orderQuantity = e.target.value;\n                      addOrderItem(variant, e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"close\",\n                    style: {\n                      color: \"red\"\n                    },\n                    onClick: () => remove(variantData, variant),\n                    children: \"\\xD7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 21\n        }, this) : [\"Choose Communication\", \"Review Order\", \"Submit Order\"].includes(orderState) ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Variant\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Cost/unit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Subtotal\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: dataToUpdate.map((order_item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order_item.productTitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order_item.variantTitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order_item.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: helpers.formatter.format(order_item.cost)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: helpers.formatter.format(order_item.subtotal)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 41\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 37\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            hidden: isAddItemHidden,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: addProductName,\n              placeholder: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: addVariantName,\n              placeholder: \"Variant Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: addQuantity,\n              placeholder: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: addCost,\n              placeholder: \"Cost/unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addItem,\n              children: \"Add Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAddItemHidden(false),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data,\n          search: true,\n          type: \"order\",\n          checkbox: true,\n          popupEnabled: false,\n          perPage: 5,\n          update: (data, isAllSelected) => rowSelected(data, isAllSelected)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data,\n      type: \"order\",\n      search: true,\n      popupEnabled: false,\n      perPage: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VendorPopup, \"kMjFsm/d3JsEQOLZHhm85CFbtqU=\");\n\n_c = VendorPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"VendorPopup\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Vendors/VendorPopup.js"],"names":["useState","useEffect","useMemo","useRef","Table","ProgressBar","router","helpers","VendorPopup","props","percentage","setPercentage","btnText","setBtnText","isLoading","setLoading","editColor","setEditColor","dataToUpdate","setDataToUpdate","variantsToUpdate","setVariantsToUpdate","data","setData","commMethods","setCommMethods","commMethod","setCommMethod","variantData","setVariantData","isOrdering","setOrdering","orderState","setOrderState","isAddItemHidden","setAddItemHidden","addProductName","addVariantName","addQuantity","addCost","orderSteps","columns","Header","accessor","sortDescFirst","show","disableSortBy","getData","loadVendor","values","id","then","products","chooseProducts","chooseVariants","length","loadOrderProducts","alert","chooseCommunication","reviewOrder","value","window","open","website","submitOrder","order","vendor","row","subtotal","status","orderItems","forEach","item","quantity","push","variant","variantId","sendText","contact_name","save","sendEmail","includes","resetOrder","orderBtnClicked","e","target","backBtnClicked","saveOrder","user","toggle","rowSelected","rowData","isAllSelected","oldArray","isSelected","array2","index2","indexOf","splice","remove","element","index","variant_id","array","addOrderItem","orderQuantity","newData","productTitle","title","productId","variantTitle","cost","Math","round","variantsArray","addItem","current","capitalizeFirstLetter","name","low_products","deals","order_minimum","email","phone","backgroundColor","map","method","bgColor","stockLevel","salesPerDay","formatter","format","recentOrder","fontSize","color","order_item"],"mappings":"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","sourcesContent":["import {useState, useEffect, useMemo, useRef} from \"react\"\nimport \"../styles/Popup.css\"\nimport Table from \"../components/Table\"\nimport ProgressBar from \"./ProgressBar\"\nimport * as router from \"./vendorAPI\"\nimport * as helpers from \"../helpers\"\n\nexport default function VendorPopup(props) {\n\n    const [percentage, setPercentage] = useState(0)\n    const [btnText, setBtnText] = useState(\"Order\")\n    const [isLoading, setLoading] = useState(true)\n    const [editColor, setEditColor] = useState(\"#76c32d\")\n\n    const [dataToUpdate, setDataToUpdate] = useState([])\n    const [variantsToUpdate, setVariantsToUpdate] = useState([])\n    const [data, setData] = useState([])\n    const [commMethods, setCommMethods] = useState([])\n    const [commMethod, setCommMethod] = useState(null)\n    const [variantData, setVariantData] = useState([])\n    const [isOrdering, setOrdering] = useState(false)\n    const [orderState, setOrderState] = useState(null)\n\n    const [isAddItemHidden, setAddItemHidden] = useState(true)\n\n    const addProductName = useRef()\n    const addVariantName = useRef()\n    const addQuantity = useRef()\n    const addCost = useRef()\n\n    const orderSteps = 4\n\n    const columns = useMemo(\n        () => [\n        {\n            Header: 'ID',\n            accessor: 'id', // Product ID\n            sortDescFirst: true\n            },\n          {\n            Header: 'Product',\n            accessor: 'title',\n            sortDescFirst: true\n          },\n          {\n            Header: 'Variant',\n            accessor: 'variant',\n            sortDescFirst: true,\n            show: true\n          },\n          {\n            Header: 'Quantity',\n            accessor: 'quantity',\n            sortDescFirst: true,\n          },\n          {\n            Header: 'Purchases/day',\n            accessor: 'salesPerDay',\n            sortDescFirst: true,\n          },\n          {\n            Header: 'Stock Level',\n            accessor: 'stockLevel',\n            disableSortBy: true\n          },\n          {\n            Header: 'Recent Order',\n            accessor: 'recentOrder',\n            disableSortBy: true\n          },\n        ],\n        []\n    )\n\n    function getData() {\n        setLoading(true)\n        router.loadVendor(props.values.id).then(data => {\n            if (data) {\n                setData(data.products) // sets the product data for the table\n                setCommMethods(data.commMethods)\n                setLoading(false)\n            }\n        })\n    }\n\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    function chooseProducts() {\n        // Start Order - change to page where we choose which products to order\n        setOrdering(true)\n        setBtnText(\"Next\")\n        setOrderState(\"Choose Products\")\n        setPercentage(100/orderSteps)\n        setVariantData([])\n        setDataToUpdate([])\n        setVariantsToUpdate([])\n    }\n\n    function chooseVariants() {\n        // Going to next page of ordering after chose products to choose variants and quantities\n\n        if (variantsToUpdate.length > 0) {\n            // Only load variant data if a product was selected\n            setLoading(true)\n            setPercentage(100/orderSteps * 2) // update progress bar\n            setOrderState(\"Choose Variants/Qty\")\n\n            router.loadOrderProducts(variantsToUpdate).then(data => {\n                if (data !== \"Error\") {\n                    setLoading(false)\n                    setVariantData(data)\n                    setBtnText(\"Review\")\n                    setDataToUpdate([])\n                    setVariantsToUpdate([])\n                } else {\n                    alert(\"Error getting order products. Please try again or contact Step.\")\n                }\n            })\n        } else {\n            alert(\"No products selected\")\n        }\n       \n    }\n\n    function chooseCommunication() {\n        // Going to next page to review order and submit or use communication method\n        setPercentage(100/orderSteps * 3) // update progress bar\n        setOrderState(\"Choose Communication\")\n    }\n\n    function reviewOrder(value) {\n        setOrderState(\"Review Order\")\n        setBtnText(\"Submit\")\n        setEditColor(\"#26B1FF\")\n        setPercentage(100/orderSteps * 4) // update progress bar\n\n        if (value === \"Website\") {\n            window.open(`https://${props.values.website}`,'_blank') // NEED TO CHANGE\n        }\n    }\n\n    function submitOrder() {\n        // Send message and save order\n             \n        const order = {\n            vendor: props.data.row.values.id,\n            subtotal: 0,\n            status: \"submitted\"\n        }\n\n        const orderItems = []\n        dataToUpdate.forEach(item => {\n            if (item.quantity !== 0 || item.quantity !== \"\") {\n                order.subtotal += item.subtotal\n                orderItems.push({\n                    variant: item.variantId,\n                    subtotal: item.subtotal, // this is the subtotal including multiple qtys\n                    quantity: item.quantity\n                })\n            }\n        \n        })\n     \n        if (dataToUpdate.length > 0) {\n            if (commMethod === \"Text\") {\n                router.sendText(props.values.contact_name, dataToUpdate, \"4848885912\").then(data => { // NEED TO CHANGE\n                    if (data === \"Success\") {\n                        save(order, orderItems)\n                    } else {\n                        alert(\"Failed to send text. Please try again.\")\n                    }     \n                })\n            }\n            else if (commMethod === \"Email\") {\n                router.sendEmail(props.values.contact_name, dataToUpdate, \"stepan.cannuscio@gmail.com\").then(data => { // NEED TO CHANGE\n                    if (data === \"Success\") {\n                        save(order, orderItems)\n                    } else {\n                        alert(\"Failed to send email. Please try again.\")\n                    }     \n                })\n            } else if ([\"Website\", \"Call\", \"Manual Order\"].includes(commMethod)) {\n                save(order, orderItems)\n            } else {\n                alert(\"No communication method selected! Contact Step for help\")\n            }\n        }\n    }\n\n    function resetOrder() {\n        setOrderState(null)\n        setOrdering(false)\n        setDataToUpdate([]) // empty dataToUpdate from any previous orders\n        setVariantsToUpdate([]) // empty variantsToUpdate from any previous orders\n        setPercentage(0)\n        setEditColor(\"#76c32d\")\n        setBtnText(\"Order\")\n    }\n\n\n    function orderBtnClicked(e) {\n        if (!isOrdering) {\n            chooseProducts()\n        } else if (orderState === \"Choose Products\") {\n            chooseVariants()\n        } else if (orderState === \"Choose Variants/Qty\") {\n            if (dataToUpdate.length > 0) {\n                chooseCommunication() \n            } else {\n                alert(\"Please add a variant to this order.\")\n            }\n        } else if (orderState === \"Choose Communication\") {\n            setCommMethod(e.target.value)\n            reviewOrder(e.target.value)\n        }  else if (orderState === \"Review Order\") {\n            submitOrder()\n        } \n    }\n    \n    function backBtnClicked() {\n        if (orderState === \"Choose Products\") {\n            resetOrder()\n        } else if (orderState === \"Choose Variants/Qty\") {\n            chooseProducts()\n        } else if (orderState === \"Choose Communication\") {\n            setPercentage(100/orderSteps * 2) // update progress bar\n            setOrderState(\"Choose Variants/Qty\")\n            setBtnText(\"Review\")\n        } else if (orderState === \"Review Order\") {\n            chooseCommunication()\n        } \n    }\n\n    function save(order, orderItems) {\n        router.saveOrder(order, orderItems, props.user.id).then(data => {\n            if (data === \"Success\") {\n                resetOrder()\n                props.toggle()\n            } else {\n                alert(\"Failed to save data. Please try again.\")\n            }\n        })\n    }\n\n    function rowSelected(rowData, isAllSelected) {\n        if (rowData === \"all\") {\n            setDataToUpdate([]) // clear before adding all rows to the array to update\n            setVariantsToUpdate([])\n            if (!isAllSelected) { // this means all are selected (it's opposite)\n                data.forEach(item => {\n                    setDataToUpdate(oldArray => [...oldArray, item])\n                    setVariantsToUpdate(oldArray => [...oldArray, item.id])\n                })\n            } \n        } else {\n            if (!rowData.isSelected) { // this means the row is selected (it's opposite)\n                setDataToUpdate(oldArray => [...oldArray, rowData.values])\n                setVariantsToUpdate(oldArray => [...oldArray, rowData.values.id])\n            } else {\n                // remove from arrays if you unselect it\n                var array2 = [...variantsToUpdate]; // make a separate copy of the array\n                var index2 = array2.indexOf(rowData.values.id)\n                if (index2 !== -1) {\n                    array2.splice(index2, 1);\n                    setVariantsToUpdate(array2);\n                }         \n            } \n        }\n       \n    }\n\n    function remove(data, element) {\n        variantData.forEach((item, index) => {\n            if (item.variant_id === element.variant_id) {\n                var array = [...data]; // make a separate copy of the array\n                if (index !== -1) {\n                    array.splice(index, 1);\n                    setVariantData(array);\n                }             \n            }\n        })\n        if (dataToUpdate.length > 0) {\n            dataToUpdate.forEach((item, index) => {   \n                if (item.variantId === element.variant_id) {\n                    var array = [...dataToUpdate]; // make a separate copy of the array\n                    if (index !== -1) {\n                        array.splice(index, 1);\n                        setDataToUpdate(array);\n                    } \n                }\n            })\n        }\n    }\n\n    function addOrderItem(data, orderQuantity) {\n        \n        const newData = {\n            productTitle: data.title,\n            productId: data.id,\n            variantTitle: data.variant,\n            variantId: data.variant_id,\n            cost: data.cost,\n            quantity: orderQuantity,\n            subtotal: Math.round(data.cost * orderQuantity * 100, 2) / 100\n        }\n\n        if (variantsToUpdate.includes(data.variant_id)) {\n            // Item is in array so let's update it\n            dataToUpdate.forEach((item, index) => {                \n                if (item.variantId === data.variant_id) {\n                    var array = [...dataToUpdate]; // make a separate copy of the array\n                    if (index !== -1) {\n                        array.splice(index, 1);\n                        setDataToUpdate(array);\n                    } \n                    if (newData.quantity !== \"0\" && newData.quantity !== 0 && newData.quantity !== \"\") {\n                        setDataToUpdate(oldArray => [...oldArray, newData])   \n                    } else {\n                        var variantsArray = [...variantsToUpdate]; // make a separate copy of the array\n                        if (index !== -1) {\n                            variantsArray.splice(index, 1);\n                            setVariantsToUpdate(variantsArray);\n                        } \n                    }\n                }\n            })\n        } else {\n            if (newData.quantity !== \"0\" || newData.quantity !== \"\") {\n                setVariantsToUpdate(oldArray => [...oldArray, data.variant_id])\n                setDataToUpdate(oldArray => [...oldArray, newData])\n            }\n        }\n    }\n\n\n    function addItem() {\n        if (addProductName.current.value === \"\" || addVariantName.current.value === \"\" ||\n            addQuantity.current.value === \"\" || addCost.current.value === \"\") {\n                alert(\"Please fill out all fields to manually add an item.\")\n        } else {\n            const newData = {\n                productTitle: addProductName.current.value,\n                variantTitle: addVariantName.current.value,\n                quantity: addQuantity.current.value,\n                cost: addCost.current.value,\n                subtotal: addQuantity.current.value * addCost.current.value\n            }\n            setDataToUpdate(oldArray => [...oldArray, newData])\n        }\n    }\n\n    if (isLoading) {\n        return <div className=\"loader\"></div>;\n    }\n\n    return (\n        <div>   \n            <div className=\"top-content\">\n                <ProgressBar percentage={percentage}/>\n                <span className=\"close\" onClick={() =>  props.toggle()}>&times;    </span>\n                <h2 >{data && data[0] ? helpers.capitalizeFirstLetter(data[0].name) : \"No Products\"}</h2>\n                <div>\n                    <p>Products: {props.values.products}</p>\n                    <p>Low Products: {props.values.low_products}</p>\n                    <p>Deals: {props.values.deals}</p>\n                    <p>Order Minimum: {props.values.order_minimum}</p>\n                    <p>Contact Name: {helpers.capitalizeFirstLetter(props.values.contact_name)}</p>\n                    <p>Email: {props.values.email}</p>\n                    <p>Phone: {props.values.phone}</p>\n                </div>\n                {isOrdering ? <button onClick={backBtnClicked} className=\"edit-btn\" style={{backgroundColor: \"grey\"}}>Back</button> : null }\n                <button hidden={orderState === \"Choose Communication\"} onClick={(e) => orderBtnClicked(e)} className=\"edit-btn\" style={{backgroundColor: editColor}}>{btnText}</button>\n                {\n                commMethods \n                ? \n                commMethods.map((method, index) => {\n                    return (\n                        <button key={index} hidden={orderState !== \"Choose Communication\"} onClick={(e) => orderBtnClicked(e)} value={helpers.capitalizeFirstLetter(method.method)} className=\"edit-btn\" style={{backgroundColor: \"#76c32d\"}}>{helpers.capitalizeFirstLetter(method.method)}</button>\n                    )\n                })\n                :\n                <button>Error</button>\n                }\n                <button hidden={orderState !== \"Choose Communication\"} onClick={(e) => orderBtnClicked(e)} className=\"edit-btn\" value=\"Manual Order\" style={{backgroundColor: \"orange\"}}>Manual Order</button>\n            </div>\n      \n            {isOrdering \n            ?\n            <div>\n                <div>\n                    {orderState === \"Choose Variants/Qty\" \n                    ?\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Product</th>\n                                <th>Variant</th>\n                                <th>Current Quantity</th>\n                                <th>Purchases/day</th>\n                                <th>Stock Level</th>\n                                <th>Cost/unit</th>\n                                <th>Recent Order</th>\n                                <th>Order Quantity</th>\n                                \n                                <th>Remove</th>\n                                \n                            </tr>\n                        </thead>\n                        <tbody>\n                            {variantData.map((variant, index) => {\n                                const bgColor = variant.stockLevel === \"Low\" ? \"red\" : variant.stockLevel === \"Medium\" ? \"#FFD300\" : \"#4CAF50\"\n                                return (\n                                    <tr key={index}>\n                                        <td className=\"table-cell\">{variant.title}</td>\n                                        <td className=\"table-cell\">{variant.variant}</td>\n                                        <td className=\"table-cell\">{variant.quantity}</td>\n                                        <td className=\"table-cell\">{variant.salesPerDay}</td>\n                                        <td className=\"table-cell stock-level\" style={{backgroundColor: bgColor}}>{variant.stockLevel}</td>\n                                        <td>{helpers.formatter.format(variant.cost)}</td>\n                                        <td>{variant.recentOrder}</td>\n                                        <td ><input type=\"text\" placeholder=\"0\" style={{fontSize: \"16px\"}}placeholder={variant.orderQuantity || 0} onChange={(e) => {\n                                            variant.orderQuantity = e.target.value\n                                            addOrderItem(variant, e.target.value) \n                                        }}/></td>\n                                        <td><span className=\"close\" style={{color: \"red\"}} onClick={() =>  remove(variantData, variant)}>&times;</span></td>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n                    :\n                    [\"Choose Communication\", \"Review Order\", \"Submit Order\"].includes(orderState)\n                    ?\n                    <div>\n                        <table>\n                        <thead>\n                            <tr>\n                                <th>Product</th>\n                                <th>Variant</th>\n                                <th>Quantity</th>\n                                <th>Cost/unit</th>\n                                <th>Subtotal</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {dataToUpdate.map((order_item, index) => {\n                                return (\n                                    <tr key={index}>\n                                        <td>{order_item.productTitle}</td>\n                                        <td>{order_item.variantTitle}</td>\n                                        <td>{order_item.quantity}</td>\n                                        <td>{helpers.formatter.format(order_item.cost)}</td>\n                                        <td>{helpers.formatter.format(order_item.subtotal)}</td>\n                                    </tr>\n                                )  \n                            })}\n                        </tbody>\n                        </table>\n                        <div hidden={isAddItemHidden}>\n                            <input ref={addProductName} placeholder=\"Product Name\"></input>\n                            <input ref={addVariantName} placeholder=\"Variant Name\"></input>\n                            <input ref={addQuantity} placeholder=\"Quantity\"></input>\n                            <input ref={addCost} placeholder=\"Cost/unit\"></input>\n                            <button onClick={addItem}>Add Item</button>\n                        </div>\n                        <button onClick={() => setAddItemHidden(false)}>+</button>\n                        \n                    </div>\n                    :\n                <Table columns={columns} data={data} search={true} type=\"order\" checkbox={true} popupEnabled={false} perPage={5} update={(data, isAllSelected) => rowSelected(data, isAllSelected)}/>\n                }     \n                </div>\n            </div>\n            :\n            <Table columns={columns} data={data} type=\"order\" search={true} popupEnabled={false} perPage={5}/>\n}       \n  </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}