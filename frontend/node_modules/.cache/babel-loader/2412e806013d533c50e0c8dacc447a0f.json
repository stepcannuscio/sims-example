{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Products/ProductPopup.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/Popup.css\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport * as router from \"./productAPI\";\nimport SalesChart from \"../components/SalesChart\";\nimport DateFilter from \"../components/DateFilter\";\nexport default function ProductPopup(props) {\n  _s();\n\n  const [btnText, setBtnText] = useState(\"Edit\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [editColor, setEditColor] = useState(\"#76c32d\");\n  const [isPurchasesHidden, setPurchasesHidden] = useState(true);\n  const [data, setData] = useState([]);\n  const [variant, setVariant] = useState(\"default\");\n  const [originalPurchases, setOriginalPurchases] = useState([]);\n  const [dateFilter, setDateFilter] = useState('month');\n  const [startDate, setStartData] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [purchases, setPurchases] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [idsToUpdate, setIdsToUpdate] = useState([]);\n  const [dataToUpdate, setDataToUpdate] = useState([]);\n  const history = useHistory();\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  const imageStyle = {\n    width: \"15%\",\n    margin: \"20px 0\",\n    display: \"inline-block\",\n    float: \"left\"\n  };\n  const titleStyle = {\n    fontSize: \"30px\"\n  };\n\n  function getData(filter = \"month\", start = \"\", end = \"\", variantId = null) {\n    setLoading(true);\n    router.loadProduct(props.values.id, filter, start, end, variantId).then(data => {\n      if (data !== \"Error\") {\n        if (data.productData) {\n          setData(data.productData);\n          const newData = data.productData.map(a => ({ ...a\n          })); // make copy to compare dataToUpdate with to look for changes\n\n          setOriginalData(newData);\n          const newPurchases = data.purchaseData.map(a => ({ ...a\n          }));\n          setOriginalPurchases(newPurchases);\n        }\n\n        setPurchases(data.purchaseData);\n      } else {\n        alert(\"Error getting data. Please try again or contact Step.\");\n      }\n\n      setLoading(false);\n    });\n  }\n\n  function editBtnClicked(e) {\n    if (btnText === \"Edit\") {\n      setBtnText(\"Save\");\n    } else {\n      saveData();\n    }\n\n    setIsEditing(!isEditing);\n    setEditColor(editColor === \"#26B1FF\" ? \"#76c32d\" : \"#26B1FF\");\n  }\n\n  function saveData() {\n    const updatedData = [];\n    dataToUpdate.forEach(newItem => {\n      originalData.forEach(ogItem => {\n        if (ogItem.variant_id === newItem.variant_id) {\n          // Same item\n          if (newItem.quantity !== ogItem.quantity && newItem.quantity || newItem.cost !== ogItem.cost && newItem.cost) {\n            // data has changed, so should save this item\n            newItem.quantity = newItem.quantity ? newItem.quantity : ogItem.quantity;\n            newItem.cost = newItem.cost ? newItem.cost : ogItem.cost;\n            updatedData.push(newItem);\n          }\n        }\n      });\n    });\n\n    if (updatedData.length > 0) {\n      router.updateProduct(updatedData, props.values.id).then(data => {\n        if (data === \"Success\") {\n          setBtnText(\"Edit\");\n          getData();\n          setDataToUpdate([]);\n          setIdsToUpdate([]);\n        } else {\n          alert(\"Failed to save product. Please try again.\");\n          setBtnText(\"Edit\");\n        }\n      });\n    } else {\n      setBtnText(\"Edit\");\n    }\n  }\n\n  function editInput(data, value, type) {\n    data[type] = value; // update the value to be what was entered in the inputs\n\n    if (idsToUpdate.includes(data.variant_id)) {\n      // Item is in array so let's update it\n      dataToUpdate.forEach((item, index) => {\n        if (item.variant_id === data.variant_id) {\n          var array = [...dataToUpdate]; // make a separate copy of the array\n\n          if (index !== -1) {\n            array.splice(index, 1);\n            setDataToUpdate(array);\n          }\n\n          setDataToUpdate(oldArray => [...oldArray, data]);\n        }\n      });\n    } else {\n      setIdsToUpdate(oldArray => [...oldArray, data.variant_id]);\n      setDataToUpdate(oldArray => [...oldArray, data]);\n    }\n  }\n\n  useEffect(() => {\n    getData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => props.toggle(),\n        children: \"\\xD7    \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), data[0] ? /*#__PURE__*/_jsxDEV(\"img\", {\n        style: imageStyle,\n        src: data[0].image,\n        alt: \"product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 91\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: titleStyle,\n        children: data[0] ? data[0].title : \"Default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Shopify ID: \", data[0] ? data[0].shopify_id : \"Default\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: editBtnClicked,\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: editColor\n        },\n        children: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push(\"/vendors\", {\n          vendor: props.values.vendor\n        }),\n        className: \"edit-btn\",\n        style: {\n          color: \"#76c32d\"\n        },\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      hidden: originalPurchases.length <= 0,\n      style: {\n        textAlign: \"center\",\n        margin: \"20px 0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => setPurchasesHidden(!isPurchasesHidden),\n        children: [isPurchasesHidden ? \"Show\" : \"Hide\", \" Product Purchases\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), originalPurchases.length > 0 && !isPurchasesHidden ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DateFilter, {\n        dateFilter: dateFilter,\n        startDate: startDate,\n        endDate: endDate,\n        variant: variant,\n        variantData: data,\n        reload: (filter, start, end, id) => {\n          setDateFilter(filter);\n          setStartData(start);\n          setEndDate(end);\n          setVariant(id);\n          getData(filter, start, end, id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SalesChart, {\n        data: purchases\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this) : originalPurchases.length > 0 && isPurchasesHidden ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"No Purchases Yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Variant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Shopify ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Purchases/day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Cost/unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Stock Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Recent Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((item, index) => {\n          const bgColor = item.stockLevel === \"Low\" ? \"red\" : item.stockLevel === \"Medium\" ? \"#FFD300\" : \"#4CAF50\";\n          return isEditing ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.variant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.variant_shopify_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.salesPerDay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"table-cell\",\n                type: \"text\",\n                onChange: e => editInput(item, e.target.value, \"quantity\"),\n                placeholder: item.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"table-cell\",\n                type: \"text\",\n                onChange: e => editInput(item, e.target.value, \"cost\"),\n                placeholder: formatter.format(item.cost)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell stock-level\",\n              style: {\n                backgroundColor: bgColor\n              },\n              children: item.stockLevel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.recentOrder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.variant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.variant_shopify_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.salesPerDay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: formatter.format(item.cost)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell stock-level\",\n              style: {\n                backgroundColor: bgColor\n              },\n              children: item.stockLevel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.recentOrder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductPopup, \"9hObb0m8zwTffyrodeHlIKcG6qc=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProductPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductPopup\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Products/ProductPopup.js"],"names":["useState","useEffect","useHistory","router","SalesChart","DateFilter","ProductPopup","props","btnText","setBtnText","isEditing","setIsEditing","editColor","setEditColor","isPurchasesHidden","setPurchasesHidden","data","setData","variant","setVariant","originalPurchases","setOriginalPurchases","dateFilter","setDateFilter","startDate","setStartData","endDate","setEndDate","purchases","setPurchases","originalData","setOriginalData","isLoading","setLoading","idsToUpdate","setIdsToUpdate","dataToUpdate","setDataToUpdate","history","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","imageStyle","width","margin","display","float","titleStyle","fontSize","getData","filter","start","end","variantId","loadProduct","values","id","then","productData","newData","map","a","newPurchases","purchaseData","alert","editBtnClicked","e","saveData","updatedData","forEach","newItem","ogItem","variant_id","quantity","cost","push","length","updateProduct","editInput","value","type","includes","item","index","array","splice","oldArray","toggle","image","title","shopify_id","backgroundColor","vendor","color","textAlign","bgColor","stockLevel","variant_shopify_id","salesPerDay","target","format","recentOrder"],"mappings":"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","sourcesContent":["import \"../styles/Popup.css\"\nimport {useState, useEffect} from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport * as router from \"./productAPI\"\nimport SalesChart from \"../components/SalesChart\"\nimport DateFilter from \"../components/DateFilter\"\n\nexport default function ProductPopup(props) {\n\n    const [btnText, setBtnText] = useState(\"Edit\")\n    const [isEditing, setIsEditing] = useState(false)\n    const [editColor, setEditColor] = useState(\"#76c32d\")\n    const [isPurchasesHidden, setPurchasesHidden] = useState(true)\n    const [data, setData] = useState([])\n    const [variant, setVariant] = useState(\"default\")\n\n    const [originalPurchases, setOriginalPurchases] = useState([])\n    const [dateFilter, setDateFilter] = useState('month')\n    const [startDate, setStartData] = useState(\"\")\n    const [endDate, setEndDate] = useState(\"\")\n\n    const [purchases, setPurchases] = useState([])\n    const [originalData, setOriginalData] = useState([])\n    const [isLoading, setLoading] = useState(false)\n    const [idsToUpdate, setIdsToUpdate] = useState([])\n    const [dataToUpdate, setDataToUpdate] = useState([])\n\n    const history = useHistory()\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0\n      })\n\n    const imageStyle = {\n        width: \"15%\",\n        margin: \"20px 0\",\n        display: \"inline-block\",\n        float: \"left\"\n    }\n\n    const titleStyle = {\n        fontSize: \"30px\"\n    }\n\n    function getData(filter=\"month\", start=\"\", end=\"\", variantId=null) {\n\n        setLoading(true)\n        router.loadProduct(props.values.id, filter, start, end, variantId).then(data => {\n            if (data !== \"Error\") {\n                if (data.productData) {\n                    setData(data.productData)\n                    const newData = data.productData.map(a => ({...a})) // make copy to compare dataToUpdate with to look for changes\n                    setOriginalData(newData)\n                    const newPurchases = data.purchaseData.map(a => ({...a}))\n                    setOriginalPurchases(newPurchases)\n                }\n                setPurchases(data.purchaseData)                \n            } else {\n                alert(\"Error getting data. Please try again or contact Step.\")\n            }\n            setLoading(false)    \n        });\n      }\n\n    function editBtnClicked(e) {\n        if (btnText === \"Edit\") {\n            setBtnText(\"Save\")\n        } else {\n            saveData()\n        }\n        setIsEditing(!isEditing)\n        setEditColor(editColor === \"#26B1FF\" ? \"#76c32d\" : \"#26B1FF\")\n    }\n\n    function saveData() {\n\n        const updatedData = []\n\n        dataToUpdate.forEach(newItem => {\n            originalData.forEach(ogItem => {\n                if (ogItem.variant_id === newItem.variant_id) {\n                    // Same item\n                    if ((newItem.quantity !== ogItem.quantity && newItem.quantity) || \n                        (newItem.cost !== ogItem.cost && newItem.cost ))\n                        {\n                            // data has changed, so should save this item\n                            newItem.quantity = newItem.quantity ? newItem.quantity : ogItem.quantity\n                            newItem.cost = newItem.cost ? newItem.cost : ogItem.cost\n\n                            updatedData.push(newItem)\n                        }\n                }\n            })\n        })\n\n        if (updatedData.length > 0) {\n            router.updateProduct(updatedData, props.values.id).then(data => {\n                if (data === \"Success\") {\n                    setBtnText(\"Edit\")\n                    getData()\n                    setDataToUpdate([])\n                    setIdsToUpdate([])\n                } else {\n                    alert(\"Failed to save product. Please try again.\")\n                    setBtnText(\"Edit\")\n                }\n            })\n        } else {\n            setBtnText(\"Edit\")\n        }\n    }\n\n    function editInput(data, value, type) {\n        data[type] = value // update the value to be what was entered in the inputs\n        if (idsToUpdate.includes(data.variant_id)) {\n            // Item is in array so let's update it\n            dataToUpdate.forEach((item, index) => {\n                if (item.variant_id === data.variant_id) {\n                    var array = [...dataToUpdate]; // make a separate copy of the array\n                    if (index !== -1) {\n                        array.splice(index, 1);\n                        setDataToUpdate(array);\n                    } \n                        setDataToUpdate(oldArray => [...oldArray, data])   \n                }  \n            })\n        } else {\n            setIdsToUpdate(oldArray => [...oldArray, data.variant_id])\n            setDataToUpdate(oldArray => [...oldArray, data])\n        }             \n    }\n\n\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (isLoading) {\n        return <div className=\"loader\"></div>;\n    }\n    \n    return (\n        <div>\n            <div className=\"top-content\">\n                <span className=\"close\" onClick={() => props.toggle()}>&times;    </span>\n                {data[0]  ? <img style={imageStyle} src={data[0].image} alt=\"product\"/> : <p></p>}\n                \n                <h2 style={titleStyle}>{data[0] ? data[0].title : \"Default\"}</h2>\n                \n                <p>Shopify ID: {data[0] ? data[0].shopify_id : \"Default\"}</p>\n                <button onClick={editBtnClicked} className=\"edit-btn\" style={{backgroundColor: editColor}}>{btnText}</button>\n                <button onClick={() => history.push(\"/vendors\", {vendor: props.values.vendor})}className=\"edit-btn\" style={{color: \"#76c32d\"}}>Order</button>\n            </div>\n\n        <div hidden={originalPurchases.length <= 0} style={{textAlign: \"center\", margin: \"20px 0\"}}>\n          <button className=\"btn\" onClick={() => setPurchasesHidden(!isPurchasesHidden)}>{isPurchasesHidden ? \"Show\" : \"Hide\"} Product Purchases</button>\n        </div>   \n            \n            {originalPurchases.length > 0 && !isPurchasesHidden\n            ? \n            <div>\n                <DateFilter dateFilter={dateFilter} startDate={startDate} endDate={endDate} variant={variant} variantData={data} reload={(filter, start, end, id) => {\n                    setDateFilter(filter)\n                    setStartData(start)\n                    setEndDate(end)\n                    setVariant(id)\n                    getData(filter, start, end, id)\n                }}/>\n                <SalesChart data={purchases}/>\n            </div>\n            :\n            originalPurchases.length > 0 && isPurchasesHidden\n            ?\n            <p></p>\n            :\n            <p style={{textAlign: \"center\"}}>No Purchases Yet!</p>\n            }     \n\n            <table style={{textAlign: \"center\"}}>\n                <thead >\n                    <tr>\n                        <th className=\"table-header\">Variant</th>\n                        <th className=\"table-header\">Shopify ID</th>            \n                        <th className=\"table-header\">Purchases/day</th>\n                        <th className=\"table-header\">Quantity</th>\n                        <th className=\"table-header\">Cost/unit</th>\n                        <th className=\"table-header\">Stock Level</th>\n                        <th className=\"table-header\">Recent Order</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {data.map((item, index) => {   \n                    const bgColor = item.stockLevel === \"Low\" ? \"red\" : item.stockLevel === \"Medium\" ? \"#FFD300\" : \"#4CAF50\"\n                    return (  \n                        isEditing \n                            ? \n                        <tr key={index}>\n                            <td className=\"table-cell\">{item.variant}</td>\n                            <td className=\"table-cell\">{item.variant_shopify_id}</td>\n                            <td className=\"table-cell\">{item.salesPerDay}</td>\n                            <td className=\"table-cell\">\n                                <input className=\"table-cell\" type=\"text\" onChange={(e) => editInput(item, e.target.value, \"quantity\")} placeholder={item.quantity} />\n                            </td>\n                            <td className=\"table-cell\">\n                                <input className=\"table-cell\" type=\"text\" onChange={(e) => editInput(item, e.target.value, \"cost\")} placeholder={formatter.format(item.cost)} />\n                            </td>\n                            <td className=\"table-cell stock-level\" style={{backgroundColor: bgColor}}>{item.stockLevel}</td>                        \n                            <td className=\"table-cell\">{item.recentOrder}</td>\n                        </tr>\n                        :\n                        <tr key={index}>\n                          <td className=\"table-cell\">{item.variant}</td>\n                            <td className=\"table-cell\">{item.variant_shopify_id}</td>\n                            <td className=\"table-cell\">{item.salesPerDay}</td>\n                            <td className=\"table-cell\">\n                                {item.quantity}\n                            </td>\n                            <td className=\"table-cell\">\n                                {formatter.format(item.cost)}\n                            </td>\n                            <td className=\"table-cell stock-level\" style={{backgroundColor: bgColor}}>{item.stockLevel}</td>                        \n                            <td className=\"table-cell\">{item.recentOrder}</td>\n                        </tr>\n                    ) \n                })}   \n                </tbody>\n            </table>            \n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}