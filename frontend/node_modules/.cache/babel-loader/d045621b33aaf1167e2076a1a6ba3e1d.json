{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Products/ProductPopup.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/Popup.css\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport * as router from \"./productAPI\";\nimport ProductSalesChart from \"./ProductSalesChart\";\nimport DateFilter from \"../components/DateFilter\";\nexport default function ProductPopup(props) {\n  _s();\n\n  const [btnText, setBtnText] = useState(\"Edit\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [editColor, setEditColor] = useState(\"#76c32d\");\n  const [data, setData] = useState([]); // const [wooPurchases, setWooPurchases] = useState([])\n  // const [shopifyPurchases, setShopifyPurchases] = useState([])\n\n  const [purchases, setPurchases] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [idsToUpdate, setIdsToUpdate] = useState([]);\n  const [dataToUpdate, setDataToUpdate] = useState([]); // console.log(wooPurchases)\n  // console.log(shopifyPurchases)\n\n  console.log(purchases);\n  const history = useHistory();\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0\n  });\n  const imageStyle = {\n    width: \"15%\",\n    margin: \"20px 0\",\n    display: \"inline-block\",\n    float: \"left\"\n  };\n  const titleStyle = {\n    fontSize: \"30px\"\n  };\n\n  function getData(filter = \"month\", startDate = \"\", endDate = \"\") {\n    setLoading(true);\n    router.loadProduct(props.values.id, filter, startDate, endDate).then(data => {\n      if (data) {\n        if (data.productData) {\n          setData(data.productData);\n          const newData = data.productData.map(a => ({ ...a\n          })); // make copy to compare dataToUpdate with to look for changes\n\n          console.log(newData);\n          setOriginalData(newData);\n        }\n\n        setPurchases(data.purchaseData);\n        console.log(data.purchaseData); // setShopifyPurchases(data.shopifyPurchaseData)\n        // setWooPurchases(data.wooPuchaseData)\n      }\n\n      setLoading(false);\n    });\n  }\n\n  function editBtnClicked(e) {\n    if (btnText === \"Edit\") {\n      setBtnText(\"Save\");\n    } else {\n      // Save data\n      saveData(); // const updateDict = {}\n      // dataToUpdate.forEach(item => {\n      //     updateDict[item.id] = item.quantity\n      // })\n      // if (dataToUpdate.length > 0) {\n      //     router.updateProduct(props.values.id, updateDict).then(data => {\n      //         if (data === \"Success\") {\n      //             setBtnText(\"Edit\")\n      //             getData()\n      //         } else {\n      //             setBtnText(\"Edit\")\n      //         }\n      //     })\n      // } else {\n      //     setBtnText(\"Edit\")\n      // } \n    }\n\n    setIsEditing(!isEditing);\n    setEditColor(editColor === \"#26B1FF\" ? \"#76c32d\" : \"#26B1FF\");\n  }\n\n  function saveData() {\n    const updatedData = [];\n    console.log(data);\n    console.log(originalData);\n    console.log(dataToUpdate);\n    dataToUpdate.forEach(newItem => {\n      originalData.forEach(ogItem => {\n        if (ogItem.variant_id === newItem.variant_id) {\n          console.log(ogItem);\n          console.log(newItem); // Same item\n\n          if (newItem.quantity !== ogItem.quantity && newItem.quantity || newItem.cost !== ogItem.cost && newItem.cost) {\n            // data has changed, so should save this item\n            newItem.quantity = newItem.quantity ? newItem.quantity : ogItem.quantity;\n            newItem.cost = newItem.cost ? newItem.cost : ogItem.cost;\n            updatedData.push(newItem);\n          }\n        }\n      });\n    });\n    console.log(updatedData);\n    router.updateProduct(updatedData, props.values.id).then(data => {\n      if (data === \"Success\") {\n        setBtnText(\"Edit\");\n        getData();\n        setDataToUpdate([]);\n        setIdsToUpdate([]);\n      } else {\n        alert(\"Failed to save product. Please try again.\");\n        setBtnText(\"Edit\");\n      }\n    });\n  } // function editInput(e) {\n  //     if (e.target.value !== e.target.placeholder) {\n  //         // Quantity value has changed for this variant\n  //         const newData = {\n  //             \"id\": e.target.id,\n  //             \"quantity\": e.target.value\n  //         }\n  //         setDataToUpdate(oldArray => [...oldArray, newData])\n  //     }\n  // }\n\n\n  function editInput(data, value, type) {\n    data[type] = value; // update the value to be what was entered in the inputs\n\n    if (value !== \"0\" && value !== 0 && value !== \"\") {\n      if (idsToUpdate.includes(data.variant_id)) {\n        // Item is in array so let's update it\n        dataToUpdate.forEach((item, index) => {\n          if (item.variant_id === data.variant_id) {\n            var array = [...dataToUpdate]; // make a separate copy of the array\n\n            if (index !== -1) {\n              array.splice(index, 1);\n              setDataToUpdate(array);\n            }\n\n            setDataToUpdate(oldArray => [...oldArray, data]);\n          }\n        });\n      } else {\n        setIdsToUpdate(oldArray => [...oldArray, data.variant_id]);\n        setDataToUpdate(oldArray => [...oldArray, data]);\n      }\n    }\n  }\n\n  useEffect(() => {\n    getData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: () => props.toggle(),\n        children: \"\\xD7    \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), data[0] ? /*#__PURE__*/_jsxDEV(\"img\", {\n        style: imageStyle,\n        src: data[0].image,\n        alt: \"product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 91\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: titleStyle,\n        children: data[0] ? data[0].title : \"Default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Shopify ID: \", data[0] ? data[0].shopify_id : \"Default\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: editBtnClicked,\n        className: \"edit-btn\",\n        style: {\n          backgroundColor: editColor\n        },\n        children: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push(\"/vendors\", {\n          vendor: props.values.vendor\n        }),\n        className: \"edit-btn\",\n        style: {\n          color: \"#76c32d\"\n        },\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DateFilter, {\n      reload: (dateFilter, startDate, endDate) => getData(dateFilter, startDate, endDate)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductSalesChart, {\n      data: purchases\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Variant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Shopify ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Purchases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Cost/unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Stock Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"table-header\",\n            children: \"Recent Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((item, index) => {\n          return isEditing ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.variant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.variant_shopify_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.purchases\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"table-cell\",\n                type: \"text\",\n                onChange: e => editInput(item, e.target.value, \"quantity\"),\n                placeholder: item.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"table-cell\",\n                type: \"text\",\n                onChange: e => editInput(item, e.target.value, \"cost\"),\n                placeholder: formatter.format(item.cost)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.stockLevel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.recentOrder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.variant\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.variant_shopify_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.purchases\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: formatter.format(item.cost)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.stockLevel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"table-cell\",\n              children: item.recentOrder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductPopup, \"BU4TavfPFzNhe6jmVO/WH/K/d40=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProductPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductPopup\");","map":{"version":3,"sources":["/Users/stepcannuscio/Desktop/Home/Clients/Burman's Health Shop/sims/frontend/src/Products/ProductPopup.js"],"names":["useState","useEffect","useHistory","router","ProductSalesChart","DateFilter","ProductPopup","props","btnText","setBtnText","isEditing","setIsEditing","editColor","setEditColor","data","setData","purchases","setPurchases","originalData","setOriginalData","isLoading","setLoading","idsToUpdate","setIdsToUpdate","dataToUpdate","setDataToUpdate","console","log","history","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","imageStyle","width","margin","display","float","titleStyle","fontSize","getData","filter","startDate","endDate","loadProduct","values","id","then","productData","newData","map","a","purchaseData","editBtnClicked","e","saveData","updatedData","forEach","newItem","ogItem","variant_id","quantity","cost","push","updateProduct","alert","editInput","value","type","includes","item","index","array","splice","oldArray","toggle","image","title","shopify_id","backgroundColor","vendor","color","dateFilter","textAlign","variant","variant_shopify_id","target","format","stockLevel","recentOrder"],"mappings":"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","sourcesContent":["import \"../styles/Popup.css\"\nimport {useState, useEffect} from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport * as router from \"./productAPI\"\nimport ProductSalesChart from \"./ProductSalesChart\"\nimport DateFilter from \"../components/DateFilter\"\n\nexport default function ProductPopup(props) {\n\n    const [btnText, setBtnText] = useState(\"Edit\")\n    const [isEditing, setIsEditing] = useState(false)\n    const [editColor, setEditColor] = useState(\"#76c32d\")\n    const [data, setData] = useState([])\n    // const [wooPurchases, setWooPurchases] = useState([])\n    // const [shopifyPurchases, setShopifyPurchases] = useState([])\n    const [purchases, setPurchases] = useState([])\n    const [originalData, setOriginalData] = useState([])\n    const [isLoading, setLoading] = useState(false)\n    const [idsToUpdate, setIdsToUpdate] = useState([])\n    const [dataToUpdate, setDataToUpdate] = useState([])\n\n    // console.log(wooPurchases)\n    // console.log(shopifyPurchases)\n    console.log(purchases)\n\n    const history = useHistory()\n\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0\n      })\n\n    const imageStyle = {\n        width: \"15%\",\n        margin: \"20px 0\",\n        display: \"inline-block\",\n        float: \"left\"\n    }\n\n    const titleStyle = {\n        fontSize: \"30px\"\n    }\n\n    function getData(filter=\"month\", startDate=\"\", endDate=\"\") {\n        setLoading(true)\n        router.loadProduct(props.values.id, filter, startDate, endDate).then(data => {\n            if (data) {\n                if (data.productData) {\n                    setData(data.productData)\n                    const newData = data.productData.map(a => ({...a})) // make copy to compare dataToUpdate with to look for changes\n                    console.log(newData)\n                    setOriginalData(newData)\n                }\n                \n                setPurchases(data.purchaseData)\n                console.log(data.purchaseData)\n                // setShopifyPurchases(data.shopifyPurchaseData)\n                // setWooPurchases(data.wooPuchaseData)\n                \n    \n                  \n            }\n            setLoading(false)    \n        });\n      }\n\n    function editBtnClicked(e) {\n        if (btnText === \"Edit\") {\n            setBtnText(\"Save\")\n        } else {\n            // Save data\n            saveData()\n            // const updateDict = {}\n            // dataToUpdate.forEach(item => {\n            //     updateDict[item.id] = item.quantity\n            // })\n         \n            // if (dataToUpdate.length > 0) {\n            //     router.updateProduct(props.values.id, updateDict).then(data => {\n            //         if (data === \"Success\") {\n            //             setBtnText(\"Edit\")\n            //             getData()\n            //         } else {\n            //             setBtnText(\"Edit\")\n            //         }\n            //     })\n            // } else {\n            //     setBtnText(\"Edit\")\n            // } \n        }\n        setIsEditing(!isEditing)\n        setEditColor(editColor === \"#26B1FF\" ? \"#76c32d\" : \"#26B1FF\")\n    }\n\n    function saveData() {\n\n        const updatedData = []\n\n        console.log(data)\n        console.log(originalData)\n        console.log(dataToUpdate)\n\n        dataToUpdate.forEach(newItem => {\n            originalData.forEach(ogItem => {\n                if (ogItem.variant_id === newItem.variant_id) {\n\n                    console.log(ogItem)\n                    console.log(newItem)\n                    // Same item\n                    if ((newItem.quantity !== ogItem.quantity) && newItem.quantity || \n                        (newItem.cost !== ogItem.cost) && newItem.cost )\n                        {\n                            // data has changed, so should save this item\n                            newItem.quantity = newItem.quantity ? newItem.quantity : ogItem.quantity\n                            newItem.cost = newItem.cost ? newItem.cost : ogItem.cost\n\n                            updatedData.push(newItem)\n                        }\n                }\n            })\n        })\n\n        console.log(updatedData)\n        router.updateProduct(updatedData, props.values.id).then(data => {\n            if (data === \"Success\") {\n                setBtnText(\"Edit\")\n                getData()\n                setDataToUpdate([])\n                setIdsToUpdate([])\n            } else {\n                alert(\"Failed to save product. Please try again.\")\n                setBtnText(\"Edit\")\n            }\n        })\n    }\n\n    // function editInput(e) {\n    //     if (e.target.value !== e.target.placeholder) {\n    //         // Quantity value has changed for this variant\n    //         const newData = {\n    //             \"id\": e.target.id,\n    //             \"quantity\": e.target.value\n    //         }\n    //         setDataToUpdate(oldArray => [...oldArray, newData])\n    //     }\n    // }\n\n    function editInput(data, value, type) {\n        data[type] = value // update the value to be what was entered in the inputs\n\n        if (value !== \"0\" && value !== 0 && value !== \"\") {\n            \n\n            if (idsToUpdate.includes(data.variant_id)) {\n                // Item is in array so let's update it\n                dataToUpdate.forEach((item, index) => {\n                    \n                    if (item.variant_id === data.variant_id) {\n                        var array = [...dataToUpdate]; // make a separate copy of the array\n                        if (index !== -1) {\n                            array.splice(index, 1);\n                            setDataToUpdate(array);\n                        } \n                            setDataToUpdate(oldArray => [...oldArray, data])   \n                    }  \n                })\n            } else {\n                    setIdsToUpdate(oldArray => [...oldArray, data.variant_id])\n                    setDataToUpdate(oldArray => [...oldArray, data])\n            }\n        }                 \n    }\n\n\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (isLoading) {\n        return <div className=\"loader\"></div>;\n    }\n    \n    return (\n        <div>\n            <div className=\"top-content\">\n                <span className=\"close\" onClick={() => props.toggle()}>&times;    </span>\n                {data[0]  ? <img style={imageStyle} src={data[0].image} alt=\"product\"/> : <p></p>}\n                \n                <h2 style={titleStyle}>{data[0] ? data[0].title : \"Default\"}</h2>\n                \n                <p>Shopify ID: {data[0] ? data[0].shopify_id : \"Default\"}</p>\n                <button onClick={editBtnClicked} className=\"edit-btn\" style={{backgroundColor: editColor}}>{btnText}</button>\n                <button onClick={() => history.push(\"/vendors\", {vendor: props.values.vendor})}className=\"edit-btn\" style={{color: \"#76c32d\"}}>Order</button>\n            </div>\n            <DateFilter reload = {(dateFilter, startDate, endDate) => getData(dateFilter, startDate, endDate)}/>\n            <ProductSalesChart data={purchases}/>\n            \n            <table style={{textAlign: \"center\"}}>\n                <thead >\n                    <tr>\n\n                        <th className=\"table-header\">Variant</th>\n                        <th className=\"table-header\">Shopify ID</th>            \n                        <th className=\"table-header\">Purchases</th>\n                        <th className=\"table-header\">Quantity</th>\n                        <th className=\"table-header\">Cost/unit</th>\n                        <th className=\"table-header\">Stock Level</th>\n                        \n                        <th className=\"table-header\">Recent Order</th>\n\n                        {/* <th className=\"table-header\">Variant</th>\n                        <th className=\"table-header\">Price</th>\n                        <th className=\"table-header\">Quantity</th> */}\n                    </tr>\n                </thead>\n                <tbody>\n                {data.map((item, index) => {\n                    return (  \n                        isEditing \n                            ? \n                        <tr key={index}>\n                            <td className=\"table-cell\">{item.variant}</td>\n                            <td className=\"table-cell\">{item.variant_shopify_id}</td>\n                            <td className=\"table-cell\">{item.purchases}</td>\n                            <td className=\"table-cell\">\n                                <input className=\"table-cell\" type=\"text\" onChange={(e) => editInput(item, e.target.value, \"quantity\")} placeholder={item.quantity} />\n                            </td>\n                            <td className=\"table-cell\">\n                                <input className=\"table-cell\" type=\"text\" onChange={(e) => editInput(item, e.target.value, \"cost\")} placeholder={formatter.format(item.cost)} />\n                            </td>\n                            <td className=\"table-cell\">{item.stockLevel}</td>                        \n                            <td className=\"table-cell\">{item.recentOrder}</td>\n                            \n                        </tr>\n                        :\n                        <tr key={index}>\n                          <td className=\"table-cell\">{item.variant}</td>\n                            <td className=\"table-cell\">{item.variant_shopify_id}</td>\n                            <td className=\"table-cell\">{item.purchases}</td>\n                            <td className=\"table-cell\">\n                                {item.quantity}\n                            </td>\n                            <td className=\"table-cell\">\n                                {formatter.format(item.cost)}\n                            </td>\n                            <td className=\"table-cell\">{item.stockLevel}</td>                        \n                            <td className=\"table-cell\">{item.recentOrder}</td>\n                        </tr>\n                 \n                    ) \n                })}   \n                </tbody>\n            </table>            \n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}